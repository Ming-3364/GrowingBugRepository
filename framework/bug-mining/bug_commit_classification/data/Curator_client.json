{"number": ["7e7c2079357fbf10081906d7b783f3483bdecbe7", "4b96f18b311485d006f65c1462d2cdd0b5838c84", "917a98ff79954dba0180745627c30c73d885b64c", "d4aa4424a2b2e3f3c640937d8d539e8c76e2564a", "c1b6d86a4a7503b2a6dbc825a951a6aabcbb71b1", "fd5dc4bd8ed3ea973b3063ad11ccaeeff7238883", "a5b24b8b5d954aea17fc0b1a50d23bb460482658", "ae1d2ebeab6373b3a3b55c0d4a4a6e1593f7380b", "f1f9d5f8a09eee0ce288aa39c6a47700ae3fcd07", "6f7b3e7c79819658516971497d3ce9190de965f6", "137159bb919cb7915eb1ddb3a3dfe369bd2253b9", "a5749661bc8561f79d803a0adfbc503f2ed39b56", "d5666ab9ca22f45b905d6ffbf2b33fa30b38e15e", "39ed945af4147289d98cd2089e39954d09448577", "800fdf4c5cbe3f0e3cebc64357707ba743fc46e2", "fdb8f79c1eddecf29f3cf23e43aec7ddba6ff7b0", "fdb8f79c1eddecf29f3cf23e43aec7ddba6ff7b0", "65ac6a4dce80d7ed297f6ef126fe1e4aae37ff1b", "35437e6c3b08f315b5747e95dfafd8a20cf731d5", "1d6891a9d6dbfc97988c6e51520240c96e6e9394", "1d6891a9d6dbfc97988c6e51520240c96e6e9394", "edf9f40f81b9a806ba1123181df40b45faf80238", "751724b6a831e4ffd14f6e8cc76c9f1954d2c629", "3f84f0e27a2506b133ca47e46b7bd39a08822738", "66c81e05c78519b3f82f59bcae05345e5e24c189", "d1f21cf7700e33bd65c44eefb4e82c0c3ba24346", "5d569518ea617f30296fd3ca983034940a26529d", "c05a61bb58e5625fa3ca29871d0d9971271fcf49", "aa7b0cff8f00df52aa46f8b86e2ba9e71943e739", "bc0a22acd80894578248b51b4843196fcca3565a", "7f353ec48c5a22f3e3e5c348b6f286e96c0c6b3b", "6e4466ffae5f0a354de8bdc98ac82f20009cd630", "05f6a56730a956b5a977a11e05aa875fe862dedf", "1429676ea43ecfbfe3dd7f28f222d58105e41d3f", "6a9c6ab6757158d50d00bedfdd95582aa4554fc3", "d13a12ff90dcfeb06f58d29178954c00a5dbb6eb", "26ffdfb89c685873b5592db29c541f92c22a06cd", "4d6069a03cf6ff3020abc6faa137515772bd7002", "91e3a643ff6c562d30e75a61ed2d626befbcc40c", "60e9be8fce41368f25931c998bb287b3750d41ba", "ba8ade007acae43c93a961418d47031d803eb61b", "cc30b67c8dbe24babd31ed654e9536fe776b8a18", "49485b8fa40c5d5fa95e60ffea3514acf548964b", "f9128a87c837fd4a687c3d54c73ea779e46085fc", "2af84b9f7cfee179e6a88f490297f0f3f6419f36", "21b0877842d12c61f5c8c7f886d596809e12a628", "931f1de5c4f72b71e96ea2071add297194e053bd", "ca1e9fbbb28a9deaa7f6187f321fd446f471db6d", "171a200664614d0abb72027c4200150dfa4d2564", "20a3db363273429cec80f511a32a737886c6f3c8", "74013456da1260f9155a72fa651d5d6fa449d984", "f7e728b99b8bf8cf1e0b2d68da1c3bf10e75d52a", "4a0e022ce361e21b9f1751434166c5a90c4a8845", "4cd731c92d34a075d9d5a9610ec2610d69aa7792", "7442357b7e6dc76ff76c6bc6a3d361b65815f626", "46e5462fb3a5217a2e3077d8e99a0e1b81330f78", "b1ffac9145750e03c01c4ce6823f4a8536054a1e", "2e69bbf7cc2a128f1e2f98ee6a02ba6d1e47c34f", "956176629f5cc9d7c53b52068e4ebdcbdfb86e68", "fcec4b650d186932d3e7164f09c15b4a6e1e06a4", "9b73d11bc03c6e37567e237e96c36cdf93e4ff66", "08102b0f09f1b1ac79699d121bca8076853f4e44", "600a2f94bd968ae8e94f237be8a0962f7af3d538", "bc8e981662cfc996a6e20507e49be80de2aca759", "21f3ac252fbd31cdf0e0c2069013d6ab7923eec5", "52c9c7d6fecb8df5eb93f0f5a28a2cf3f6268091", "c53f59dcc048006bce0a5df3c0718ccdbb39774f", "3478aca7ed6852484b5574a6082f4bb75c04a1e0", "7e8a76ecfc161421d0565710c976b3eae9f5f11c", "d55585fd4652ba01ec0768e37a7996585a2c55fc", "882437cb8a477590024863c8356ac272b377f75e", "b4da5f5ca279905097b1fe7d5eb9710c6dc8bdd2", "ee2f1e222072f5e7ce4e7c17db0b4fff3a2e7408", "f12f35d0f78198e1f9f89a8cf3dafc7b07404220", "1d3bed5ab0db77c0dbeb679d8b8f06cd21348085", "56525235cc63b9c74b6286a44ef89f3ffca94a1a", "b1d2198a75d6e01b48789635ba648bedc542c439", "8ef32cc275f94a10576fc1a963d9f8db50ad382f", "630c009a410eff13c4428704700d566abe417bda", "33c19d6279ca6b0e614cda82b29fb6bdf789e7b5", "822890844a608caae20a7c7ce8b2b7aaa2b0f964", "d124a0a632e7817df69b305d47e4c3dd17429485", "55ca08cb1aef3deada6ae6bb128c6fb2f0608777", "9951d4eceecdd97e73291c061ba04ec114ed9e53", "003acc6027aa63e59b5de3b0d1da7e33c2b9f9cc", "e657cf66bc54dec762f0355a56cf3b3504a960d9", "24aa3c38ac4e78015f6a594c6d3604d3d9c30532", "9b68e19a278e025fa5884445a2b2519463b57445", "c11111838b118331f237a562636f37679533aa38", "2827ba81b5c66ec4f864cc2e3582776e955158ac", "a8ec17ece060484e0e6ce723568ed9505f6b82ef", "a9271ff6033557efeda01e4c543d0f840519e64d", "75aa991e366cebdb6873509c7ced252731a2187c", "cee1c0eabf1e899b239bf69c443fe1e8316a93cd", "c4f3a505b70f02bf209613307b3bdefaff7bf4fe", "a69f3a435755b1dfdd1e706cb028d3169a7c9632", "8fae7856edc1a5269fd012c683860e0b150e13b3", "5429a217bb23901aaf2b187bb8c1d760d0a76bcc", "45df7ba71f14a5f9751061a7dff956312bfdd421", "1a2a94b625e7e1b5e535414e397e9b3a4173ca1b", "e001e0098f64baa8e0b3b887507bc98972c775dc", "ec2f9bd555d01b324bd5ef690b1036d98e1f3702", "62f3c33cdb556eccf6fe1cc87ee74b3458431777", "2266ca1fb1414bc8306fb1d6c4ac632a841f36ec", "7d972593a53f260c78d18bff9d8929b5dea94fe4", "0d6d82a4d47d7ac56118fbf19d51b5db2e67232e", "dbdcf2f1cd2eae8d91d78619dd039c154b4aa52a", "ec4083f99d97a0c6557f0ce9b9132a75909bd177", "0e876c842cb0cb357997b2e914d627bebc78130b", "3a4d541a383a1a42c1f605056d75d36da26a76c5", "7ad12754a9f1bd4ac9242886c245e3e2d2fa7dc4", "83e1a855a15e17a37ec02d441d6c75e7f08a2617", "a47c03671452a20e70deb2b8668d70bd92d78ce7", "9323d9a7a8555494f524e35fa59d3b776ac27977", "fc11514987e0ad25046fa384672c6f16408b736b", "017e199a32647d7c7a4bbd8eaf4339b5e45d472a", "c65e091417e1da2246203cb9b2cce82ecd87784f", "2db9a6df95b8dcbe17de64fb89100bd3b7a5469b", "c9a5c4a234efa7bb684b68452f105dc7dc3cfd09", "febfceca0b7409136a16d51d211212dea621cdc5", "570352d547ad32270109692abccc2ea30ea74294", "b8715ca8cd7e612daeffa3be69442839d051dee6", "94fce2ca94f827cd3d3c793dbf044bff39ef52a7", "909860665bd3b61e32ab5f72d4100c5b380ea970", "4190147dbedb350ce1d42eb1ace86de0d0c9aef9", "b571357e645d1a42242ace6118b15325413894fa", "1c194b4262df96fcf7ed378c2001146abde2a65f", "bea6b80ec2622251156143b45c49a7f7871082cd", "c846cf16e96b5a79d4e95fef5f292aa66ef206ec", "63444f6a2273bd910b33ecb10d1106cb2225e4fb", "b66e9b6a7afbbb9fc0a95adada26c9f774a54c13", "180a1598f7b1550c6cab65bea81053e2d0a0ae60", "d5f55177f4c7a4bd1e95d1e872d65463909a6d35", "5398b72f00ccc0f2ea995865fcaf92d73c6c5818", "462121f98a4129f9b96ff0a5ebeafe4eac224a38", "267492779ac127d22c67791c799b73d46dfeac7a", "b174dfb145ebaea51bcd348cec950997725e7b3f", "785e9f6c8a528d0c07652450471dcb71a5717776", "15a0aaceca48da49898dc25a9c7cc6521708e8ff", "a86a667bb1213fec26fbdb8354bdc01b9fe70396", "5df92bf8861184d25b3e367f6fa5fc595fe8b6e0", "6a7704d98633f228fb6334df879adac0bf18f761", "9ecf1f154f52b50b4013c0e7faf6b0b505df9ef6", "879170804c85a1fa23a2417447f1d2d568460465", "59bab738f56e3e5017bcba8984c1d8ca24e1e71a", "6e98562d8f0b15fc008ac4a0cd682837813a842a", "5a61738df06e5e4de80317ef1001ef604d7fdb39", "0b7ae7e3672a9c817fe31144cd6b18d9a357f124", "de1d38cfc9da9ee8419a95599c1ef69b3c17a40b", "bef0b8b7683b65cbeb8bd6dfaf5b54858936180b", "351c67c978d77f6f7241808b6b1b8824ffd8c52a", "3c468b235ee0dc5942fc1658687deca5124b1441", "048688a36856d1ef7e080410b8818952210fb1e8", "ab3ff72d309378f3c6e166e47e75b7ba49835f20", "98374bcd767271e789e955e857bf10d4e992603f", "c7968b9295c450932e1bbb566ab4f910f68a7393", "6e8155981e6a67e9aab595908092b3778c2ca993", "426db3d355ef69d89a8c2b3d9f918c9f4be5989c", "0359bc5ab683285f44523d1445ef2eb8116380c4", "332c20b375510b81bbc2a15fcccfacb7d57ec93d", "20d8c066f45209089eb26baf5b5d19cddc5e38b3", "a937dfacf68869b1f6a860ffd02993108da99382", "54a0ea7c0a9302c1f3878d3e2140f0ba7a96570e", "d8df3b13d616d2b53a33ab8f824ec89642f7f0d8", "987430a5bac164268368a293a3f2ae5328b8d581", "139ec3b6181f2e13c8565ee20b7c24d34f4d5517", "7695f895eac5c37e60e371a20142f097dca5b3af", "27f815a0c596312ebff83688dec308cc712a9402", "a561f9a6a17c6fba82551b56ffadcc1b68df46cc", "fd4cd433eec2ea302fa5ca0c1f362f94ceb53bf7", "86e442a1d9a0907c12f21787ba26bc6be9b80e7b", "aa174242c9bdd248d4cc6c6e01dbdc087ec1ac75", "ec5b03f18626a8e575fe3dba47f5ca98da6299aa", "c676e3e2d0e9fdc83f5fde1be1baeb808d00f9d7", "23e4513cd91bb108d42ded0317801bc698f81dff", "41f02e852147138673efa4b0e8c976a30e70c908", "e0d52ed35a6016ef317185a72d29310d1fad690e", "69c9d8baeb06718c2d887127f0fed6354ebc99c2", "e8173c28187a48e619032c34a872f34f41d15e8a", "06a7a0e54ee8c348f2b7ff94083fb740e3018018", "9bd5c58cd4eaa371cbd6fefbc8cf6ad99b80f120", "6fa5d405fb86e3792ef4a035b25ca2f1c75eedad", "2ed1436de11eb65e002c92cd024bb9ea859611cd", "27c03f48c746f62b0f6bd819a349b738a2267792", "6ef97590e6d7fcf2e748c8e43ee442cbec599c8d", "7aa259d0629c4e80cd2b23770a5c75f568e82659", "fd1a5ade9cec050304d4913e218341d621b84673", "9e9ff4dc4d95558dcb9ad22d47e10d6a947cde1f", "a6cc4eb6e05d9962cbef8586250680051654fe4f", "972684dd056ed2fde7e5cab55dee724969c707ce", "8cd8347c8fb4406e7eb41dafe20abcdd52d8818d", "977d94819fa906fd7fcb1c5898e85155376eb8bc", "73862776d8ea07fb2d846da4429b5f5df371cfe2", "289aeb2be4afb470d3c4be1c7f475db037132e70", "3f264e73cd7e785d7eb61c98b06ce2010dbb3500", "a81f173d50d896059727b0c448bde667fdb0aae6", "351f01272ef83617976616e0b08019a4bc7f68db", "b8a9dfaf83af3d2560934cb13aa52cab138ba809", "33221e335e72a3a578e167ea60922b0b70c8b4ea", "ee7e1ea37bbb4bb0014b45bbb59ee6224f6645d7", "f2bb89bcf4ba8a72dbac643a6e79aa1b0e7dd149", "cd79c076b662401103abb7153ece3d53ff3cdb76", "20bfa79f093a23af08a0c51d01dc5a5f212dbdee", "24fd844f8bd65359a5ec884e3b281b8f825e8d0a", "05d43e75e410f938b45fc008f03a7a362dbe91ad", "aef6de3c27f84cbed28def48da2074d66188d07e", "d98d9e51b3c5181d635449f46a151330039968ce", "abcc54665c663ae75d7b5e2d8cc5d924e6867bec", "90c7e7a7c4ee6f85317c190d65097935f4568860", "804bf8fbd09557b30e1f66e8ddde0b3ea1829ad6", "1474a7412cc1aef2c344969da65212cba85933f7", "d87c7acdd7deccfe5692232cc2fd1454bc41837d", "a4ee4b589b15a8567f054345b50ec991c82a1e3c", "1ee16734beff6e42ef2999dc0c3118857499bd05", "859a623a473e63a37350e96c2d9c84e24bb5d8c5", "19859ef75996133a09245ef408c9ead11acaa972", "2a6e3d47378a9a77da34d2ef41e9ced86f7c236f", "b5a2a9fec393a43813a8598207e2080059d15d9d", "171a74678bc0760c920ce59abdd12f9becfcf379", "f130078cda3ecd71ff400f8a8bb18284cbad9b22", "4456e7cd2e41338c77aa64d93d22280dd72111c0", "340f000604a1b156b9a109241b4ba0de526abd20", "76d23af185b4a5818f740d8fbbc431bbd25970d3", "f5a9d4d30e41fdc0f4a35858841b64d2ac768964", "c7e9ba5e098ca04d861060a4b245cea6cb5f2576", "2b3f46a34d26bf1a8864abc89450ef51aede7fbe", "66332d8b8fe98c8068c85c215dbbacc66397a68f", "67ba6dbeb92040450410c22ea7f4388450832aec", "2442891c5f4164c25b494619a81675733e5f827d", "809f046802ef1303bf12cd5faef9b27328ebd9de", "e651a4c2c75ab7dd5716b377239d40327c81de2f", "8a83ec318757b4f1ba1d44009d9ee9eb6ae2ac69", "56378380f4831e958cd2bc275ab56e07d0446409", "8c09b7ee65f1858f011fa4233c3ed9c7a823dcc0", "9d41ecf9f7e6fe6d33114615499b0c97c1217660", "34e325fe6cd4bc654fc9b997a5361bee9b929019", "0f0723bb8502c1529b17d640de7244f488ca128a", "3b9b1604c52733d5bf6e99d4fbc412f55981191c", "ede665bc855ec1be1f5ed6d285f26c5da65007e7", "d8e404cf00812394da0dcc8b784b044a384f2e58", "edbf78a401a2c3bb75a2c41fc72856a4db7179a1", "ccdfff6d9a587ee82884756ac3293296ca564801", "3b96010b2f08d1cffa3b04725270f34918201589", "93fe02a6297cb278f4e4a9db574c6ff2a87340c0", "a49b90c770717ab4c5c701678c21e033f8f73018", "7c5b45994906eb7af1ad089db4d5da8300086aed", "e9cf5ad6db7ef14d511cedeaccf35ec7d9b22e9d", "5eb1dac6affbf3e239d8cfc1be0f294d01859678", "e9d2a67f2e6ca0f730e4182a1974d1ca7632a060", "38b4e421baea5d8c0fb213dd15bd36bc8d82263c", "f80f9ba7620372ff19b04703971162274943c179", "5bbe706946f2cabff76d84acd4a85427408a202e", "ef31ce61a593a90d16a545ec754a26f9289e8d83", "f7fa883b50c6081f2d57bba4d0d08fa6da7cfe55", "60940129e11a2304c75b12748ce30da25db4be56", "d2ae14d2327489a94e090912c12458538ea606d7", "6841666e1f61215ebb7b0fbe42bf4337bac18d98", "942ef4240754d1d1b16e75fd2f71c48c38191df0", "6971b57a6f553321c70b7a3e30301994c57ba5b8", "156b3d630f0883b1db6dd4b99d8b0434c73e795e", "f886a122f028b5452870caf6d04d207335a174c2", "5985825c1db49a01d40ae5bca48728f5071ecd97"], "father_version": ["1a4149f1edbc93ee98ad8915c61fabf84ed5a4d2", "4e19ca12a0ed5eced2ddcc026399382731b1ce19", "d4aa4424a2b2e3f3c640937d8d539e8c76e2564a", "46e1536d3309adcfc10c072d84d46d6ab24eb4fc", "4baec84f89b4e965460895ac666e7b06a0b9a10b", "3eb9ddd44107f711fbaa53cce889ddbc8c49b2ba", "ae1d2ebeab6373b3a3b55c0d4a4a6e1593f7380b", "f1f9d5f8a09eee0ce288aa39c6a47700ae3fcd07", "5ca31e3520189fac3c0447e3083a76756a535723", "2884ec4b9d596b91a9e689fd79ecfab745795ae1", "0128b96f4bc1766dc1fc37c70b0d98e72e50405f", "c26dd85fc3be8ac591c9d7daf69eedb4d7b45dbb", "39ed945af4147289d98cd2089e39954d09448577", "cac0918f8244f055f5e6650aeb7c347dd28142c7", "fdb8f79c1eddecf29f3cf23e43aec7ddba6ff7b0", "bf786a70086bc02f9ea350fd9e7465ad883ec977", "65ac6a4dce80d7ed297f6ef126fe1e4aae37ff1b", "bf786a70086bc02f9ea350fd9e7465ad883ec977", "3031858538370811c1a43dbf1bd1992ec999e179", "2d54d92e106b748d2da1451f5cbe42127441c9e7", "edf9f40f81b9a806ba1123181df40b45faf80238", "095deaf6e4586bbfa3ccaec498920d174235e0e2", "69d458f8f365511541454c6f5c79e86816f7261a", "2445744c6930227e8d3cbe320098806af3dea7c0", "aa755720d4092aa3f65c418e06cc714b49d26f23", "5d569518ea617f30296fd3ca983034940a26529d", "092c1e3f34c9e53d2dbf29c37f060e47a6fb74a1", "9129a768b0ad81e22f0bb7df32ff6039b76303de", "b5eea4cde510d5c957912d89c03d06b2d690defe", "9aee19836ab5934e7ccd9e9471f83c047a2ebe85", "6f0f5f2d47294c0f923ae6d004296e6e3c8e11a7", "2e980e73d773d8ef28679012cc2f1e17e0365bcd", "2adccc54976ce028d8cfe4bf1e7ac6c404829e78", "d13a12ff90dcfeb06f58d29178954c00a5dbb6eb", "d13a12ff90dcfeb06f58d29178954c00a5dbb6eb", "1720520f2be6b995dd562949f9e08053a748c5e8", "90a3e4c57a61b8b669103dbc75d92a1810d1e392", "824b72729a6168ce9775ccd86b88a08656dbc064", "26fcc3cf240656957c813acfa5d31db4b28e70c6", "88df79b474c252ddb97096c6e967daa38a02b545", "cc30b67c8dbe24babd31ed654e9536fe776b8a18", "a1f620efe00916db168c7405a46b32dfe89a9965", "9383aa3e91b1e01743ec2cff20f5fd68a66b83c1", "eb6ad402bf14a71f9c7b532e461862b2a07d3802", "debebe9bcc4f4dbe9af33bd17d4f1650317f8549", "d502dde1c4601b2abc6d831d764561a73316bf00", "15eb063fa22569e797f850fb8d60a0949f52fbf5", "15eb063fa22569e797f850fb8d60a0949f52fbf5", "b26410d53aefa7cc46e0a6edd4e03f35298077ee", "097083c4a2cd2e252c6f3b57e3e837e4a9ecabc9", "123f2ece539f924705945f462030ec2b9692aebd", "909ed9aeddc034a9a59868db22847801ea25b4ec", "716fb4aa44c27ef83f5c3f224197a9ff4c9e09b0", "716fb4aa44c27ef83f5c3f224197a9ff4c9e09b0", "5de6b818a8180291a6769e8db7d14b370dfb5221", "0f5d10da38626494ae4d0e3339a2a35f270b0edd", "8b28b1208f3a6493c7b519716e633ee455d787c4", "f898959e42990a7f98cbe0eff9e79a432a9047c9", "f898959e42990a7f98cbe0eff9e79a432a9047c9", "b3939acd47b6198930812236678ceae6f6f6a7af", "87a145ca3346cd1bab8a4fbdc3b1d3d9fe237dc7", "caf6406e94e2c398a6c1f69a1fe7b360bc14b172", "42d2f4577f2103ab3f522634c66941ea4521c25a", "144977f8bc94115fac53163f81310aff0d50c78d", "ee4031de78ab06494013e47911896e4e689ba131", "2ae72d67a499c92a6ca0bea795d28b13b54d8b0c", "a5c460caf67fdd1afe2eb1b0d639b87c7453c235", "e9bfb4353ae75dd5aa369ae4aa76b9d8cadb7e50", "ff169d6e8da4740c254fb18a742f90ab012c3b4b", "bec1781e8964c7e66a877d1c8abc361f96104e24", "c5e6e2c261734451eeadb440fb4272fad4cb1007", "4473c6b6c9dad81ca5db0021ea97c12a559b159c", "637a0eb544bb5dd257e46ae1bf46d0292d55d955", "d63e06e84190cde818f56a791b4738b2199d2db8", "3424fc1e9ce42142e289f18e542b5424ab7adebb", "ee34e2b77225b62432d73d47d648763747c165d3", "f7ef2f1e040818f71e2b6a25646fb0e2868a3bb8", "50550eecf0ad6cc677f92abd48f1de5c8875e689", "33c19d6279ca6b0e614cda82b29fb6bdf789e7b5", "3d5970ffcd2a274285f6613551beddb78d32a125", "4e4072b08be2da21a656bd6a328ffbfb2efa6906", "38de6285ab83e0cee2d66443710a8804a7e605d1", "e657cf66bc54dec762f0355a56cf3b3504a960d9", "003acc6027aa63e59b5de3b0d1da7e33c2b9f9cc", "45332f301ea5747b91c821e9f09dd66cad710b9f", "fefbba1cc3bd5641983657440b40e25425165a6a", "100dd3f263c2e1f5e80cdce7e8f91fe1554c8e04", "31c04658c85a687f66db6327c9e8aca250062627", "9a9e18e24f9ef7067c455c3a1b950544b0f88a26", "6e56e8ae9f04ffdd76505858dbbe5b1ff04dbd49", "e09388a5a7cc131643d685fd8efff64da15e168b", "f8f13c25d65e96efa6a0718515e8e035d72de7e9", "952813659a4eb97ca4dffbbfe99f44f095846cf9", "30d449ea5b369805621ee78a36d0a8724473f366", "b161867c1db03c279be0c0ce1eb091bb3372811d", "b161867c1db03c279be0c0ce1eb091bb3372811d", "5dc27c1fa9b8e3bc6ed3e1b198bb1eca6b378c9a", "94dff8a5a2ec336a23c05ebe5cdf7e4b117d3925", "f9af0ce81408f7a4cb4343fb0770e9e6ef545fda", "e001e0098f64baa8e0b3b887507bc98972c775dc", "5f094f8bb6dca3c056051cb8800b418839cca0e1", "847cc0d2415f59c2943d4a2734564119ffb38bb1", "2343daf29388566b0efa0b0a2ad21574fb534a27", "25f51498df05c50c7d6406d558a35dd8b54eb749", "d5d12c88b075fd1fc51a29412b3c08918cceb983", "d9c394e320a6f36137869b9368cf1e476721f520", "4ec5ffe3a9d1c14a0a5acbe1ebb5552a284a8908", "0e876c842cb0cb357997b2e914d627bebc78130b", "b00cecf4902aeffdba05d9e09d4e9210c5ad80ab", "c3426ba96810dafdbf776ef7072116bef3ca4a25", "d678de0bf8932710d47680ac9bdafc682f2e3019", "20e92a54c196310f84b8d385bce71b7812b18f33", "ba4da2c3c7048ea249f18e7b4c815db76f0b1ad0", "fc11514987e0ad25046fa384672c6f16408b736b", "c47ae7402e093f21f5eb3244b855e45c0bc77f55", "9fe802ec238b8ae7b5f77e61cac7e25c8f42f6d9", "5b24948d2385d24132f1059d5bb52f6452e598b6", "c805679c8d4307360710a24cddc071cbbcb5ca75", "989f94148faae97f23368e4b5bae2f1f03eaa62c", "d3c5c366f8d8a7ca88983738ea59e31b579684d2", "34bd3e8f39a5d07cd5a024c6375491080e36ff05", "b3fb2cfee9ada524edb6319c327bfcf4fd0c0320", "40b2cd80206fc4b9327f5033d0873375a8706c4a", "3a327efaf565f2613fc7b783dd08ca8f39836695", "ef2ca578648e3ab8bf927ada169614011ec1ff2a", "debc475bfed00eaf61ae4448fdf599bc5cbc1eae", "5e9ccdeda0fdc7ca511505c24a3fae1a7134d0b2", "86299ede1a2cb4bd8654d1fb5c6dab437d57d9c2", "63444f6a2273bd910b33ecb10d1106cb2225e4fb", "0c2a5a5b4f6cc07b9b1cd9c83ad77c3fa0170779", "ae6f4ecb6a43fb438600742a5e7563a5ce385733", "825a96252d6f6101c1163d340375ad1339f996d3", "6b19fe2b1906f656712c9f5c1da7083870a3e8ac", "6bd0cc3e9fff7a1af186893e051e305f636c0bee", "be85e96e007eb4f678997cdad9933e597b62a8a2", "f4743336e09fa4f487b95bf72b2877c789371202", "9c0a61700768439f4c622442c1bb6f7aab20f7f8", "15a0aaceca48da49898dc25a9c7cc6521708e8ff", "27a0dc86a8f12f68af68dec4286b5e3738b12d69", "feb13e1c16de7078dfc1310d9403441d1b2dae9e", "6a7704d98633f228fb6334df879adac0bf18f761", "8a431329189608217d0246aefc09c0e0b7060f15", "2f751df40a79e67c2d42fe44e02a67f1fba0b184", "5deb7ed38d5754d936dafc422246d8634abecc57", "e8138ed9768e99e98e308845626e36aa55afadb0", "5a61738df06e5e4de80317ef1001ef604d7fdb39", "d3ce45c637caf1cef7263489eef5889a684cbca7", "1a63a102ebbaaead265babd71a3d52928f848bd0", "bef0b8b7683b65cbeb8bd6dfaf5b54858936180b", "cab78e68c4116d9d162775b84a6fd6ae6b47b9a4", "ab618960332ebb2e39f536b6175e6ef9eb033b9b", "abe07d4b1190f70ac3f171fd897400c77d0d0de5", "ab3ff72d309378f3c6e166e47e75b7ba49835f20", "0f7acf78a344c226b7b6a7e4beaeced291bf4eed", "8aba3a9deab901de84fa668e67e392305c0e8ef6", "62494bd639bf02ed3f654b98270a3c082902f923", "fe54e88fae32a108b5b11e3f3064a6e76560b867", "bfdef2ddc1c3f2121256045690b39baafa269151", "75acb0d9222c3a54c9e15edff319acedcb26bbf5", "75acb0d9222c3a54c9e15edff319acedcb26bbf5", "136f3be9f41333bb9bc19c29917e09e89de7e8a1", "262d57e73163a261b53626a2a0acfb7b41e2b14c", "9299e9bbf889470dae8b7c14956a23f73e8097db", "9299e9bbf889470dae8b7c14956a23f73e8097db", "16b9438fe34dc00cdd527e53dc7e71b9cf13b695", "e82ebf8c0acfc99859f2b771fa3c881bfe757c9e", "27f815a0c596312ebff83688dec308cc712a9402", "ffc5ddc3235d42cad64a75a091b42228519d29ba", "6d7f726bea4919562cf521d48a105f4ffc23c30b", "86e442a1d9a0907c12f21787ba26bc6be9b80e7b", "aa174242c9bdd248d4cc6c6e01dbdc087ec1ac75", "f5b1fd5894d69de7a5e1537b15e4168516352aff", "499f871ade2913d79ecd4bc39d3a409a7cd10d08", "e2132143432c089681e962413d1afc56eaada87a", "2bb576b2dc46d2caf9fc18b0472ba78ff1755b10", "fe34ac579c89407d4c8cd0dabebeaae4f00e3b73", "e8b66887fd632225d80e3e02699e5f26b77ee04f", "6c0be37efb1744f1f2b40e1c44a032ccd94169bf", "3573df1ed5fe2d376e134b02fb188ee6f68a63c3", "ba2a4738c81122a2f5ae06526d3beeee93a8af89", "8ffb319f236f985582ab192a8f67926368364e8e", "fd058f91d9cad98ee4d744d46486fe43f7fe6418", "10f6aa13bf5eff0ff733c87fa63adf8fd869fab8", "8a7a30d95a5f88ca101ba7a25a30d9a9400ce472", "f07755171e7f65cfdb286c8be825fbf6be589f2f", "e662dc6c246c6c9bb6c9f6b7e63fc362cdf93923", "46493f9fcc88a8feff24617325d96c816694fb48", "436ec3f15683071fbebb9b2e2a08e84c37ab41cd", "89dbf13da460b3b561ffb9a9c06401f8619f2492", "b997bbe1b5672991ab9b67fa31c611c11ccb11d9", "882bc94618f3e8077079f080fd8eb8283c6447df", "ac044ae1ec71ee8da8e565fd0b556c7b5e6e0d79", "a970a8d2b7ad4789e5e2d25091204e0f248716f5", "d9691d795fc1802467afd810600d58a5492f3296", "c1fe95648f67ef8a8f90b8300d375f836ba87cad", "e3f65086092ff2a9fc2c934a6d7e5ab51d701cda", "6c109484293deb3ad375aed475e84176c46e0e13", "f0ff775d32048d1697b7591923d4bd2bcf25a63c", "e2ef65596baffabba6b882cdf20e3d926dd3c93c", "f4b6279f62b90654995e85b3e65fda576586f927", "a1ea1d43e7411cad53383a8e4298b8514ec5e54d", "5462eedd68e2a34b0f5b099e7f78c9a6f9ac9c5e", "24fd844f8bd65359a5ec884e3b281b8f825e8d0a", "05d43e75e410f938b45fc008f03a7a362dbe91ad", "aef6de3c27f84cbed28def48da2074d66188d07e", "d98d9e51b3c5181d635449f46a151330039968ce", "737b71a1837e6718461c307f177cfe12d322289a", "5bd3f7bc6e9b36b00043613d507ac9d507e96a1f", "804bf8fbd09557b30e1f66e8ddde0b3ea1829ad6", "f2e9a51bf509729ccae3e9641d52845004f9afe3", "0bc8d6ae778fbad5993e49950b879dfdd877968b", "3193d7026684badcc04b2eff6759e52cf49ceca7", "80ddb14ad4d038e1e46f20e52bb77caecdd74157", "77b001c31ebccbee48ca1aee9170b32713d60af8", "77b001c31ebccbee48ca1aee9170b32713d60af8", "c0edacab41093eacac74080e7f9a8e8f4873054b", "0df2f5ba56ebd2f0b915a36dba36975794e9c405", "b05e761e28ce1e581ed91d891cb61adcd3760493", "a274ce492edb3a74e7ae8774da5e64b4f0e53d2d", "4456e7cd2e41338c77aa64d93d22280dd72111c0", "a02082ea2b482970e160b159c6c1b51f3e360777", "cee71fc7100a1009a557b3a358e6b530c5d62ae3", "78fb8bc562b594d34f371334f2104be69711e5b0", "45ffca2c720af2ddeb6e255814b622e900a7ab73", "8885e35d8dacd9202a83c2fca6f1edd7ca17a51b", "f15db831d75ce25d8743e6cccb211256a23c2be4", "61b1710621d138556fe2d5621076ea40ad47f8af", "8311b64442e6743b0fed29387ce8b0d834ba0553", "b7af555ec357ccf7dacca4da731eafd50de5afb2", "29deb9c68c29c2f79538d7088edecd4ab8b21ab3", "12afd673b9cbd4c068e19f80d6ef49a3e55a77fd", "350f71990e52aa362de9aa85d331dd8388b35636", "4801b068b26c40b99a07134d3eadde44f42ee97b", "e0388f0d54825730717259329382cd86ab69cfbe", "c43842e4ffe6cc05b25010acddd910bb282a4b13", "81e8bd4dc2fb1eb771e7deda646e8d210400e796", "ec78c8c04d74be389cf856ce24143495c17713eb", "6341a64a4bdf5d5577a36153f32a8bb60d059a84", "64a657533da270700c7fed933df302b0fa4ff059", "6fe884a07ad78777e2ffd43557597b23041a5fe4", "0c521834019b1073badb21bba0395afe0b043dfe", "5b7758f13fe33c2c8a03669de0a002c8192946c5", "1b644817e443ca7ff86dd9877b703e8c69aefd89", "5191decdda031dd185255f66893b834f9530e0c7", "74d714ceb645df76d373fafd9b29f085bc52ab31", "c9684d65d53b07a8f788be4beea611824ed78c9c", "263ff88b487bf75d59d4362233926d4720548711", "aad7fa35e1336d3a415a33693a8080bf63bc3e5c", "b82c2e974eb4311001c767689142737e35509ed5", "59623e2a7e8447630f1c0616b74373106e153f44", "0e1b619cce136d770567b80f619ee39dd7ca2855", "5576c69fce2dccf6a09d8d73d9f06771ed3fa64a", "1cfb6252047f4cb569043db5de24bacc488bb58f", "6294d917cb5fed400fb1b6ca9a049a4545c9fca5", "64d49e6cb8a109f687002efeaab4c384ea87cdcb", "0a1fc456cb9b7c1c2bb9262759e6e6c20aec16ca", "8f9629c61c70d008439468d8d03693fe5c140474", "bb51201362535905768077ca900dfa5eb081e656", "156b3d630f0883b1db6dd4b99d8b0434c73e795e", "9b68cbc4a7f35cd3dcf79692f499b00742cd8999", "1210055007a144e6b7f7e384afa26d0aa5031821", "985166a57e3e8a84d1d0dacd583da50cbb1d85ff"], "commit": ["CURATOR-535: Fix client port conflict due to untrustworthy random port allocation (#421)", "CURATOR-644. CURATOR-645. Fix livelock in LeaderLatch (#430)", "CURATOR-648: Fixed CuratorFramework#blockUntilConnected documentation (#432)", "CURATOR-524. Fix all URLs as https (#431)", "CURATOR-458. Fix Schema constructor validation (#257)", "CURATOR-646: Fix RAT failure reports and add a CI task to prevent regression (#428)", "Fix typo in ServiceProviderBuilder.java (#331)", "Fix typo in LeaderSelector.java (#325)", "CURATOR-537: Fix effective path can be used as a fencing token of LeaderLatch (#414)", "CURATOR-624: Fix Github Actions by adding 'distribution' for JDK setup step (#407)", "This commit reverts changes that altered the ZPath parse method based on  incorrect assumptions about what a resolved\" ZPath actually is.\"", "CURATOR-602 fix typo in the variable (#390)", "CURATOR-584: Added fault tolerant idempotent Create, SetData and Delete operations", "CURATOR-585: fix DiscoveryExample did not check for exceptions", "CURATOR-583: Fix ArrayIndexOutOfBoundsException when passing empty list parameter to reconfigure API", "CURATOR-581. fix OSGi export pattern", "CURATOR-581. fix OSGi export pattern", "CURATOR-581. fix OSGi export pattern", "CURATOR-577 - Add a dedicated downloads page to the website fix downloads page, use Apache Mirros", "CURATOR-574 DiscoveryService fatal error on deserializing an empty byte[] as JSON", "CURATOR-574 DiscoveryService fatal error on deserializing an empty byte[] as JSON", "CURATOR-574 DiscoveryService fatal error on deserializing an empty byte[] as JSON", "Fixed typo", "Fixed the website badge", "CURATOR-558 was supposed to shade all of Guava - forgot to remove the exclusions for the old guava classes that were still exposed. This was causing the installed JARs to be incorrect (missing the 3 shaded Guava classes) in the client JAR", "testDeleteChildrenConcurrently() was badly written and error prone. I fixed it so it should run every time now", "CURATOR-544 - Fix issue with 'error code' 0 being passed to the KeeperExeception create method. This was breaking a lot of code", "Fix typo", "Fix ByteBuffer's compatibility issues", "fix mailing-lists.html buttons to have mailto prefix; fix doap.rdf to refer correctly to mailing-lists.html", "fixed some broken left nav links", "CURATOR-505 - fix elapsed calculation in the circuit breaker", "Fix test case with testDeleteChildrenConcurrently", "fixed CachedModeledFrameworkImpl children queries, https://issues.apache.org/jira/browse/CURATOR-479", "fixed the version handling, https://issues.apache.org/jira/browse/CURATOR-480", "Closes #279 I have a test for this along with the fix. I'm going to close this in favor of what I have.", "CURATOR-472 - Fixed unit test", "fix bug in reworked createPath determination logic", "fix path used when re-creating sequential PersistentNode with protection", "fix test case", "Closes #261  - fixed in a separate PR", "Fix for CURATOR-452", "CURATOR-448 - Include curator framework state in error messages", "Fix CURATOR-462 -- return lease created in org.apache.curator.framework.recipes.locks.InterProcessSemaphoreV2.internalAcquire1Lease(Builder<Lease>, long, boolean, long) when the wait for it to become active is interrupted; test for the fix", "[CURATOR-450] Fix dead link in 'Getting Started' documentation + update protocol: http -> https", "PathChildrenCache stops working if container node is auto-removed and later recreated - test and a fix", "CURATOR-431 - Fixed stat population during create", " Fix, maybe cannot deleteChildren completely when multi-client delete concurrently", "Have to use hard version for curator-test to work around maven release plugin bug", "Added some missing deps, fixed some of the tests for zk 3.4 compat and new KillSession, added a SDummyTest to make Maven happy", "wip for fixing tests", "more testing, bug fixes", "Fixed create mode for AsyncCuratorFramework.transactionOp().create(). It was being ignored. Added a test as well", "initial work on migrations done. Needs lots of testing and doc. However, found bug CURATOR-423 and will need to fix that first", "fixed flakiness with TestSharedCount tests", "removed asyncDefault() it was a dumb idea anyway. Also, fixed one of the tests now that the root node isn't cached", "SharedCount: fix removeListener", "CURATOR-410: Fix testPathsFromProtectingInBackground failing due to new CreateModes in Zookeeper 3.5.3", "CURATOR-409: Fix unintentional override of getQuorumPeer in TestingQuorumPeerMain", "[CURATOR-400] upgrade clirr to fix the check error on java 8", "Fixing connection string construction to ignore wildcard client addresses", "log authorisation error when writing node with PersistentData", "fixed some misspellings in the doc", "closes #180 - won't fix as this will break existing users", "fixed doc", "fix CURATOR-376", "Using a blocking queue was incorrect. This is more Scala-like now. I misunderstood how Promises work in Scala", "CURATOR-358 - Fixed race condition with getLeader() -If leadership changes between the getParticipantNodes() call and the getLeader() internal call the NoNodeException is now handled and the next child in the list is evaluated.", "CURATOR-337 - Fixed merge issue.", " #noissue - Fixed problem with test where the CHILD_ADDED event would fire for a non related zNode, causing the addedLatch to complete prematurely. This meant that the final assertion in the test would fail.", " # noissue - Fixed license header.", "Fix race condition in TreeCache.", "CURATOR-306 - Fixed up test case that was broken as part of the addition of client schema validation.", "Fixed CURATOR-329 - SharedValue.start() method does not update to current value if version of value currently stored in zookeeper is 0", "Fixes incomplete error message sent to caller", "Fix TreeCache duplicate ADD events in rare cases.", "If there's an exeption, retries exceeded, etc., the watcher was still being stored in WatcherRemovealManager thus causing it to be incorrectly removed. This fix removes the watch from the WatcherRemovalmanager on exceptions, retries exceeded, etc.", "Expand CuratorTransactionResult to hold an error and include it in background multi calls", "CURATOR-262: Fixed integer overflow issue with sleepMs", "Fix TestTreeCache pollution; more tearDown() checks.", "CURATOR-302: fix TestTreeCache.testKilledSession()", "CURATOR-294: Optimize TreeCache, fix possible concurrency issue", "fixed docs/comments that refer to ephemeral", "Added an unhandled exception error handler", "General fix for catch-alls throughout the code. This is overkill but it strikes me as the safest way to address the problem. Everywhere there is a catch-all add a check for InterruptedException and reset the thread's interrupted state", "fixed doc", "fixed bad merge", "Moved findAndDeleteProtectedNodeInBackground code into separate operation that is processed through the standard Curator background code. This way, retries are applied (with sleep), etc. In the previous implementation, errors caused the background check to be run immediately and infinitely.", "fixed some merge issues", "fixed compile error", "Fixed newMembers test", "test assumed first latch would be leader. Fixed it so that this is so", "fixed surefire spec", "Fixed some old naming", "Ignore any shutdown errors", "Ignore any shutdown errors", "CURATOR-167 - Partial fix to clean up Curator managed watch objects when the cache closes. A full fix requires the ability to cancel watches in ZK which is not available until ZK 3.5", "Updated LeaderLatch for error policy", "Initial error policy with two implementations. Also, applied it to LeaderSelector as a test", "more work on repairing tests for new connection handling", "more work on repairing tests for new connection handling", "Fixed testRetry() for new LOST behavior", "Continued work on new LOST behavior. Added some tests. To get correct behavior it's necessary to not retry connection failures. Retrying connection failures was never a good idea and here's a good opportunity to fix it as this requires client action to enable", "CURATOR-224 broke the fix for CURATOR-56. Introduced a new method, makeRequeueItemPath(), so that items can be requeued in a way that's compatible with all the queue types", "MED-217 - Fixing up merge issues.", "fixed inBackground() calls", "[CURATOR-160] Made Configurable optional. Fix storingStatIn in GetConfigBuilderImpl.", "[CURATOR-160] Fix QuorumConfigBuilder to provide a valid server string.", "[CURATOR-160] Fix watcher support in GetConfigBuilderImpl.", "CURATOR-240: fix pathological root doesn't exist\" infinite refresh cycle\"", "creatingParentContainersIfNeeded for checkExists() was broken. Fixed and added a test", "Curator-224: Fixed the requeuing problem with DistributedIdQueue.", "CURATOR-161 - Fixed up some potential race conditions with unit tests.", "fixed version", "CURATOR-211 - Fix readLockPredicate() index validation issue", "CURATOR-190 - Fixed up unit tests that were failing due to server restart. Removed unnecessary use of PersistentEphemeralNode from testConnectionStateListener()", "fixed license header", "fixed bad license headers", "fixed bad header", "TreeCache: Fix case where root is deleted and recraated.", "Final fix for backward compat ACL APIs and tests", "fixed license url", "Look for connection errors and merely log when starting. Also, reset instances on initial connection", "Smarter path fixing for create sequential.", "If zookeeper is down when discovery is started, it fails to register when the zookeeper comes up for the first time. This commit has fix for this issue", "fix bad case of file", "CURATOR-156: A typo error in PathCacheExample", "Performance fix in processChildren()", "Fix broken javadoc", "Fix broken tests.", "CURATOR-147 - Fixed up isStarted() call", "Fix formatting; remove MyTreeCache; error listener", "CURATOR-84 - Fixed up formatting", "CURATOR-79 - Modified the 'withProtection' handling, so that any failure that is not a ConnectionLossException or other KeeperException is treated the same as a ConnectionLossException. This means that if the thread gets interrupted, or encounters some sort of other error, during creation of a protected zNode, it will remove the affected zNode prior to rethrowing the exception.", "Fix startup connection problem.", "Fix potential race condition.", "CURATOR-42 - Modified guaranteed delete handling so that it will only add the node to the guaranteed delete set if a recoverable exception is encountered. If a non recoverable exception (such as a NoNodeException) is encountered, then this will not be retried. Added a debug listener to the FailedDeleteManager to facilitate unit testing this case. Added unit tests, for both guaranteed deletes in the background and foreground for the NoNodeException case. Note that this error was only present for guaranteed deletes in the foreground.", "CURATOR-126: Fix race condition in CuratorFrameworkImpl.close()", "CURATOR-127 Fix trivial warnings", "Fix that causes CONNECT to be sent when the read/write connection is established. It can be argued that CONNECT should never be sent though. Discussing...", "fixed another typo", "fixed typo", "fixed typo", "Fixed up committer order", "CURATOR-110 - Fixed up the connection notifications so that they will only notify blocked clients when a connected state is reached, rather than any state.", "fixing badly cased filename - part 2", "fixing badly cased filename - part 1", "CURATOR-110 - Fixed up formatting to Curator standards", "Fixed a bunch of encoding issues on the confluence doc files", "Fixed a bunch of encoding issues on the confluence doc files", "Major refactoring. Moved all BaseClassForTests\" versions into curator-test. Added checks for server binding errors to this as occassionally getting a random port doesn't seem to work. Also", "By default all the connection issues are logged as error now to maintain backwards compatibility", "Added System property to choose if connection issues are always logged as error level or only first issue is logged as error level, and subsequent issues are logged as debug. By default only first issue is logged as error", "Making Connection erros less verbose. Only first error is logged with error level; subsequent errors are logged as debug", "maven-release-plugin v 2.5 - fixes blocker bug", "Fixed a slew of javadoc errors", "Fixed some places where background callbacks weren't checking the event result code", "Upgrade to latest versions of dependencies/plugins (include ZK 3.4.6), fix longstanding problems where JUnit Asserts were accidentally used, removed some bogus deps, fixed up the poms, etc.", "Another edge case found by Evaristo. When the SUSPEND is set, a background sync is executed to detect LOST. If the ZK connection is reset while this command is processing an incorrect LOST might get set. Instead, keep track of ZooKeeper instance reset. If there is a reset ignore the background sync failure and re-submit the sync to test again.", "Another edge case found Evaristo. When the SUSPEND is set, a background sync is executed to detect LOST. If the ZK connection is reset while this command is processing an incorrect LOST might get set. Instead, keep track of ZooKeeper instance reset. If there is a reset ignore the background sync failure and re-submit the sync to test again.", "fixed some typos", "Background connection errors would go straight to LOST which is different than foreground connection errors. Changed so that background connection errors go to SUSPENDED first just like foreground connection errors.", "It turns out to be incorrect to not try to recreate the node when in the suspended state. The side effect of this was that if all retries failed, etc. the node might never get recreated.", "It turns out to be incorrect to not try to recreate the node when in the suspended state. The side effect of this was that if all retries failed, etc. the node might never get recreated.", "removed incorrect comments:", "fixed .rdp license exclusion", "Fix for hanging gpg", "Fixed bad license link", "Fix edge case reported as CURATOR-52. ConnectionState.checkTimeouts() throws KeeperException.ConnectionLossException when the initial (or previously failed) connection cannot be re-established. This needs to be run through the retry policy and callbacks need to get invoked, etc.", "ensurePath might throw an exception if connection couldn't succeed. The exception was being swallowed by createNode causing the recipe to fail if there wasn't a good connection when the object was started. Switched to use creatingParentsIfNeeded. It's more efficient anyway. Also, fixed swallowed exceptions.", "InterProcessSemaphoreMutex changed to use InterProcessSemaphoreV2. In the process, a bug in InterProcessSemaphoreV2 was noticed that was been long fixed in the older InterProcessSemaphore. If the session drops in the process of creating the lock node, the acquire fails. The old InterProcessSemaphore worked around this by using a retry loop to try to recreate the lock node. InterProcessSemaphoreV2 now does this as well.", "Callbacks were not called on retry-able errors - this change adds it in", "fixed bad markup", "Stub out additional JMX methods to avoid test-time errors", "Fixed formatting", "Fixed headers", "Fixed mailing list urls", "Hacked a fix for sub-project nav menu selection", "Issue 257: Fixed a race condition in LeaderLatch that cause the recipe to create two nodes in some edge cases.", "Fix performance issue where apply function can be called millions of times and consume CPU by calculating the transformed list only one time (copying into a new array list.)", "Removed test code left in by mistake", "fixed doc typo", "fixed doc", "testKilledSession() was incorrect. nodeChanged() is only called if the data changes.", "Fixed bad constructor", "fixed doc", "Fixed issues with protected mode and persisten ephemeral", "updated error message", "fixed log message", "I can't believe this has been like this for so long. The executor passed to the listener was never used. Doh!!! Major bug.", "I can't believe this has been like this for so long. The executor passed to the listener was never used. Doh!!! Major bug.", "fixed", "fixed incorrect comment (rule #1: comments lie)", "Fix bad version of scannotation", "fixed an accidental tab", "Fixed bad string format", "Do ZooKeeperServer first otherwise there's an error", "Issue 109 Make duplicate close() calls in CuratorFrameworkImpl a NOP instead of an error.", "Issue 107 The namespace wrapper was corrupting the path if the EnsurePath handler had an error. The best thing to do is let the code continue.", "removed some incorrect changes", "Better error message on failed test", "Issue 88 + 1. Children processor should wait for all nodes to be processed before fetching more items 2. There were some race conditions in the bounded version. To fix, factored out the querying of the parent node.", "Fixed double output problem", "Fixed double output problem", "Continued: Unit tests should be a lot less noisy. A system property now turns off most internal error logging.", "Continued: Unit tests should be a lot less noisy. A system property now turns off most internal error logging.", "Unit tests should be a lot less noisy. A system property now turns off most internal error logging.", "fixed for 3.3.x version", "Fixed test name", "Fixed test name", "Fixed whitespace to be consistent with existing formatting", "The delete() in the KeeperException.NoNodeException catch was incorrect. At that point, we are guaranteed that the node has been deleted already by internalLockLoop(). If the creates above internalLockLoop() fail, no node will exist.", "MAJOR BUG FIX!!!! Many of the Curator recipes rely on the internal class LockInternals. It has a bug that exhibits when the ZooKeeper cluster is unstable. There is an edge case that causes LockInternals to leak a node in the lock path that it is managing. This results in a deadlock. The leak occurs when retries are exhausted.", "1. DistributedQueue was not using the provided executor for consuming messages. 2. fixed timing a bit in test", "fixed timing a bit in test", "fixed typo in doc", "Better error handling for lease releases", "Correct 1.0.x version and fix a 3.3.x API", "Fix concurrent edge case", "Fixed typo in doc", "Fixed typo in doc", "Relying on thread interruption is error prone and hard to test. Instead, use a kind of thread local to mark the thread as having a failed session.", "Issue 64 There are more event states than I was handling. It was incorrect to treat some of them as disconnections", "Issue 62 A few recipes weren't handling being interrupted correctly. They were logging errors when they should behave in a predictable way.", "fixed typo", "Fix issue with running against artifactory", "Fix quotes", "Using a synchronous queue in testConnectionState was a mistake", "Fixed a broken very old test", "Catch any errors thrown by listeners", "Fixed URLs, etc. so that we can release to maven central", "1. Using Timing for better reliability 2. Ignore backgorund error results - i.e. nodes that disappear etc.", "Fixed typo", "Centralized slf4j to a single location and fixed minor dependency conflict between slf4j and slf4j-log4j12. Removed commons logging provided dependency as no code was actually using it to compile against.", "It turns out an instance of InterProcessMutex could not be shared in multiple threads. My assumption was that users would create a new InterProcessMutex per thread. But, this restriction is arbitrary. For comparison, the JDK Lock doesn't have this requirement. I've fixed this however it was a significant change internally. I'm counting on my tests to prove correctness.", "Issue 27 This bug exposed major problems with the PathChildrenCache. I ended up completely rewriting it. The original version was very inefficient and prone to herding. This new version is as efficient as possible and adds some nice new features.", "Fixed typo", "formatting fix", "Fixed misspelling", "testGetParticipantNodes() was badly written. Fixed so that order of events is predictable", "Moved to version 0.100 - this makes this the current version fixing issues with very old version numbering scheme", "Fixed some recursive dependency issues and updated the Gradle build", "An attempt to fix testRetry()", "Fixed doc mistake", "Initial pass at a read/write lock. Also, fixed incorrect use of JUnit Assert.", "Fix gradle configuration to build out of the box.", "Major changes in error handling and listening:", "The JMX registration inside of QuorumPeer makes multiple uses of TestingCluster throw an assertion error. The only way around this I can think of is NOPing those methods with Javaassist. Very ugly, I know.", "Another pass at fixing the semaphore. Went back to the model of the count being merely a convention. Added a new recipe for a SharedCount that can be used in place of the count convention with the semaphore. This is the best of both worlds. The semaphore code is a lot simpler and will perform better.", "Fixed misspelling", "1. Added flushPuts() method - puts are done in the background - need a way to wait for completion 2. Queue's with a lockPath had a bug that could cause the same message to get processed more than once", "Trying to fix spurious failed tests reports from maven", "The code that was ignoring NodeExistsException was incorrect. It's never safe to do this.", "Still trying to fix the intermittent failure", "fixed typo in testSimple", "Session expiration handling was incorrect. A) There was no need to save the session ID and try to restore it. That was old code and no longer was useful. B) In order to make sure that null was never returned by ConnectionState.getZooKeeper(), the code would make a new connection (with the old session ID) and then close the bad connection. This actually caused the new connection to close per http://wiki.apache.org/hadoop/ZooKeeper/FAQ#A4", "Fixed incorrect doc", "Added support for recoverable messages - i.e. if a message is not consumed due to error or crash, another process will consume it", "Last fix for reset had wrong version", "1. Fixed a bad release attempt 2. Added recipe for distributed counters 3. Fixed some mistakes with retry counts", "Fixed naming problem", "Fixed version"], "metric": [["0", "0", "0", "0", "10", "25", "176", "83", "0", "0", "0", "0", "1", "0", "9", "14", "6", "10", "0", "0", "0", "0", "0", "0"], ["1", "7", "31", "5", "1", "6", "59", "1", "2", "2", "12", "0", "0", "0", "1", "1", "0", "7", "0", "0", "1", "2", "0", "4"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "8", "17", "21", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "7", "7", "94", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "19", "54", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "6", "4", "8", "1", "2", "3", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["9", "31", "332", "10", "5", "8", "914", "163", "1", "1", "1", "1", "2", "0", "3", "34", "6", "0", "2", "0", "7", "10", "0", "9"], ["1", "2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "3", "1", "3", "50", "1", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "5", "18", "5", "1", "3", "20", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "4", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "10", "12", "25", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "5", "18", "5", "1", "3", "20", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "4", "0", "0", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "37", "37", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "40", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "1", "1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "4", "51", "16", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "1", "3", "47", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "1", "2", "7", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "21", "1", "1", "1", "108", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "19", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "13"], ["1", "4", "15", "3", "1", "1", "42", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "16", "1", "1", "3", "49", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "15", "1", "1", "1", "30", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "5", "23", "3", "1", "1", "12", "0", "1", "0", "2", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "14", "4", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "0", "0", "0", "0"], ["2", "4", "8", "1", "1", "5", "53", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "3", "0", "0", "2", "0", "0", "2"], ["1", "2", "2", "2", "2", "5", "23", "7", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["13", "28", "483", "26", "5", "6", "202", "1", "0", "0", "0", "0", "4", "0", "1", "15", "0", "-1", "9", "0", "4", "24", "0", "13"], ["0", "0", "0", "0", "1", "5", "8", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["2", "7", "7", "17", "1", "3", "2", "73", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "0", "0", "2", "0", "1", "6"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "5", "19", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "4", "8", "12", "16", "0", "0", "0", "0", "0", "0", "4", "2", "2", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "29", "10", "1", "1", "32", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "5", "2", "1", "4", "51", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "3", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["7", "12", "46", "83", "1", "3", "49", "23", "0", "0", "0", "0", "0", "0", "1", "1", "0", "15", "0", "0", "7", "0", "3", "17"], ["1", "2", "27", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "20", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "14", "3", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "20", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "1", "1", "1", "27", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["19", "63", "131", "77", "1", "2", "136", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "19", "4", "0", "53"], ["2", "6", "22", "1", "1", "2", "34", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["5", "5", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "4"], ["0", "0", "0", "0", "2", "4", "19", "21", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "79", "1", "0", "0", "0", "0", "1", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "7", "19", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["42", "147", "161", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "42", "1", "0", "104"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "97", "57", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "1", "0", "2", "3", "3", "5"], ["0", "0", "0", "0", "1", "4", "4", "41", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "7", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "2", "5", "5", "5", "1", "1", "1", "1", "0", "0", "2", "0", "0", "3", "0", "0", "1", "1", "1", "0"], ["0", "0", "0", "0", "1", "2", "9", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "9", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "25", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "1", "2"], ["1", "3", "25", "14", "1", "3", "162", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "2", "0", "0", "1", "0", "0", "2"], ["7", "15", "54", "1", "1", "2", "90", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "3", "0", "4", "5", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "4", "0", "20", "2", "5", "2", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "2", "0", "2", "1"], ["3", "7", "33", "8", "2", "7", "8", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "2", "0", "2"], ["7", "26", "106", "41", "4", "7", "137", "2", "0", "0", "0", "0", "1", "0", "3", "6", "0", "2", "0", "0", "7", "3", "0", "17"], ["2", "5", "18", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "3"], ["2", "2", "7", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["8", "12", "44", "38", "1", "11", "16", "16", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "1", "0", "7", "4", "4", "7"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "4", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "5", "48", "36", "1", "24", "74", "23", "0", "0", "0", "0", "0", "0", "1", "2", "0", "23", "0", "0", "1", "1", "1", "3"], ["1", "1", "1", "1", "1", "1", "45", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "10", "46", "9", "0", "0", "0", "0", "0", "0", "1", "1", "0", "5", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "9", "10", "17", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "5", "6", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "4", "0", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "1", "1", "24", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "4", "6", "4", "1", "3", "37", "23", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "9", "2", "1", "1", "33", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["5", "6", "23", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "6"], ["1", "2", "6", "2", "1", "2", "35", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["3", "3", "2", "2", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "3", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "10", "48", "11", "3", "24", "42", "49", "0", "0", "0", "0", "0", "0", "3", "3", "4", "26", "0", "0", "1", "1", "0", "7"], ["0", "0", "0", "0", "1", "2", "10", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "4", "18", "1", "1", "3", "62", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "1"], ["1", "3", "17", "3", "2", "2", "25", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "4", "0", "0", "1", "0", "0", "3"], ["1", "7", "37", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "8"], ["2", "4", "15", "7", "1", "3", "84", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "2", "0", "0", "2"], ["2", "9", "29", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "3"], ["2", "2", "2", "0", "2", "5", "20", "16", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "2", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "12", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "461", "0", "0", "0", "0", "0", "1", "0", "0", "42", "0", "-3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "461", "0", "0", "0", "0", "0", "1", "0", "0", "0", "39", "0", "0", "0", "0", "0", "0"], ["2", "11", "212", "155", "1", "21", "272", "198", "0", "0", "0", "0", "0", "0", "1", "0", "0", "33", "0", "0", "2", "0", "0", "20"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "22", "37", "84", "84", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "52", "71", "181", "147", "1", "1", "6", "0", "1", "3", "48", "5", "6", "16", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["2", "5", "21", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "4", "28", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["22", "46", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "22", "0", "0", "0"], ["3", "4", "14", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["2", "4", "11", "13", "14", "30", "57", "62", "8", "28", "221", "90", "0", "0", "14", "1", "0", "7", "0", "0", "2", "0", "0", "2"], ["3", "6", "27", "2", "1", "1", "86", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "3", "2", "0", "2"], ["3", "6", "27", "2", "1", "1", "86", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "3", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "8", "3", "1", "1", "76", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "1", "0", "2"], ["1", "4", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "4", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["13", "21", "100", "62", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "12", "2", "0", "16"], ["1", "18", "83", "83", "1", "2", "47", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "13", "0", "0", "1", "0", "0", "13"], ["2", "17", "126", "83", "1", "16", "136", "134", "0", "0", "0", "0", "0", "0", "1", "0", "0", "10", "0", "0", "2", "1", "0", "9"], ["1", "1", "5", "0", "1", "4", "51", "12", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "19", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "8", "8", "24", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "16", "16", "288", "272", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "9", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "6", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "9", "24", "19", "1", "1", "30", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "5", "0", "0", "1", "1", "1", "3"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "0", "27", "0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "8", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "11", "49", "8", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "7"], ["10", "14", "14", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "0", "0", "14"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "19", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "69", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "-1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "16", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "25", "29", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "18", "228", "104", "4", "16", "118", "12", "0", "0", "0", "0", "0", "0", "4", "1", "0", "18", "1", "0", "2", "13", "2", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "5", "31", "7", "1", "2", "2", "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3"], ["2", "2", "5", "1", "1", "2", "2", "0", "1", "1", "2", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "53", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "8", "1", "1", "52", "0", "1", "1", "5", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "28", "11", "1", "3", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "2", "28", "11", "1", "3", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "3", "5", "1", "1", "1", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "12", "22", "27", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "8", "0", "0", "3", "1", "0", "6"], ["1", "5", "52", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["2", "2", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "24", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "11", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "14", "11", "1", "4", "7", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "4", "25", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "6", "38", "42", "1", "13", "81", "12", "0", "0", "0", "0", "0", "0", "1", "1", "0", "7", "0", "0", "1", "1", "0", "4"], ["4", "19", "243", "231", "2", "8", "292", "34", "0", "0", "0", "0", "0", "0", "2", "4", "0", "26", "0", "0", "4", "6", "13", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "6", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "7", "12", "15", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "8", "12", "46", "22", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "11", "27", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["7", "14", "188", "30", "12", "14", "150", "17", "0", "0", "0", "0", "1", "0", "11", "3", "0", "7", "4", "0", "3", "11", "1", "7"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["28", "95", "487", "393", "10", "42", "122", "190", "0", "0", "0", "0", "1", "0", "9", "1", "1", "50", "4", "0", "24", "30", "21", "33"], ["0", "0", "0", "0", "1", "3", "29", "2", "1", "1", "7", "0", "0", "0", "1", "2", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "26", "64", "200", "1", "13", "179", "61", "0", "0", "0", "0", "0", "0", "1", "3", "0", "18", "0", "0", "3", "3", "12", "8"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "115", "54", "1", "3", "138", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "7", "0", "0", "1", "4", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "10", "130", "57", "2", "3", "60", "4", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "1", "0", "3", "6", "1", "10"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["5", "20", "188", "39", "1", "1", "179", "0", "1", "1", "1", "1", "0", "0", "1", "3", "0", "6", "2", "0", "3", "8", "0", "8"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "6", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["6", "7", "376", "3", "1", "1", "163", "0", "4", "7", "13", "6", "1", "0", "0", "3", "0", "0", "5", "0", "1", "36", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}