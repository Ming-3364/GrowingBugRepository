{"number": ["ff9f3b6eaaa87314d0706b418945209b356af1e7", "ecabdcabc11ea82dce02bfca56cef9fc557aacb9", "308571150a9340d3765c3de1ff876844cd6c0e43", "958b168fbc2364ebd9fc1da0e28ab4d7260014b0", "fe3aa70cee06b3f444c85f0e7ed0338187ddfd4e", "51ad527d185739e3ac1473436e17167f4a0a0500", "d045434409ddb744fa1e3c073eea554d03b9ca74", "90e421d372abc24841107687e8ebbf25021cd1ec", "d2d2ff57adf991e639c4b218fd714a769bdd53aa", "3e54d5e0078c76bcbfdb047588e23e2bc4ed54c4", "ca55aa8e9ad4265e4a764ac3c7eab8f057bd5e1c", "ab04a6eeb85ce76b7425ef56de09cad28cf10131", "494eab228113d475a99c6a3ab75b06f9455e669d", "5ab46d9935c992eab7ab7dce4f1fde196976c789", "0a2e94323a642cc224b1b97ce28e87aaf073408e", "d9a31fdd184b8e39fd7608729a5d2e5e699764d3", "4ca9468a59234b30b14be386795a66578119f13a", "75e38cb6d264e758919c75f847fcd135ed900f07", "b2431dd4bdc5ede8a2a7b163d039b3e8056c3110", "4d5a413be22906bc5b4da03d7bd3914257bc1009", "41d6999840bc54ad4b044924060406738337ffeb", "74490278f03e8e46a43ee275185f3bfcb5b73d86", "2d1afa5f17e2fcae2b73a788ffc1ab4bc0510079", "93ebd6cebf3e37fe87ffce834352502284d1f594", "c744bd26da431c908d8e27906b659155ecce66cd", "772b26246c3bdaf8902792c206d58099868a8655", "a90773dc448e647537db1669f34cee2592dbfd04", "b37431a7181cc8b44fcca7b6e69fe02a3981dda0", "3276e2afe7496b4217b5ad62bf60bfe901749ebf", "d810ab87af8d0c5bb205bc440f4f3a3cbfcafa49", "ab1a6d9c3c32fd9c5e49def7fe8f1763dce09d7d", "3940bef1eac4ab9948e08b10f080cac08b2d25f5", "ea2fbe8fb359b243388872f43f850571194fa209", "90e8abc735c0b09776ebee36ff18b57340589000", "c6828af291a5c0d5386faaaeed0ecffe1c9c1d78", "4838439b337fa374d70c8a06ebb175eb4d16dbde", "81361cb1dedbedcae9d240e755eed640bee4bf96", "ed41476588a2e28c661394ccf6827185c9a9a65c", "d80b57246c49906c938ff34f9743bfb5a9bc5ae7", "c69d9e1309ed2f5685c69690741c822068c90775", "d83133786a73f88a9a1d6240ea8b927595d49c4e", "799b41446d1c93d0e797d26ea299f74a2905a9b2", "b75f63e8be8f9e4773ecab7a072213dbade2ed28", "68cdbdb6a399bf302b24fa626405703a5f146082", "202c591d69d9a563a32852dfe28b8a7e64beb6d8", "ad4984cc383cda5784cc2a676b9041d09a9f7cf3", "ffc2d1018f5e9beb4f4acf42d1af6514efdf6a8f", "d73a3c130494f5ce9dafdb2644a98d1bc9abd7dc", "9245f2dc3b0150aa82ac20004cd7c897e1b9abec", "3bae35a02df0d86b1039ef1cabbc9dd0e745bfb3", "79e655d94da0d8650e89db37d5bd59e72ceb4b03", "7e814623070cee30dea61ff838fb2ad111b65a7a", "e6b072b6b267d5647e645f69b065e22723ace8ae", "ecd8e744270e3dc755c50ad85394440e53367b13", "13836e43ad043eaf15f122924e70235a69116cb9", "2a34a9a1bd0ac0a68f50cbf1dcc27d23b4c4ebbc", "fe04b47c981d59fc6d175ecd4b1006af5bf55759", "0ebbaea7ec667712878d05d2b5ab94c693f5daef", "4956b10403b42d933e411ca86d019c17bc09241b", "9f0e5c151183d34c3a1d1d9ffbd41ca4d0726bd4", "b4cd75c17f64bc3200a6673423ce884bc8ad1458", "4a6946468cf7fbff82104f1ac196876f0d83a871", "a4d20b40d15a6af6a1e527ee81510c890be9e875", "384aa69dc37626e3767740715e1982fc9e195cb2", "157303e50673db6cb27fbb7134a90f3fdb807204", "716dfbb6b8075f185dadb0efdb54c744efa9ba6f", "ef73c99ad317ed20328a1297dc7b30a89f9a8d13", "57b6a5a4b6db0fe9f75b7ef73dabaf60bd09d17f", "3e5c862edff121b50d9b43e63d25ac80a826eefe", "0bb73fcc9a8736778972d56edd982958a832e40d", "58ebee4278e6999bc8db4d74020a5699c94c3452", "5d077d1f0d803ef58f0aebff673b50e878af8aab", "4de81c021440e1620bda8cc03405de622c7f590d", "e30a253c6f3ce0d3cf4fb73774c313839eaedbf1", "ccce48c03868e30e349df4f7d7c7689729e5819f", "25cb614a337bfb74de3612b0be6c7b892a330e50", "dd0dd7ff69ba39bb306efca16d2928deb6d8c841", "c120c87f2f5f795e33b9a5a5dbc43c5de0b05383", "6ec0fe5ae5d637e7f4a4424fbaa7d6fd8ef1083a", "557cd4a4c873d6c646e104b4285cfff140e748c1", "9f69bce5e10ed75d73acb2c73e3d5f1af73f4ea8", "9110f17c92c7a2ca15d97c4cabfc64be7f2a3d6a", "d7c2452200fd8e05a64cf6c56f47b146a926025c", "36a7f8da6676f4bdd8a1597189610aa4e55cb4d9", "693961abadf236a31ea8a77f07431b31ded7916f", "ea98e6035daa1fa0478c67501b1af7f7acf4c0d9", "92cfeabe440d95decd9e4fff2560c1d60f5e6560", "df1218055f7278a43cd4952236a9e8070993cb15", "cfff7f2a215a59b86ae27ec499e5ccf4588a0897", "2107af3b44b917448cdb30f7fdb4f10a6d738721", "284e272068a680004466f113263a7c552e53761a", "51902363b595264035486494611fb26d7c427185", "687c59d3d085cbc2707843d4ec6b4b773ef53151", "186847b2f3e6124a9bc06910ec2f654b42c6ec0c", "39bebb775fb9371ee8af51dd89359c471c122fac", "c81db74a44b9a39a714140bc988031ce9c0a74d4", "25ad5edae220afeccd123a621079c465e3002350", "89a8d635a946edc111c7e57c18009ffc0ccdae6d", "1af3cea5a2b990ee1029544ec93c77df44299f9f", "f398ed89a787ef142a5db8bfb65b96401ad7d5c1", "7332444ae6ba2020425ed9bd784cf04c5c8bdc69", "46c31721002fad0fd7f5b1115bf0016b292a0a35", "1c2bdb466698e7dd7173c8ac52432188401f8296", "ef8a3e3435e2948b2afd7972901eac5a45721b19", "69f4bcc3802ed0b0bcda5e91d45d0ce372c3d1c1", "c591d00af08b1bff8642e047c12e5c10c76428f3", "1a304ae037c278ce2204989ecfdddf9ac449638c", "9dab666d3ecb09fc9ab2e9acd9486ac066e888c8", "51a981c900b77109ed090a616b2358b80ccb3e9d", "f0942719bf96487596fa71f0b7fdcc1d004c34e0", "de8eb7d2897ebcbfa7d4ff61ed5fce5fa42e20f7", "a70b3d8a75d5805a6daeedcf80ff44bf8b8cb276", "0d0e58305b87cfe8fe26aa8c8abcf8c351917abd", "55ba9f5f5ca4a76883ea5ccff0f54a2b3d770470", "b15ac35b53438f733afdca5b1015f248f6669c4a", "38ec7c78163de927608bcdcf5d54b9d552f9ed27", "0d51930407eed691e11dc2767f34ef5df6cbf4b8", "53e5e77cc9ec42c96840c8f4ae04dc500e0baf63", "854387184da4044769669e84235d1ef4d7f8f43b", "9800c05277675e3edbfe5d1246141cdfab0e78e1", "40fd2139424f5e07cf1be149e36d2dbbc1c85436", "0a9ddb9065a1c25a80b99c05bbad126845c4d16f", "ca41392409e8e1fb6760d4b452d728edb5a06c6f", "26bf291f91734e9d1ed41d460dee4a94e9c3d204", "7612e2319b8ab4ef50cc352632cbe76f5a8caf62", "4ffa7acc032f58cdf484f4ceae1283111cf1c3b5", "c6fa248e6c51c36a61be9d7bc6b6b15d4013875e", "a3c210cfc5eabd1bbb1d6ae4b009fe831e2f1d9b", "041fcaf0b32e1316c578f971039e1632a01f8f79", "5819986ce086a4492ff241041071996628c5d08f", "68d1b317f38e49a6cad3c283ad05c7d79f29b490", "94be4377345033cc20c64f35e8fa5b5d9f35d8c2", "bf6d0dd4c11221c13df11a364339765586fac18e", "31eec803d83bab7fe157f40f932bab63aaee22aa", "37f66c243b28b72dba2e14e4ce12b447762c089a", "3d648dbc3537eff3330ecf70677f22097ff68a9f", "829a6d48d90b8f4e3d340f8a69f42180e002e7e3", "3b4a48485e691618d79b15c0e18190b06b1e2a7f", "cb4f54a0e3468e5b1f5336a47ea98308d163d605", "feef3837bd6cd43fddac1f30790f0440c956c5cf", "d5943e3655ad622a0237451f308ca0eebf8edd4a", "d7fb538233920b8de8deca98d9251c846df7db5a", "ffc21397e3a478760c1dc9a89deb88ec931b9b17", "d65d6543203ec51086e9a631f3b2cb9af02b9aea", "e3fd7c30ae438c567b01535ce1f8e0facc75e48f", "9c113b429bb47e6464450d413178242f9aafc935", "4c9fc5cf8ae1151de136c651cf514cc310ed474a", "50a23b685977bfd940b29b724588c2d08206431f", "ff21e9dca93a8fecf57954dbd09b9c0dbef362b5", "32fba0fd31921f4bac38c0c8a13358a865beb885", "16f0e05cd4665b5ba2ad834d40f94a2b2ddeb3bb", "9b775a4983f6f0cc5819048c484c3a26c5dca127", "a63b1aae7ecf5152327e7a50d273f140168cbdd1", "391f752f7c312c62dee75ef2529c5334bfcadb38", "31e8ae4d750e63e1686bcc91757fef2f1efe67c2", "81d2c8e8181c867c1a1e5d40bad1c2570653211b", "0702cf055d88ae8eaf377cbc2492cc79096dc415", "94354d75e4d69579bcc0f13202c4acc6ed02768a", "9321f50338ab20e2976ee3edd17c9004c002b1c3", "a85ac04dc1d6a616f66dee455c590090a567e772", "821b23b1afdf728a0c8211324cee0930fd704411", "58ec6c39ffd54e699db4e9a1f57db43b4100e170", "5d191d7ea0cf081b95cb89b5352aba465b7e6811", "9706f6797c183351fce5161adf94147cdbc6723b", "cf4c466ca564345312d046c3095dc1c29aea7049", "66e44d1011fe43b69cabf01ca65c7e334bf692c5", "02384a7aa40bf8e4ed7a79aa291e5b76d3e415e6", "a6f011d9e2d2358822e391c6a3ff77d9e59b3856", "2f08fbb7973854160b1f1e6a4dbddfcab3d3f3e4", "4619bbd43029731e6ef69940ae2e1f4cb805d098", "454b1ccb39b7f5fd72e588b9beb6648078ec4483", "f8735017aa7e3178ced8ea5c88dd5f352030cdb7", "59fd409120cc9ba7fb9701cc2b9dc7e77323ac66", "8ae656b0c7d9e0380a816f402ac446c1bbb84bff", "0261613be7952d280e784b7508b89817a48f2538", "8eda1a9e6d5eb04112914137dbff9c10548f1641", "b83dd3a3e7dc2684924a59cbda3261912acdbb16", "4ed79017bf92cfe04ceb2b444a680fcc6ef5bf9c", "5b6ca1638dc7fca2484e98ba8b0332ae0e1e4865", "d4a13e913242da24c9a9b4f638a1d454987ed383", "ac911d4d700082b28c4848a21f3542b7249dca98", "3e5d7144af093cadae8a8ca35b0ec663deb90077", "cc0585d1abd38a100ec216e38b1348a06ad8af1f", "81d656f81570dfaf3b54f7da0f3499adf57361e2", "0cf7572a5d1758b9b289bbaaebd1308dd5825e71", "47538a7628c46b898980f6a693da6bbe13162f53", "8708ca9895fa467d460c090df73ddb5ae055910c", "cdda5d45a4d73f4a014205f04f33d8791a5d7c0b", "c339d875793c46fbe5ad3537668e0068f0dee60b", "5391adc47cd28bd442501285984d5546efab90fd", "3a6c59dcaff12864c834726bd89ef69ae82f77f8", "66e23537511756cdb8144da5d716128112779a62", "39524d79c30b800f89ab06619304c55ef557704f", "0a3dacfe9819d7ffea8581ec6b5fd570d0fdb3e6", "5fa762ea60a6b4fbcc96a347bf8837df9a2e9b61", "464913e93849e983ccf4d15c90ec879d74a7d34f", "f59d25504b45aaf103a9fefec7e85d72c8c002f8", "d1e2bde095d8d60fd4b71802d5f43499ed26be52", "5062cb9bea478530d091adabd008e37342e2b6e7", "d8046141adcf2656faeefe9b3cd9fbf15ddcbc33", "97adae4003154556f6e64b40aa65a9f0a3bf2f87", "75f3a736008fdb953133f20014fd6bd9f66a24d6", "3892b1d23410faacfff8e3d2c0d795813404bbb0", "aa6a9bf6ce49ee1207a1b300270a47b58a19e8ce", "bc999a55ecc9d4c65548d2e39d1d3b3887dcc416", "2938cb828fca453ff33d9ab516e0ac26335ecac5", "012f51d26c51c5da28cc0897286a4fb6b8cf42ea", "09e3132a06cd11232c05f3ec6c9e86aa69c532c7", "c18664e10d14ddcb2a8eef1b760b250bc8e8f60d", "61acbdec8e56aaa0f683ff813b79e0c131e991dd", "8683881b580d7e62063f9a4966e910e8a2696bc9", "36724db0e5b11c9ec9f0d162daec4eb934e5379a", "a21f6535f65b99395fab92785ef128c8de2eb5d1", "2a75c2ef40bea7369b8c5e8244510753d6919b08", "0d37825bfe62c4bcaa1d54afa7f1c045a46cd442", "dfde10eb97b3d2c2a8a90d39c7f34b28ffd841d5", "d13e410a506a072a69ff38e648cddeec1cc60584", "bc4182216a9903a035b03328839bac598f15875a", "063211adca03267af895dd5cfd0e988fea01db0f", "759b22127c5ce99bda95a787b333667d940b9d71", "2fbd7d6dce0f6aa47a3517ea863b070320e779b1", "462dfe89c27e54ea1bd25e2ff94710f440c15bf4", "749538bdceead61b22d72633e4e4665547d64a4e", "e948e07a515e6da81363c6b095b367ab85d91e5f", "324546b396ddd919217b986982aac329b0b2d08c", "ec43c5bc62aa3d30a515aaa7a0d16d5dd64ad567", "b212c705dc6fe5ff612a5883e37fb8e8eef4f393", "56f90bb849c1341dd55a57dae8ed0e2d2f0928ec", "f4c9c0b5958f74fbfec7c92cec02905cc85a312a", "bf58bf30543798311f87b7b7166a3b266435e642", "25c36aa54b07258823ca4b2a2ce3fd777d0ee35d", "7bb6388c85b1b2a7cd8932030c788a1331883c17", "bee72ce44f2b2a8e1d4cb408ec53362fcbca44ed", "bfc00c9047fddee248a3c6f401ae0c1806ae57c4", "658301c1bfe551927e4965d1b7cfbdba526ca58c", "abd1288709638916bd6c58d416759e8c70e195a1", "dbde5f7f4e7d1bb92e5e454c9a71538140e02911", "f1da46c0705c988231b3e65b37cbe6f5e6ce39f1", "f574c31a466bc4e6af894f0884daaf2be0ee8cde", "3e883601cd3fe645258a68003ce9a95e4301dbf9", "8cf3b042887ffdb2b9a0dd131999c1874e0cda48", "bc672a9cee9cb0d95356544fb432a296795f4e75", "d68ed1aa6bb79176a6e6be5bd11de460b867f157", "4912ed6a0a55b51cce00718dc3ed7bf5d90d3adc", "01ea864c28ed650da09988d75e6e26411a57e043", "8789fe9145a6f31ae3b764969c9367edceaa78a0", "8e912a90945d3a8a2b1f13c1a84c670b699d2890", "738334405693f1e545aad78fb96cf3e3e69c1a93", "c0d4c44db6aa1077fccaa34d32523d9e2bdbde56", "8b295458ce651f316cf712d4e5036e9883bf1bf1", "867a76b83a2572f39ec169c55cd8d971d6dd2454", "b63f9e72097eabb75cbab2b0579f59ea1608d50b", "f520e240a1fdcca97d9d67c9697907d7c14098b4", "28014b83bd897ae7723dfc18a8c6ed3fcfa9b56c", "9d6ade772d70f04573ae2508d3ca7e95fb5c9e2f", "553b14c3181cbd88735013b19a7505e823f33739", "4ffff0c8576392cfd387e5ca84ef2a35c3f30e3e", "3d06fa831ca2105eb559d69652a33de3f4012ab3", "5f1fcc9538033d82823bc8e69ba225be5a772194", "17b049a286104e9000cce1d0bff9b3aa85fdbff6", "9e1d939d3aeb96e05a797cae9d1ef75287a845a0", "97a08a645391b0ea36a0bf24ac159d4a7bca15dc", "62f2269bc3a6eee89382a262f857aadab8bca71e", "eff9e1a1973a555e3397f3e036ace61f89724953", "25d346ac468865a71f3efefac4909561794f73d9", "abb17a2749555f3aa6105c7d79f9a3c3cc002ce1", "60b321a315ad59725ab0a13dde3de5cd7aac6370", "57c0bd363416e0b79953cf646b1dafb0b269989c", "61d711f61ba816fac917719d84239e12a9b6ef26", "5943f9b404a3152419040643db60f4a522aa11cc", "f31b1ded55643b079c18474803d7b392c55cd94e", "c7e89b4ad7f712828895108426c7a3fbe812491b", "493ad4af10b5f03770deffc7c3a69f40eae20d0f", "f3690c7956d46c730167af774f9bb5531506886b", "5a3353e1d388564624f1dfd17ea874d29e3d9a94", "863d4dd2496c46c861be85baca508b3316f25fcf", "6572f103d17c4aac09275703e14f6c01fe968fa5", "5d577a6749999c2cc7b0b4aa408d76cea894f267", "7868d9b3771a6ebb13685ad78930df199a00357a", "3eba250187c7206d963f8a563d56b7de5d823164", "d379a0513154029523d52885061acf4c11f23a85", "699c1b5773360515bed9e90c8b08e00fdfeb43cd", "b83c59e5238e0c027ab90747eb640a903cbbefed", "325afc69edf79501ee45022ca770b49e25c066ff", "a57cd74ab8c23f011baea4aa6a8702bb1fc249cb", "3313609738d0c03e6d9c03c3f8c8ffba3018515c", "883ecca8007da8bc9d7b95f78c67a12ba9d28936", "5eb54f071e0747782f47df3d846c0f87b5f88745", "f4797e252d3ba1c327affa49525c114d9a9bf22a", "78f3e05a26dc35090c5ef1a42c8d29fcf73da5e5", "eff60e2f6829ecbb6343c3afdff1e3e17bc682bc", "b3ecc91886be91b1da97e519487429101a581fc5", "4accef444f33d9bdd6c8b98e837e6044c1b37e77", "2273b34b50b1842bca7c86e95cd0d59764f6ccfd", "615fc7e38fab4be0b2127118af4bfa9d45947974", "c0df05566b066ff3d8d55b326972b8f5ec064d09", "5a72a21f030ac116984439aaa4020d363246a380", "89905075e3d46c250f4551437873db757050f85a", "22f83b2c2501cbb31bd11667912c207724757c25", "69bd7cf7955b7bd71664f91b772b28f97bc8baa2", "84b78f4bc63f658821c11506dee57e3c0a680d21", "87156c4e1ab3d555d55a537bbbb45f55246596f4", "34a9a627471b65b6abf8e14a9eadb5fa54f6e852", "1183e09211da9858e140c6b5927765a09186a952", "6cbf8ddbd0d37ee81e2a9e10cce1d697f6238b29", "63f50959a120b842a6a1a6b04be2b52dffe8b31d", "f844f53b4124b49b71d233120527c840d4d2c6f8", "ab287d4dd360202171b5692b9d46345dc6aa45e1", "eb80f208171e75e7492bb5da174cf434b6af2724", "4cf77fa6d20b9611a6f3463fa20cc8112c11ac4e", "cdbd99911625015e638efa961edf8d424c1e2844", "665f4f3d285258c82d2ac1ff60f31ce5f8e17749", "d522d22b6c30379849e6e1f8f700eee63f64031f", "ddb4e76abc9c07e8a09fbbe59f841a071a219420", "6659b062d0e592e7c452846ba1404efb8898cf37", "71b0d0413afad822c7b7663cfaf72de037fc5e40", "1b8f9505b64e3f7cc5dae7d50ee465105ea822ff", "bf13b6c8160273e28788b6b5536396c62abf861b", "80554aecf6403160e5314256bebb200739e912b4", "70f1de8a1af664814aa7ea97e0af5ca8c275d23c", "864d490403ef44305ce3a35343e5eb992fa217a2", "b0f1135909faeae39e1e5bda523d41c745ee9e00", "94e0bda000e70a1f1ce6779a12997004f37d483e", "ce4f8ec26303d6f4725e548f7d6155502e75dbe4", "31c46b744a9961c2df4893be36ffa558838faff9"], "father_version": ["b22f27a4db9e848e76f997310be4395a472a66ae", "308571150a9340d3765c3de1ff876844cd6c0e43", "5ea88854140741176d1f1d3983db3d8191d9684f", "fe3aa70cee06b3f444c85f0e7ed0338187ddfd4e", "45a71f4fba65e147239b3262b458b171fd86c74e", "ca8dd7bf58260f3a65d201e507fa01485f29ae7c", "90e421d372abc24841107687e8ebbf25021cd1ec", "67fbd237b8b7c452ca9157b6b1156ec1b205b6ff", "01310b5ef80288bcfe5e8269c7ccda388a5b0042", "71a7a896c46625bdb645968252dce838b982c9b2", "71a7a896c46625bdb645968252dce838b982c9b2", "9f96832e009c19beafc4cfd32b081ffebb2ea120", "27261d61051865786381d3df2c1afade9fa64a22", "d09df7e8231b10eb8ffdf442836223288d5f8fcc", "44963a75e242dbb758fff18b1edd4a3041631d06", "4ca9468a59234b30b14be386795a66578119f13a", "75e38cb6d264e758919c75f847fcd135ed900f07", "e4b6b3956ed4f7e1404e4523c6629216b2384476", "cadef16a5ed1de9c12c2defab651386554e62ee3", "313347f7fda10b26f022618655d74e303d3fa01f", "ee7ebab04d0fc0e93d0ef6f76089e57c86f87a72", "2d1afa5f17e2fcae2b73a788ffc1ab4bc0510079", "7044c1e325c2b35c9383e121efea014dde294f7a", "c744bd26da431c908d8e27906b659155ecce66cd", "249744f5e314f60036b891bb3bf87673b4f69a24", "1e752c28eb2de16352a829d8af67c6ba7cb7193e", "b00a9076f858fedaa5b4ea1ea9580f4228848efb", "8f5f36df26db335401e7122083705212d26ad08c", "0b048dd7293128c2b1923fda5d4e3bee27762577", "34acaf413278e9d73b588c051240fa3138de8c9f", "5511a7f0e7a9fdac8221504fd5d4dfdd41788f4d", "327d7e4518eeaaab9b7cc352aa854bcaa87eb64e", "90e8abc735c0b09776ebee36ff18b57340589000", "26757e71b2001277190c0ae8b2de54c0af6b73ee", "91c58e1eb927b276e788b97c45e252636d11744f", "95f0911631380fe17155ed3a30864afc20747715", "89f6b414ed81fb4cf89f832c0b731272428fa829", "d80b57246c49906c938ff34f9743bfb5a9bc5ae7", "2aa35020f040363b0177793da5bf3f2b2ec8ff7c", "f4b743bec10921f4f953098484515d156df03fef", "c9d71a8528872794a9c9f7f7dcb8a53df7a4df66", "fab904eb5d6256710e3042a1ee0f528a3c1b4f23", "53b7cd5cdb28ebca06694579d969867cf28d04eb", "19207254cf62168baedb6d143070838c0d4cc92e", "3fb01bd0559d0e3d786e92330c6aa5b9da8a5cdf", "7628c31806a54440cebc0e7703e2778b3adbc92c", "2ee7f3063812ab5c9ac76bb69a01100e7daa5402", "1b9d10513f8963230efe39aec73b7383d386345d", "ae76290a020871920b71c08be128683e1741ac0e", "eb4f860d74fa115cda013785b37fbccf6d49deb9", "81e2be9bbf2fa4e1be81a329f23cd357d0818b89", "63cbdc948830a4db68c6cc3e3bd10fdbef4cd341", "4d9ecb63fdfe485d3232aee9ed396d0d4f465092", "738d017cd4d90c7d4e96f3322edbcd816c0d1e05", "71bf55c6d8b8611e6772d7b72f1f580051aed4d1", "fe04b47c981d59fc6d175ecd4b1006af5bf55759", "24ca13182292441f4f2bb57b2dfd2bc80631dbc4", "fbf6c9833012ede9906dcc702d4e368a9712c6bf", "d0ea3d74c9ff20697e24b4fb123ee6ea7caa442e", "b4cd75c17f64bc3200a6673423ce884bc8ad1458", "4a6946468cf7fbff82104f1ac196876f0d83a871", "d9966e9a5ed5d5d0a233abeab323f2ea3b90869e", "a6199de400ed3b6225cb337dd5419af5861f0f33", "a6a5d73bcd0b0df74c94a4111651d6722548510d", "574794d7d209568cfeab76373c472a242475ac4f", "5b86c7cbcdac48682bb1e3e201d2e4def44ff56a", "c41405dbd49f1d083a8b40b0f003b2c292415cef", "72490fa5c841720c70f26186f6e874f9d2ae4379", "0f33df921d4b227c2fed02cde7e71cd59ea6f51b", "5f041a3fae42e6337856e67b312a5c4b575e6f0c", "881464dd7a631f76e6be5ed4c8f4b8f85b201f52", "1c0ea015d658db440937a91dc42ccf1136e3b299", "e30a253c6f3ce0d3cf4fb73774c313839eaedbf1", "17011dc0e5b9f60a5dbef3f867d327beb5439613", "feb1e1323c8a7fe698aa0e0e2a4430e28c6df853", "dd0dd7ff69ba39bb306efca16d2928deb6d8c841", "84668ca9bc05297b5621137c0078ededbf0190c2", "6ec0fe5ae5d637e7f4a4424fbaa7d6fd8ef1083a", "d66c5213bdf66f7b9a9affd05a6cf96e86ba57ee", "9f69bce5e10ed75d73acb2c73e3d5f1af73f4ea8", "9f768d75c5967e331d2c415e792ac15ef959655d", "8961eff6f0c1d84ac3e8bab3be6552d13730b737", "21d1511b4db58ee4e22718a7f8175331fb01a923", "3bbdc91d649a085564561a6e93ba9e052d841508", "385f1ffcaed80734f385401635155c9853ba0f6f", "92cfeabe440d95decd9e4fff2560c1d60f5e6560", "d7c61285a028a83109dcbd0272fad5c7d27989ba", "cfff7f2a215a59b86ae27ec499e5ccf4588a0897", "2107af3b44b917448cdb30f7fdb4f10a6d738721", "284e272068a680004466f113263a7c552e53761a", "3beab5b072d30fd6e0a220b1ccb60c676c9ac3b9", "687c59d3d085cbc2707843d4ec6b4b773ef53151", "5e8cf758f99060d9408b2e4b1e13897592ed0ab9", "eaa7a94ee2d5f3b1f2714d4fb7f3e28095cc36dc", "581767d8ae894feb8455c107a7da2414fcfba3e9", "27190455411103ab6a64fb13450075d17a471155", "89a8d635a946edc111c7e57c18009ffc0ccdae6d", "a966c0c4db525b820ed30b68b5ec7081af67d4f3", "0a190bfbdec5d7345673e37b5faaf63672c0a9ad", "a90b69652be2d2d538e4aea175468f41cd455f20", "c716d1de3fe1bde6a330629939c45745e9e65e95", "01e1ae7557ef36cc12a1dce0d7eb403658c4ce74", "5c0a1c560bb76a36ea0285b4366107f4769f0bff", "69f4bcc3802ed0b0bcda5e91d45d0ce372c3d1c1", "c591d00af08b1bff8642e047c12e5c10c76428f3", "1a304ae037c278ce2204989ecfdddf9ac449638c", "c1be44c091fbd47d431c0b6045e555b0b4686b30", "51a981c900b77109ed090a616b2358b80ccb3e9d", "fc4b5a4d52c68c6f788526983a6df5bdd4f972b0", "de8eb7d2897ebcbfa7d4ff61ed5fce5fa42e20f7", "a70b3d8a75d5805a6daeedcf80ff44bf8b8cb276", "12146f65fca5c24ac276c82e08b2ee52b3209225", "55ba9f5f5ca4a76883ea5ccff0f54a2b3d770470", "676448c88b58ed49a97f7284d5dcee57258da08f", "38ec7c78163de927608bcdcf5d54b9d552f9ed27", "0d51930407eed691e11dc2767f34ef5df6cbf4b8", "53e5e77cc9ec42c96840c8f4ae04dc500e0baf63", "a4c4cc996b1405e1d93f8c59d0d4c3670aefffd2", "9800c05277675e3edbfe5d1246141cdfab0e78e1", "95cc01a1528af6a6f7ce10f9a77ab39d92068537", "0a9ddb9065a1c25a80b99c05bbad126845c4d16f", "94e6097c7bce16996e6bfb94aa4ef7a3854c115a", "545ce9672fb4f07db8d3a5233eb118e898a8047e", "7612e2319b8ab4ef50cc352632cbe76f5a8caf62", "6e09128e34ecc7d264ddc1827ec6c63c3a9dea0f", "a10776a6afd3a9f2c07069cf56183a78e0a4ed76", "a69782bea469a766f71f12f76e9d5154b7415be4", "041fcaf0b32e1316c578f971039e1632a01f8f79", "5ba02ffa5061ba9bc453bee297c4c53f18071a6d", "a0ac2f42d8038e1572490d616a5f2fb94422476e", "3f92ccf6daef14cb4d3640562f4139ad08ee89ca", "bf6d0dd4c11221c13df11a364339765586fac18e", "fcb8d2e0b4b1018f61b1c96541686916b2ed6651", "d23fc99a99ac44f2a4352899e2a6d12d26a74503", "817224be9c2762c8a79c1f392522cc98001e5be1", "829a6d48d90b8f4e3d340f8a69f42180e002e7e3", "f044b83f26e17ac448369b91f0d7cfd6aa0b2e93", "e7d212e423cd409bdd049864e77b0521ea5e4c10", "b6c6db7c60726c1eeefe90da8506941ec1ad561b", "f1f466dee130b42c1b422e312d96db3268612eea", "2a46b941bbe18e5f3a2e6d05032f067bb3ce76a4", "9c4433bfef6e8d7d00dd059223ac1ab319e64a46", "dffcc160edaa1be6dbf57095e67596f9a0a89ee9", "e3fd7c30ae438c567b01535ce1f8e0facc75e48f", "f9c945e1a69db2b0bbd4f9f4d1665af8e576fab1", "8f74069abfab27c2accce4a510b9bb3ac3cfed3b", "644f50f6fac26e77d80fc1b05e51f5b142842a1b", "585f7abff3b0ccb74557022b93a446aec9d3903c", "32fba0fd31921f4bac38c0c8a13358a865beb885", "16f0e05cd4665b5ba2ad834d40f94a2b2ddeb3bb", "9b775a4983f6f0cc5819048c484c3a26c5dca127", "e592a553376feb8a320025e5f09d65f2ccc6a93f", "8618dd6fcf09b9483ab3a161bb5cea8eced96e5d", "31e8ae4d750e63e1686bcc91757fef2f1efe67c2", "da8d3f893a7bdc1eedf2dea784a5dd9b61eaf958", "afcc24b001c1b47fd3c668bac29052540d2884c7", "bc346777ea7b40a5cd59a04a37754e4d2840af60", "f654cdcf8b29a379ec6f0485761f78aca910e4a0", "a85ac04dc1d6a616f66dee455c590090a567e772", "821b23b1afdf728a0c8211324cee0930fd704411", "58ec6c39ffd54e699db4e9a1f57db43b4100e170", "5d191d7ea0cf081b95cb89b5352aba465b7e6811", "e01ca0e1c40b20a0affd0a856dc569e7e24fb421", "cf4c466ca564345312d046c3095dc1c29aea7049", "6b4bca5bf48d801b6431d1318473e007d540af65", "8ff1c9093a8f54c2b40ed9a004f6cdf81ce5d18b", "a6f011d9e2d2358822e391c6a3ff77d9e59b3856", "2f08fbb7973854160b1f1e6a4dbddfcab3d3f3e4", "cfc2abd7d91681354c37c0518cc1a4147ba6209f", "e3a93c98461c6cd911ef9387d348ad8b4fe25806", "f8735017aa7e3178ced8ea5c88dd5f352030cdb7", "c9d4e5bd7a8c0a697a202e18238602962aabdd43", "928f2b1be3d8c270a75de7fd9b428dc957b71fc4", "0da87c511fa0b3c2986452224dbb920484d2d1cc", "8eda1a9e6d5eb04112914137dbff9c10548f1641", "77db74da6a1807d08996f8bbab4719f8d7103672", "4ed79017bf92cfe04ceb2b444a680fcc6ef5bf9c", "763b5eaf61c530c6193b88e8edc75649832dca4b", "9f86a156fad84beb8c88ada7fb8102f42781b6be", "ac911d4d700082b28c4848a21f3542b7249dca98", "3e5d7144af093cadae8a8ca35b0ec663deb90077", "cc0585d1abd38a100ec216e38b1348a06ad8af1f", "81d656f81570dfaf3b54f7da0f3499adf57361e2", "0cf7572a5d1758b9b289bbaaebd1308dd5825e71", "28ee83dfe0b137e70944efd2a0f5f4930179a5be", "f5f50c83f98d7e6194184540a597d08a19f17da4", "693d2da32958d348ee69db30d772da68b40d4d58", "0e62844833fbf64038fb19f854e9550b57622d54", "0c6a62e5e227032f16fafecf9985a40c4be15e0e", "3a6c59dcaff12864c834726bd89ef69ae82f77f8", "486e91e588273f3f804d14c874b8cd850f518bd1", "2cbe7dbf19bfd1b5e97b57d4eb755ea07260b396", "82eb39023f6049968420c7f9e7f3afa883632dc4", "5fa762ea60a6b4fbcc96a347bf8837df9a2e9b61", "85f5e5e6c532fe785f0bdc2132ca6099aed986f2", "54e18669cdb227971c3f561a1cbb240e2f227b3c", "f9ec0d1e63b4e158000c6770e708a8501717cbb0", "b1957fba67b6bf3b01d09be389419bc94b80f3fb", "3552602b166f3f7573cc404067b6b079b062cbd1", "805b52b4ded81f7334d302c9f6c3e033e23a0f93", "a87b95dc0f0f2f6a37e0a03b8f709de19f6e849b", "3892b1d23410faacfff8e3d2c0d795813404bbb0", "aa6a9bf6ce49ee1207a1b300270a47b58a19e8ce", "bc999a55ecc9d4c65548d2e39d1d3b3887dcc416", "2938cb828fca453ff33d9ab516e0ac26335ecac5", "3e782c360462305ad45c4fb0fd50a5e36d836a8b", "09e3132a06cd11232c05f3ec6c9e86aa69c532c7", "b6a39708dac0b45dcc2f26da2aa33e3976dfc3c7", "61acbdec8e56aaa0f683ff813b79e0c131e991dd", "9f6b40287d19657b0a7cf16499d02d02fea3b48f", "36724db0e5b11c9ec9f0d162daec4eb934e5379a", "a21f6535f65b99395fab92785ef128c8de2eb5d1", "e36c2843a6589407e723e383dcd3bd9176b27a3f", "dc9f57a6ca797a944a880ada37ac92c539d77e3e", "e025e9fbef207efea9e23ea7a49a1cef75512e94", "9c4f3b3ec40939443763972109de66e8f9e2057a", "2a0d77d86ea0e705f2750a2d6186e20132332d6f", "f7ececc5a7d6d230a03bb40fb613cd30afd4bbd2", "759b22127c5ce99bda95a787b333667d940b9d71", "4dce5ed9dcebc4bfadcf7a7af0c17f15dbb9c31a", "9f123642d9c2ecd5a31cb611283c1ff74b68205c", "b83be29511e96529d82686df5adcd735e1421425", "880be8e6311bf903605b2ad6eec60d62662f3856", "5c7e2c8213b385b00792290674f3c111db50c097", "7e92d642708c79a571871a49f5bbdbec175c8484", "b7075d7731c225e9241b90788440b0c263e1dd45", "bc906f5f17344d638d9341fc4b316cf08ea91bdb", "55f935e0e025d9a3eb64266497b4b078627cad1c", "bf58bf30543798311f87b7b7166a3b266435e642", "b58b70b57c29c380719e2fc6ee1230e4dfff76ab", "2f5efad687d8732ed6410793e164de4a5fb18979", "31e9e6b7d9df252dde963eeba37b4569f4c3f2db", "56ab9504b3264aa0976488c5f887404a38243db6", "724aad4ab6b728d6fc6ab3597f52d13413cf145d", "abd1288709638916bd6c58d416759e8c70e195a1", "dbde5f7f4e7d1bb92e5e454c9a71538140e02911", "f1da46c0705c988231b3e65b37cbe6f5e6ce39f1", "45a194114097ad5cf5f34f89270f99cad41bd8cd", "3e883601cd3fe645258a68003ce9a95e4301dbf9", "8cf3b042887ffdb2b9a0dd131999c1874e0cda48", "2c0608bbfe20525a172c4db4aec75921ea8dce48", "370670cfe26c7e1deeecca0f8993ef23f9777908", "d306aead568b1592d68e36eefc9cacbb320ebe1c", "f5661bc73d0478ec232bd5f9fb3501e6465e5bee", "c9a7e5a98da0ef3bc14390386bbe4165100a52b2", "8e912a90945d3a8a2b1f13c1a84c670b699d2890", "c5009dc6641d8439ced3e384b2ac23ab9502c8ed", "d39ed779529df26b0d21a516796525f7aba8255b", "8b295458ce651f316cf712d4e5036e9883bf1bf1", "597cad0a627fa6954caf6223dd4b7341a661dfde", "38bdea5dfba61ef1fe11702c9ed6752dd2f33a86", "689b066b22618e7ae6e58ca6e98fa43694d7ce25", "28014b83bd897ae7723dfc18a8c6ed3fcfa9b56c", "9d6ade772d70f04573ae2508d3ca7e95fb5c9e2f", "2b7dda8bf3345de9c2c36de3d718831acc612014", "ba4e15df1c49293f0eed64db46284c88970f9cac", "5095b412285737b3124c674dd9d3ce65cc411f63", "45f545e9da844b6d05443035cb4ff5bc8c9a7172", "158a6018b030def41d77a514990c44df05b9df4b", "da03f8ea0b2e04365c8c6fa91c3154e5b57197a7", "6dafe41a017daaab9af0653775208ad8d33475a9", "2149a4727372bfafdeaf2bf47be76116c052c0e3", "907d4d484e3166a5e497d92b6b93e2cb0d0fd3dd", "cb0d187a3cbc7fc953393680886eedda62c8ab6d", "2f6708e88ddcb203002c2286cb8d55ccbd0aefd1", "5a227d481f099f2190d7c616cff6b593f74d128c", "5fcc6153c684fbea76e831a86030a67070558da4", "106e5d10913c99f5d5a8bacdc07eac55bcd7357b", "9d2bcd62fe84aa446bb9bc9e5dc7685d8b3dd908", "165b4fdf2585cf684705bd72ca1bf655afb8b9b7", "84fdda157ce65213d1f0d4e87fa0be3d76ae84a5", "73969e61440002d8d4546bcb450c76857f0bfacc", "f9d569cb41c1e5db028b47aa229b2fce15c16910", "09f782b9025b686cdfe1918a90d0e6b1a666f981", "c54b69a8f6b0ab2898c673cba1e14256cd3291ca", "96137c0ffa613331e6603abc01104cfdecb9b042", "df5cba4248f7b9c40af5ba54018506d79f8d6da5", "3832496ada7e9f1010d088c7011e341400f633aa", "fe5ece77450367032caa3979dc60d0557ac591b6", "3ff7912b299c6e47c827d66048d7c60a06d4afce", "9ea36759c022fb7f3f14546fa0c06f93b246595e", "12eba56b005b1cf94ba289b2f590b6fdb70c1396", "663f76101b6e35eca1d77bf7d97379bf7a39d471", "2c1e982974d2fb3d3b3726c619d174c5f01cf285", "3313609738d0c03e6d9c03c3f8c8ffba3018515c", "96f765fd7738bb25dbe16351765057e2fb456ebe", "83534f963559c27f40bdcba5e28b646a085ac894", "27d76fbc3eb6a63f91fc6c6b32759df72f04320b", "ed927c8f262bd812357cd74f62081fa519803878", "d473115220885d7644df46430722d411db2df93c", "26093beea5c1eabf3c0388a0a3b104c14c462d5f", "c9fab5a610fef28803b409ac77db4925270f4922", "2273b34b50b1842bca7c86e95cd0d59764f6ccfd", "615fc7e38fab4be0b2127118af4bfa9d45947974", "25024c0465dee631ebf51d8bb37ced0957aca4cf", "5a72a21f030ac116984439aaa4020d363246a380", "7498edcbfcc732815ef64f47558defdb2378bbd0", "22f83b2c2501cbb31bd11667912c207724757c25", "45aead90454ce9a781d3b04e1b1fb5589c5ac6f1", "5f11eb55e2b85bfaa23510b0579a879515c42ea7", "19f8442eab7cca9603b80d9b3e0760369204b879", "060467aa08885924b325c702ea0f0ffc5c8cc9f5", "498868d8399181fd8f6b2d07c0953e46fbcc5f25", "cb401179db9fb011a20ac9db6fb5c05a8e6ba1dc", "68ef9c9c233fd2b3b0503615be2d94366eb6dff0", "abfb25c3e4f9325bd7680477595d0516fe59f043", "a9d6d330d4f6c62f4c06444e5ef0c1d83423bc05", "60b3a22317b7d83fd6de5bb9ce2df3a90aadb22f", "a9e26c299ddedf0b6fc5c474c4675adb971b243c", "fe261bc98e50d6553670bb59d536ad14e63fbe5c", "ba2178f5db90b336611dbed27a8ff615626ee7f3", "88198e74cdecd2ff3065c354bd51067fb172aef9", "ddb4e76abc9c07e8a09fbbe59f841a071a219420", "05bc7257ed4987a60d21e650f6d2f0b1761f066e", "71b0d0413afad822c7b7663cfaf72de037fc5e40", "b97fec391f192a25562022ee93cf0c1e4f8796ae", "bf13b6c8160273e28788b6b5536396c62abf861b", "f02c4968a99483382e17cf4ea11f49ab1e4319aa", "38b3bdd90041b9a4b1808b50499763f0e98c7a55", "2239db5c61a5058e739f09d5ff500cdf4fad8960", "f682c52f59824e46ea1a82dda92404c8888a96b2", "95a20e6ea7a70b6c6980b30ab7d09fd10689677f", "c1384ff0c88f3426b3b143f5103f3a4623747065", "d66e63de296ab3be35960faef4ed12f4ff95e926", "294381c3620b36c731647bab367a12bd1f202ea6"], "commit": ["JEXL: fix parsing error caused by ternary and ns call in lambda;", "JEXL-418: doc fix; - syntax update and test;", "JEXL-418: javadoc fix;", "JEXL-418: fix try-catch-finally debugger handling; more tests;", "JEXL-418: fix try-with-resources grammar; more tests;", "JEXL-418: fixing reserved names, preparing for feature flag;", "JEXL-418: fix try-catch-finally debugger handling; more tests;", "JEXL-418: fix try-with-resources grammar; more tests;", "JEXL-418: fixing reserved names, preparing for feature flag;", "JEXL-398: re-allow dot-ed expression for map keys; - fix array/set/map builders to use extended flag; - re-allow [,...] as valid empty syntax;", "JEXL-398: re-allow dot-ed expression for map keys; - fix array/set/map builders to use extended flag; - re-allow [,...] as valid empty syntax;", "Fix version comment [skip ci]", "Fix link to the user mailing list", "JEXL-417: fix precision loss in JexlArithmetic; - added tests;", "JEXL-416: fixed edge case of null pragma value; - added unit test;", "JEXL-414: fixing wrong import order;", "JEXL-414: fixing wrong import order;", "JEXL-414: fixing wrong import order;", "JEXL-415: fix handling of deferred/immediate characters not followed by curly bracket;", "Fix up GHA badges", "JEXL-410, JEXL-409, JEXL-408: added new methods to instantiate JexlFeatures with no/default/scripting features set; - fixed lexical/lexicalShade missing relationship; - updated doc;", "Simpler fix", "Fix varargs warning", "Actually use features; fix display of wrong char", "Fix spelling", "Fix Javadoc warnings like", "Fix Javadoc empty tag warning", "Fix formatting", "JEXL-401: added constCapture feature flag to control captured variables constness (sic); - added test; - refined debugger output when depth <= 1 to allow for better feature error reporting; - updated tests accordingly; - changes, release-notes", "Fix formatting", "JEXL-398: implemented trailing comma and ellipsis for array/set/map literals; - Tests, changes and release notes; - A few incidental tweaks here and there (Closure, error reporting);", "Fix Javadoc", "JEXL: 3.3 RC1 - Fixing Javadoc, take 6", "JEXL: 3.3 RC1 - Fixing Javadoc, take 5", "JEXL: 3.3 RC1 - Fixing Javadoc", "JEXL: 3.3 RC1 - Fixing Javadoc, tests", "JEXL-393: fix determination of variable const-ness;", "JEXL-393: fix determination of variable const-ness;", "JEXL: fix Closure hashCode/equals in the edge case of recursive functions;", "JEXL: fix broken varargs handling in last refactor;", "JEXL-381: fix style again;", "JEXL-392: fixing style;", "Fix XML formatting", "Fix spelling", "Fix typos", "Fix PMD issues", "Fix PMD", "JEXL-386: fix sandbox permissions inheritance;", "JEXL-381: attempt to fix cyclic permission init;", "JEXL-381: attempt to fix cyclic permission init;", "JEXL-382: changes, release-notes after fix;", "JEXL-381: attempt to fix cyclic permission init;", "Fix Javadoc typo", "Fix spelling", "JEXL: fix syntax documentation mistakes;", "JEXL-369: Blind fix for elusive lexical scope cleaning pb (take 2), expanding unit test;", "JEXL-369: Blind fix for elusive lexical scope cleaning pb;", "JEXL-317: regression fix, in derived class, method with same signature of a private base method is accessible;", "Fix typo independantly -> independently", "JEXL-373: fixing regression in error reporting and lexical frame cleansing;", "JEXL-379: fixing jexl.import;", "JEXL-379: fix not detecting some cases of syntactic ambiguities;", "JEXL-379: implement jexl.import pragma as core behavior; - added imports as builder option; - made fqcn resolver package protected; - fixed debugger 'new class' handling; - updated tests;", "JEXL-379: fix request header in test code;", "JEXL-378 fix inc/dec operators do not honor the side-effect flag", "JEXL-375: fix unused import;", "JEXL-372, JEXL-373: fixing multiple vars declaration in loop, grammar change; refactored postfix/prefix operators; more tests;", "JEXL-360: missed a few test cases; - opportunistic fix of '%=' not being controlled for side-effects;", "JEXL-367: fixing spillover form JEXL-369", "JEXL-360: javadoc fix", "JEXL-360: javadoc fix", "JEXL-360: javadoc fix", "JEXL-360: checkstyle fix, allow star import for parser nodes", "JEXL-360: javadoc fix", "JEXL-360: javadoc fix", "JEXL-360: checkstyle fix, allow star import for parser nodes", "JEXL-360: javadoc fix", "JEXL-360: checkstyle fix, allow star import for parser nodes", "JEXL-360: javadoc fix", "JEXL-360: checkstyle fix, allow star import for parser nodes", "JEXL-360: javadoc fix", "Fix indentation.", "JEXL-342: fixed error handling (inner JexlException.Method throw) and reporting (line info)", "Fix small typos in comments throughout", "JEXL: attempting blind fix for test on some envs", "JEXL: test fix for java > 11", "JEXL: blind fix for java > 11", "JEXL: javadoc generation fix, jacoco conf, take 9", "JEXL: javadoc generation potential fix (dryRun), take 5", "JEXL: javadoc generation potential fix (dryRun), take 2", "JEXL: javadoc generation potential fix (dryRun)", "Fix spelling in Javadoc.", "JEXL-339 : - Fixed example syntax", "JEXL-307 : - Fixed a potential bug when cleaning lexical frame; - Java8 cleanup", "JEXL-337: reverting to code and version of tools that allow generating the site (as in maven site) Task #JEXL-337 - Fixing dependencies and lambdas", "JEXL-288: fixing travis, test may fail when running on single threaded env Task #JEXL-288 - Annotation can not be specified for a standalone statement", "JEXL-333: fixed namespace resolution on static only (private ctor) classes (take 2) Task #JEXL-333 - Allow declaration of namespace within script", "JEXL-333: fixed namespace resolution on static only (private ctor) classes Task #JEXL-333 - Allow declaration of namespace within script", "fix several 404 urls in README.md", "fix code smells; fix typos; do language level migration to java8;", "Fix travis-ci scripts. Move to java 8 according to [JEXL-249].", "JEXL-330: different solution due, some regressions in real world tests Task #JEXL-330 - JexlException.Parsing.getMessage() throws StringIndexOutOfBoundsException when parse error is in long expression", "JEXL-330: use source in parsing error reporting Task #JEXL-330 - JexlException.Parsing.getMessage() throws StringIndexOutOfBoundsException when parse error is in long expression", "JEXL-323, JEXL-327: fixed error reporting an null checks Task #JEXL-327 - map[null] does not work in assignment context", "JEXL-326: fixed javacc project link Task #JEXL-326 - Link to JavaCC\" on syntax reference page is broken\"", "JEXL-325: fixed potential concurrent execution pb Task #JEXL-325 - Potential race-condition in NumberParser.toString()", "JEXL-324: refining parsing error reporting Task #JEXL-324 - JexlEngine.createExpression(new()\").getParsedText() throws NPE\"", "JEXL-324: fixed grammar for new(arg, ...), made one arg mandatory - fixed debugger (belt and suspenders) Task #JEXL-324 - JexlEngine.createExpression(new()\").getParsedText() throws NPE\"", "JEXL-307: Variable state (redefined, shaded) is determined at parsing time; - Variable error states trigger parsing failures when set through features - Variable error states trigger execution failures when set through options Task #JEXL-307 - Variable redeclaration option", "JEXL-307: fixing regression, parameter declaration under lexical feature Task #JEXL-307 - Variable redeclaration option", "JEXL-320: remove dependency on Unsafe in test Task #JEXL-320 - mvn test\" fails with COMPILATION ERROR in SynchronizedArithmetic.java on Java 11\"", "JEXL-321: do/while with empty statement contributed fix Task #JEXL-321 - Empty do-while loop is broken", "JEXL-307: fix usage of outer defined var in inner block Task #JEXL-307 - Variable redeclaration option", "JEXL-307: fix features being lost during parsing Task #JEXL-307 - Variable redeclaration option", "JEXL-298: size/empty overloads could break operator resolution and return null (instead of a number/boolean), fix and test Task #JEXL-298 - Unable to call 'empty' and 'size' member methods with parameters", "JEXL: simplified error reporting, a (proprietary) very long script with a syntax error was taking >10' to check; culprit was a jj_rescan_ that got... lost.", "JEXL-307: fixed lexical feature handling of variable scope in for units (take 3) Task #JEXL-307 - Variable redeclaration option", "JEXL-307: fixed lexical feature handling of variable scope in for/lambda units Task #JEXL-307 - Variable redeclaration option", "JEXL-307: as a default, copy options handled of context used at runtime to reduce the possibility of artificially complex mistakes;  add an explicit flag to still allow purposeful usage Task #JEXL-307 - Variable redeclaration option Task #JEXL-307 - Variable redeclaration option", "JEXL-307: as a default, copy options handled of context used at runtime to reduce the possibility of artificially complex mistakes;  add an explicit flag to still allow purposeful usage Task #JEXL-307 - Variable redeclaration option", "JEXL-307: clean up lexical frames after usage, fixed for-loops lexical handling (take 2), added method to change default options in builder, updated tests to resist default option switch Task #JEXL-307 - Variable redeclaration option", "JEXL-307: clean up lexical frames after usage, fixed template & for-loops lexical handling Task #JEXL-307 - Variable redeclaration option", "JEXL-309: generate comment lines when replacing verbatims in templates to keep line number in sync Task #JEXL-309 - Line numbers are not correct when template generate errors", "Fix the site's source repository link.", "Fix the site's source repository link.", "JEXL-305: TemplateDebugger must be able to behave as (script) Debugger (its superclass) when there are no template expressions Task #JEXL-305 - Script debugger produces incorrect syntax", "JEXL-306: homogenous behavior for ternary (??, ?:) protected conditions; unsolvable or null variable or properties will not generate errors.", "JEXL-302: added jexl builder flag to control variable collecting behavior (collectAll); fixed wrong collecting behavior on array references Task #JEXL-302 - JexlScript.getVariables returns strange values for array access", "JEXL-306: ensure ternary expressions only protect the condition part against variable resolution failure Task #JEXL-306 - Ternary operator ? protects also its branches from resolvance errors", "Fix bad EOLs", "JEXL-30{1,3,4,5}: modified syntax (jjt) to better handle blocks and 'var' in identifiers; modified resolution and error handling of solving dot/array variables; tests, changes, release-notes", "JEXL-288: fix grammar, add test", "JEXL-296: fix grammar, add test Task #JEXL-296 - Real literal in scientific format is not parsed without suffix", "JEXL-280: found new case when lambda created within loop of a lambda, fixed loop counter stack management Task #JEXL-280 - break/continue statements outside of the loop", "JEXL-289: fix regression in edge case", "JEXL-257: partial fix by being more precise in reusing solved method instances in set* making tryInvoke a tad safer", "JEXL-279: fix reset", "JEXL-282: fixed grammar and test", "JEXL-270, JEXL-271: fix hoisting resolution and use thread-local current interpreter to capture env while currying, fix script re-stringification, added tests", "JEXL-260: performance regression fix", "JEXL: fixing preparation to add 'escaped' identifiers", "JEXL-255: implemented a test timeout annotation, fixed code around it", "JEXL-254: Fixed the name of the test classes", "JEXL-248: Fixed left-value check during assignment parsing, added test", "JEXL-248: Fixed left-value check during assignment parsing, added test", "JEXL-246: Better error handling or operator overload error, added specific test, changes & release notes updated", "JEXL-244: Blind fix, removing static anonymous inner classes", "fix java 6 build on travis by using precise distribution", "JEXL-240: Expose the Jexl engine evaluating a script/expression as a thread local; Make classes functors, ie class(arg) will attempt to call a ctor, a simpler version of new(class, arg); Fix antish variable used as method/function call;", "Fix typos in Javadoc", "try to fix build on travis by increasing max memory for tests", "README.md: fix travis badge", "Fix up URL so relative URLs such as Security work", "Fixed a typo in the syntax guide", "JEXL: Fix & re-added a few commented out tests", "JEXL: Avoiding clirr error", "JEXL-213: add charset(Charset arg) to JexlBuilder, deprecated loader(Charset...) which is a mistake", "JEXL: Bulk fix for JEXL-210, JEXL-207 and JEXL-197; reverted to a sane version of error handling, exceptions stop script execution, annotation may create a new arithmetic if needed", "JEXL: Blind fix for JEXL-205 / JEXL-206 - added latches in tests", "JEXL: Blind fix for JEXL-205", "JEXL: Partial fix for JEXL-201 / JEXL-203 - moved silent/strict/cancellable flags out of interpreter (thus overridable by contextual options)", "JEXL: Fixing JEXL-202 typo in error msg", "JEXL: Fixing JEXL-202 by extending parsing check on l-value for all assignment operators", "JEXL: Fixing JEXL-193 take 2; added a cancellable flag that controls whether JexlException.Cancel are throw when evaluation is interrupted/cancelled.", "JEXL: Fixing JEXL-193, refined handling of interruption (InterruptedException handling & interrupted()), more checks around cancellation (blocks,set/map/array literals), refactored internal Callable, more tests", "JEXL-192: Fix antish variable * method evaluation logic", "JEXL: Fixing JEXL-189 using logical or (and avoiding masking the interruption status)", "JEXL: Fixing JEXL-188 using more information from regexp (groups)", "JEXL: Fix typos in doc wrt to {start,end}sWith operators (=^,=$)", "Fixed the links to the previous API documentations", "JEXL: Fix JEXL-176: remove foreach...in syntax", "JEXL: Fix JEXL-184; updated parser with lexical state dedicated to dot-identifier parsing", "Fix up release names for previous releases", "Fixed RAT issues", "Updated the findbugs plugin (3.0.3) to fix a build failure with Java 8", "Fixed the javadoc errors with Java 8", "JEXL: Fix for tryInvoke that could fail on some cases (overload + cache + switching argument types); Other modifications and tests for JEXL-17{1,3,4,7,8}; Update to doc (package.html,syntax.xml,changes.xml)", "JEXL: Fix JEXL-171: revisited resolution strategies, use operator to resolve, allow custom resolver implementation and usage Fix JEXL-174: related to above, arithmetic can define method to overload operator resolution (array{G,S}et, property{G,S}et Fix JEXL-173: objects exposing a 'call' method can be used as function calls (ie foo(x) will perform foo.call(x))", "JEXL: Fix JEXL-167: use BigDecimal.toBigInteger(...) to coerce big decimal to big integer", "JEXL: JEXL-160 fix, updated doc", "JEXL: JEXL-160 fix, updated doc", "JEXL: JEXL-164 fix, added getMin/getMax methods, added tests, updated changes.xml", "JEXL: JEXL-163 fix, check for double 0.0d instead of long 0L for numbers, updated parser to do a better job at parsing doubles, added test, updated changes.xml", "JEXL: JEXL-162 fixed, specific exception for operator error, behavior as lenient as 2.x, added test, clarified doc and updated changes", "JEXL-157 Replace File.pathSeparator with File.separator Alternate fix - use File(parent,child) ctor", "JEXL: Fixing JEXL-158, using EN locale based format when stringifying a big decimal", "JEXL: Fixing JEXL-157", "Moved some issues related tests to existing feature test classes; Refactored tests using annotations; Fixed edge case where identifier starts with zeroes (must not be considered as integers);", "Depending on unkown conditions, overriden varargs method may return false to isVarArgs; Fix by checking method in declaring class hierarchy (MethodKey.isVarArgs).", "Fixing JEXL-146; Better error reporting and improved arithmetic overloading; Clean up javadoc/checkstyle;", "Report local branch modifications: Fix JEXL-145:  Sandbox calling wrong check (classname vs class); Fix JXLT fails to parse expressions that use map constants Added break/continue in JEXL syntax Added convenience methods to pass/use JexlInfo and arguments in templates Added ability to overload some operators in JexlArithmetic (through introspection, based on method names)", "Fix up URLs so they point to actual sites; this allows relative URLs to work properly", "JEXL-141: fixed documentation", "Fix issue wrt isEmpty (bad cast to Object[] replaced by System.getLength()) and method varargs (assignable types vs equal types) (see http://apache-commons.680414.n4.nabble.com/jexl-empty-function-crashes-if-called-with-int-tt4637895.html)", "Fix an edge case of ambiguous method matching (see http://apache-commons.680414.n4.nabble.com/jexl-mathod-within-namespace-not-found-if-parameter-is-int-tt4637888.html)", "Fix JEXL-131", "Simplified closure, avoid holding ref to context; Added @Override to SimpleNode; Fixed garbled string in parse / ambiguous", "Fix and test for JEXL-124", "JEXL-123: fixed extraneous import", "Fix dependency now commons-jexl3", "Fix up Clirr reporting - ignore parser classes", "Fix for constant literals handling; Added handling for semi-pathological var expressions (x[['z']])", "Incorrect silent flag fix in prepare and evaluate; Javadoc for prepare / evaluate", "Deduplication of error formatting code; Commented $jexl variable and jexl: namespace; Added test on UJEXL using writer directly", "Fix build break; Use commons parent 22", "Revert to snapshot build to fix jexl-compat", "JEXL-120: Made simpler version of ParseException that does not need to go through System.getProperty; Made error messages a bit easier to understand;", "Added getVariables method (similar to JexlEngine) to extract all references variables from an UJEXL expression; Fixed issue where preparing a deferred expression would not always return an immediate expression; Updated test accordingly", "JEXL-119: * Exposed methods from internal/introspection to ease solving method * parameters matching; * Modified UberspectImpl to search for pseudo\" indexed property patterns; * Fixed Interpreter to better report property vs variable error; * Added specific test; * Updated changes.xml\"", "Added JexlException.Property exception to more accurately report errors due to unknown or inaccessible object properties", "Moved bitwise operations to JexlArithmetic (so they can be overriden); Fixed small issue in Debugger that was not quoting identifiers that needed it; Fixed issue in Interpreter that was reporting undefined variables when registers used as references contained null", "Fixed issue due to elvis operator not coercing the condition to boolean using the JexlArithmetic instance", "Fixed issue where class loader change was not properly cleaning the constructor map", "Fixed a bug in operator 'in/match' where 'contains' method was not detected correctly", "Fixed arithmetic that was not using the proper math scale when using JexlThreadedArithmetic", "Updated changes.xml to reflect JEXL-116 fix", "Related to JEXL-116: * sub-classed JexlException (Method, Variable, etc) to allow better control over error reporting", "JEXL-114 * Fixed bug where getParameters was not returning the correct result * Added specific mix test", "Fix up - 42.0L is not a valid Long ...", "Related to JEXL-24, JEXL-112: Added notation for octal and hexadecimal natural literals (ie int as default, long as 'l' or 'L', big-integer as 'b' or 'B' as in big); mod Parser.jjt / ASTNumberLiteral.java Added notation for exponents for real literals (ie float as default, double as 'D' or 'd', big-decimal as 'h' or 'H' as in huge); mod Parser.jjt / ASTNumberLiteral.java Added specific tests; Initial documentation update; Updated changes.xml to reflect bug fixes", "More generic fix related to JEXL-107 to allow (expr)[index] expressions", "Updated changes to reflect JEXL-105 fix", "JEXL-105 fix; added an isConstant\" check on JexlNode to allow detection of constant array literals (could be generalized to maps and even to other expressions)\"", "COMMONSSITE-57 Fix announce mod_mbox link (I used version 1.4-SNAPSHOT of the commons-build-plugin to do this - need to release it and update commons-parent at some point)", "Fix for JEXL-104", "Fix Eclipse warning: Varargs methods should only override or be overridden by other varargs methods\"\"", "JEXL-101: fixed varargs handling in MethodExecutor and MethodKey; added test", "Fix up some obsolete Jakarta references", "Javadoc fix", "Fix up jakarta download references", "Fix JEXL-100; Added JexlNode.Literal<T> to improve cache abilities and usage, used as base for AST{Integer,String}Literal; Reviewed assignment and reference related code to improve antish variable handling; Added related tests and improve coverage", "Fix my name", "pom.xml BSF dependency changed to 'provided' (need it for compile & test & runtime in Java 5, useless in Java 6); Fixed Javadoc errors coming from ParseFailuresTest.java", "Fixed bad error messages in case of errors (thanks Sebb); Added JEXL-46 to changes and documented regex operators syntax; Updated package documentation to reflect last changes (public fields as properties, class as namespace)", "Fixed junit dependency; was compile/optional, corrected to test (thanks Ghislain)", "Fix for Java 1.5 in MT test; changed tasks list declaration. Cause: In Java 5, the method is declared as: ExecutorService#invokeAll(Collection<Callable<T>> tasks) In Java 6, the method is declared as: ExecutorService#invokeAll(Collection<? extends Callable<T>> tasks)", "Refactored to to run multi-threaded; this verifies the expression cache and volatile AST node cache usage do not induce errors.", "JEXL-95 fix", "fixed JEXL-94; modified test accordingly. Also fixed a bug in MethodKey#isApplicable that surfaced through test.", "fixed License; removed obsolete dirs", "Fix some Eclipse warnings", "Fixed JEXL-93; optional flag at UberspectImpl creation allows to consider public fields as properties", "Fixed some checkstyle remnants; corrected index.xml to state 2.0 as current version ahead of time", "Fixed an '&', replaced by &amp;", "Fixed test that breaks build (use introspection instead of direct dependency upon com.sun.tools...); Added invokeMethod on JexlEngine + test; completes the get/setProperty Added tests to improve coverage", "Fix for JEXL-61; all caches get wrapped by SoftReference, allowing them to be GCed under memory pressure.", "Fix for JEXL-61; all caches get wrapped by SoftReference, allowing them to be GCed under memory pressure.", "Added a test on JexlScriptEngineFactory; fixed small issue on getParameter()", "Fixed various Javadoc / checkstyle issues", "Fixed bug in DuckSetExecutor: search for 'set' method, not 'put', modified existing tests accordingly; Added equals/hashCode methods on *Executor: added tests to verify the discovery behaviors", "Made {Expression,Script}Factory use a specialized 'legacy' interpreter that more strictly mimicks JEXL 1.1 behavior, at least according to Jelly expectations (Jelly tests pass locally now). Introduced undefinedVariable and invocationError methods in Interpreter.java to allow easier derivation. Enhanced error reporting in JexlEngine#parse to go down further in stack seeking caller.", "fix tryExecute which was not using the index argument", "Fix tests which failed due to change in promotion rules; small numbers are now Integer, not Long", "JEXL-87: Fix in Parser.jjt, x + y / a + b\" was throwing a ParseException Fixed JexlArithmetic; use the same algo wrt datatype for all operations", "JEXL-90: fix in Parser, enforce 2 expressions are separated by a semi-colon (';') in StatementExpression.", "Fix typos.", "added Unicode escape sequence to String literal handling; fixed non-escapable character handling; added $ as escapable character in UnifiedJEXL", "Fix bug in value of BIGD_DOUBLE_MIN_VALUE Javadoc corrections", "Various MethodKey fixes:  * Fix potential NPEs.  * Reduce visibility of many methods  * Use Void.class as a signature for null arguments  * Need only one AmbiguousException Patch by Henri Biestro <hbiestro at gmail dot com>. JEXL-67", "Type-safety fix", "Fix bad syntax in reference. Reorder section on identifiers to read more easily (IMO).", "JEXL-60 - fix header", "Fix compilation failure (when trying 'mvn package' with JDK 1.6).", "Fix up EOL/EOF", "JEXL-20 - fix recursive loop", "Raw types; fix Javadoc", "Correct cut and paste errors.", "Fix DOAP tags", "fix dang tabs", "COMMONSSITE-30 - fix the checkstyle configuration to work for multi-module and review/update <reporting> plugin version numbers for the poms being changed.  - pom's need to use ${basedir} for configuration files as the multi-module profile is run from commons-parent, so if not specified it can't find those files  - the checkstyle configuration file needs to use ${checkstyle.header.file} for the headerFile property and  <headerFile> element added to the plugin config in the pom.xml  - fix m1 checkstyle config to reflect the above where appropriate (specify header file property)", "COMMONSSITE-30 - fix the checkstyle configuration to work for multi-module and review/update <reporting> plugin version numbers for the poms being changed.  - pom's need to use ${basedir} for configuration files as the multi-module profile is run from commons-parent, so if not specified it can't find those files  - the checkstyle configuration file needs to use ${checkstyle.header.file} for the headerFile property and  <headerFile> element added to the plugin config in the pom.xml  - fix m1 checkstyle config to reflect the above where appropriate (specify header file property)", "Oops, revert OSGi experimental instructions committed by mistake", "Fixing the assemblies to say project.version instead of version to stop '2.4.1' leaking through from the JVM properties. Also making it project.artifactId while I'm doing this.", "Fix m2 tests not running", "fix jdk 1.5 only method", "loosen magic number. remove todo errors", "Fix broken link.", "Fixing svn locations after TLP move", "Fixing the mailing list addresses", "fix my org", "Fixed the copyright header", "Fix jdk1.3 only code that had crept into the tests", "JEXL docs should not imply that it is a superset of EL. Might need to be fixed in other places too, but this is important for the 1.1 release.", "Add recent fix.", "Throw javacc Errors from ScriptFactory#createScript() methods as ParseExceptions.", "ExpressionFactory should rethrow javacc thrown Error as an Exception.", "Noticed, and corrected, cut and paste error in the exception messages.", "Fix string concat inside stringbuffer.append - pmd report", "Fixed siteAddress", "Fix viewcvs entries to point to svn", "Fix bad nav item", "Fix narrowing of Doubles and Floats which was NPE'ing.", "Remove 'unwiden'ing of numeric values which was introduced to fix Bug 32829.", "Remove 'unwiden'ing of numeric values which was introduced to fix Bug 32829.", "Remove 'unwiden'ing of numeric values which was introduced to fix Bug 32829.", "Fix broken link to Jelly.", "fixing pmc from name to url", "Document bug fixes", "No need to output error text when testBadParse succeeds", "Add calculation for Bug 31577", "Fix string concatenation with variables dying. Thanks to Geoff Waggott", "Fix modifiers", "Fix width", "fix typo", "Fix for Issue 30562: cannot issue ${set.size()} on java.util.Set", "Fixed typo in Asserter and added a package.html to the jexl.junit package", "Fixed a simple spelling error, and modifed perspective from 1st to 3rd person.  In the process, I removed Geir's author tag, not because I don't like him, but because the document is third person.", "fix navigation", "fixed xhtml, ie) closing tags", "Testcase and fix for bug where the empty() function didn't work on bean.subitem", "Fixed typos in apache licenses", "Adding ASTUnaryMinus from mark to solve the - problem, fix to ASTMethod to allow the real exception to be thrown, and the rest are autogen goo", "patch from mark wilkinson - size () fix", "Mark Wilkinson's patch (hack!) to the sub node - we really need to fix this another way - prollie in the introspector", "Fix 20728 - Implement JSTL-compliant parameter coercion for LT/GT/LE/GE expressions", "Fix 20729 - Rethrow exceptions from method execution rather than printing to console.", "Fixed up some of the nav bar links", "Fixed jakarta logo url", "Fixed a glaring bug I'd introduced into the unit test case by a bad cut and paste :-).", "Added a few more test cases (that fail!) to demonstrate the .size() bug in Jexl.", "minor typeo fix, addPostResolver was incorrectly adding a preResolver. Also used lazy construction to avoid creating 2 ArrayList instances per Expression instance as a performance enhancement.", "fixed urls to use absolute addresses to other components like Betwixt, CLI and Jelly", "fix the testcase", "Fixed to support", "Fix - update to latest JexlContext"], "metric": [["0", "0", "0", "0", "1", "1", "22", "0", "1", "1", "1", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "21", "0", "3", "4", "116", "2", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "18", "5", "1", "7", "67", "1", "0", "0", "0", "0", "0", "0", "1", "6", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "24", "0", "1", "2", "6", "2", "0", "0", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "3", "2", "3", "5", "28", "14", "1", "5", "16", "4", "0", "0", "3", "3", "1", "2", "0", "0", "2", "0", "0", "1"], ["1", "3", "18", "5", "1", "7", "67", "1", "0", "0", "0", "0", "0", "0", "1", "6", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "24", "0", "1", "2", "6", "2", "0", "0", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "3", "2", "3", "5", "28", "14", "1", "5", "16", "4", "0", "0", "3", "3", "1", "2", "0", "0", "2", "0", "0", "1"], ["1", "5", "7", "4", "1", "3", "47", "1", "1", "2", "2", "2", "0", "0", "1", "3", "1", "0", "0", "0", "1", "0", "0", "4"], ["1", "5", "10", "7", "1", "3", "47", "1", "1", "2", "2", "2", "0", "0", "1", "3", "1", "0", "0", "0", "1", "0", "0", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "16", "47", "35", "1", "2", "36", "14", "2", "2", "3", "0", "0", "0", "1", "1", "1", "2", "0", "0", "1", "0", "0", "7"], ["1", "1", "14", "10", "1", "1", "9", "0", "2", "2", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["3", "4", "7", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["1", "3", "48", "48", "1", "1", "23", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "52", "25", "1", "2", "49", "1", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "1", "3", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "1", "2", "2", "2", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["3", "13", "53", "16", "2", "9", "29", "15", "3", "3", "5", "2", "0", "0", "2", "1", "0", "6", "0", "0", "3", "2", "0", "4"], ["32", "58", "62", "62", "8", "12", "14", "14", "0", "0", "0", "0", "0", "0", "8", "0", "0", "16", "0", "0", "32", "0", "0", "58"], ["11", "27", "106", "117", "8", "15", "128", "53", "4", "7", "34", "9", "0", "0", "8", "2", "0", "19", "1", "0", "10", "7", "11", "11"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "0", "0", "2", "6", "56", "14", "2", "3", "11", "10", "0", "0", "2", "8", "1", "1", "0", "0", "2", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "13", "36", "6", "2", "3", "51", "7", "0", "0", "0", "0", "0", "0", "2", "3", "1", "2", "0", "0", "5", "2", "0", "4"], ["2", "3", "48", "0", "1", "2", "18", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "3", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "0", "0", "3", "3", "0", "0", "1", "1", "1", "1", "0", "0", "3", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["3", "5", "0", "0", "1", "1", "0", "0", "1", "2", "2", "2", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "0"], ["4", "5", "11", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "12", "4", "1", "3", "64", "2", "0", "0", "0", "0", "0", "0", "1", "6", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "4", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "8", "26", "28", "1", "2", "26", "11", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "1", "1", "5"], ["1", "7", "17", "8", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "5"], ["1", "1", "0", "4", "1", "2", "25", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "371", "371", "0", "0", "0", "0", "0", "0", "1", "0", "0", "18", "0", "0", "0", "0", "0", "0"], ["3", "5", "10", "4", "1", "1", "14", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "0", "0", "2"], ["1", "2", "17", "15", "1", "1", "13", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "25", "123", "38", "5", "10", "34", "40", "0", "0", "0", "0", "0", "0", "5", "1", "4", "5", "0", "0", "7", "13", "0", "6"], ["0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "19", "0", "1", "1", "158", "0", "0", "0", "0", "0", "1", "0", "0", "9", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["10", "82", "266", "161", "6", "17", "364", "42", "1", "3", "8", "6", "0", "0", "6", "24", "0", "13", "0", "0", "10", "3", "1", "26"], ["1", "1", "5", "0", "3", "3", "24", "4", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["19", "28", "2", "2", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "19", "0", "0", "12"], ["0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "3", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "39", "18", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "6", "22", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "19", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "8", "45", "35", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "12"], ["2", "4", "33", "21", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "4", "28", "3", "1", "3", "80", "0", "0", "0", "0", "0", "0", "0", "1", "8", "0", "0", "0", "0", "3", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["30", "52", "89", "132", "42", "149", "247", "314", "3", "3", "2", "3", "0", "0", "42", "0", "0", "103", "0", "0", "30", "0", "0", "36"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "23", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "11", "7", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "18", "0", "3", "3", "5", "2", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "6", "16", "13", "1", "5", "85", "15", "2", "2", "9", "0", "0", "0", "1", "1", "0", "2", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "3", "0", "0", "0", "0", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "9", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["1", "2", "7", "5", "1", "2", "34", "1", "1", "2", "3", "3", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["21", "71", "281", "225", "4", "20", "112", "30", "4", "4", "11", "2", "0", "0", "4", "6", "0", "16", "1", "0", "20", "31", "22", "24"], ["1", "1", "1", "1", "1", "1", "11", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "5", "37", "23", "0", "0", "0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0"], ["2", "3", "19", "18", "1", "1", "32", "0", "2", "2", "3", "0", "0", "0", "1", "4", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "6", "2", "1", "2", "55", "1", "0", "0", "0", "0", "0", "0", "1", "5", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "0", "1", "3", "27", "6", "1", "1", "1", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "1", "0", "0"], ["3", "14", "83", "46", "2", "4", "39", "8", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "2", "0", "9"], ["1", "1", "1", "1", "1", "2", "6", "3", "1", "3", "5", "2", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "43", "0", "1", "1", "39", "0", "1", "1", "3", "2", "0", "0", "1", "3", "0", "0", "1", "0", "0", "7", "0", "-1"], ["2", "6", "17", "59", "1", "1", "14", "0", "1", "4", "9", "6", "0", "0", "1", "2", "0", "0", "0", "1", "1", "0", "7", "1"], ["1", "1", "1", "1", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["3", "6", "29", "20", "2", "2", "18", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "3", "2", "0", "2"], ["5", "16", "70", "24", "10", "42", "59", "58", "0", "0", "0", "0", "0", "0", "10", "0", "0", "35", "0", "0", "5", "4", "0", "8"], ["5", "12", "37", "29", "2", "6", "121", "4", "0", "0", "0", "0", "0", "0", "2", "11", "0", "3", "0", "0", "5", "1", "1", "10"], ["2", "5", "18", "4", "1", "1", "59", "0", "2", "2", "3", "0", "0", "0", "1", "3", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "1", "1", "2", "18", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "3", "0", "31", "2", "12", "56", "73", "0", "0", "0", "0", "0", "0", "2", "0", "0", "7", "0", "0", "2", "0", "2", "1"], ["4", "15", "41", "14", "2", "4", "52", "4", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "4", "5", "0", "4"], ["1", "3", "7", "6", "1", "2", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "6", "50", "30", "4", "11", "86", "13", "3", "7", "26", "5", "0", "0", "4", "6", "2", "4", "0", "0", "4", "2", "0", "4"], ["1", "5", "3", "4", "1", "1", "22", "1", "3", "3", "4", "1", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "4", "1", "3", "3", "22", "12", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "16", "11", "1", "2", "6", "1", "1", "2", "3", "7", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "2"], ["1", "2", "7", "5", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["5", "15", "36", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "0", "11"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "15", "21", "3", "3", "6", "1", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["6", "14", "40", "32", "1", "1", "34", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "6", "2", "1", "6"], ["1", "3", "6", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "2", "8", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "22", "46", "67", "1", "1", "54", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "1", "0", "9"], ["0", "0", "0", "0", "2", "2", "6", "6", "0", "0", "0", "0", "0", "0", "2", "88", "0", "-84", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "16", "11", "1", "2", "53", "0", "2", "32", "219", "107", "0", "0", "1", "5", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "24", "19", "1", "4", "64", "3", "2", "2", "3", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "17", "15", "0", "0", "0", "0", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "8", "5", "-5"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "10", "55", "8", "1", "1", "140", "0", "0", "0", "0", "0", "1", "0", "0", "15", "0", "-1", "0", "0", "3", "3", "0", "3"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "11", "3", "3", "6", "30", "7", "0", "0", "0", "0", "0", "0", "3", "2", "1", "5", "0", "0", "1", "1", "0", "1"], ["1", "24", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "13", "57", "65", "2", "4", "111", "2", "2", "3", "10", "1", "0", "0", "2", "4", "0", "1", "0", "0", "2", "1", "2", "12"], ["0", "0", "0", "0", "1", "3", "16", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "15", "70", "45", "1", "1", "16", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "3", "0", "11"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "17", "1", "1", "1", "10", "5", "2", "2", "3", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["5", "30", "66", "24", "3", "10", "52", "22", "0", "0", "0", "0", "0", "0", "3", "4", "0", "7", "0", "0", "5", "6", "0", "4"], ["3", "17", "84", "35", "2", "12", "213", "41", "2", "2", "3", "0", "0", "0", "2", "7", "0", "13", "0", "0", "3", "5", "0", "7"], ["1", "1", "6", "2", "1", "13", "64", "23", "0", "0", "0", "0", "0", "0", "1", "4", "0", "8", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "46", "5", "12", "1", "2", "14", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "8", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "4", "8", "4", "7", "5", "10", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["2", "3", "47", "3", "2", "2", "53", "14", "3", "11", "34", "14", "0", "0", "2", "1", "0", "2", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "27", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["11", "21", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "11", "0", "0", "0"], ["8", "31", "173", "113", "1", "4", "4", "4", "3", "6", "62", "4", "0", "0", "1", "0", "0", "4", "0", "0", "8", "2", "0", "18"], ["7", "29", "108", "91", "3", "6", "63", "3", "0", "0", "0", "0", "0", "0", "3", "10", "0", "2", "0", "0", "7", "1", "1", "12"], ["1", "1", "2", "0", "1", "1", "0", "0", "1", "2", "15", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "118", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "18", "65", "54", "1", "2", "6", "0", "1", "1", "3", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "4", "0", "20"], ["1", "1", "2", "10", "1", "3", "64", "0", "2", "2", "7", "1", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "44", "14", "1", "2", "67", "1", "3", "3", "21", "7", "0", "0", "1", "5", "0", "0", "0", "0", "2", "5", "0", "3"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "3", "5", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["17", "61", "115", "157", "37", "322", "1630", "1348", "2", "4", "37", "19", "0", "1", "36", "28", "34", "269", "1", "1", "15", "1", "3", "9"], ["2", "2", "15", "7", "2", "2", "45", "0", "2", "4", "12", "4", "0", "0", "2", "5", "0", "-1", "0", "0", "2", "0", "0", "1"], ["18", "82", "305", "216", "7", "16", "339", "12", "1", "1", "12", "0", "0", "0", "7", "30", "0", "4", "0", "0", "18", "15", "4", "20"], ["21", "118", "573", "147", "2", "8", "115", "4", "1", "5", "19", "3", "0", "0", "2", "9", "0", "4", "0", "0", "21", "25", "1", "38"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "8", "18", "20", "1", "2", "26", "16", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "2", "0", "0", "6"], ["1", "7", "23", "10", "1", "5", "47", "7", "0", "0", "0", "0", "0", "0", "1", "4", "0", "1", "0", "0", "1", "1", "0", "3"], ["1", "21", "18", "17", "1", "7", "26", "9", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "1", "0", "0", "5"], ["4", "12", "25", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "5"], ["1", "1", "6", "3", "1", "2", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "5", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "5", "41", "4", "1", "3", "39", "2", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "5", "2", "0", "3"], ["1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "25", "60", "75", "1", "2", "27", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "4", "1", "0", "8"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "12", "53", "38", "0", "0", "0", "0", "2", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "5"], ["4", "8", "95", "8", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5", "1", "0", "3", "9", "1", "2"], ["1", "18", "91", "97", "1", "5", "21", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "0", "1", "12", "5", "11"], ["6", "46", "283", "130", "1", "1", "102", "0", "1", "1", "3", "0", "0", "0", "1", "8", "0", "-4", "0", "0", "6", "21", "0", "24"], ["2", "9", "37", "5", "2", "3", "8", "6", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "2", "4", "0", "4"], ["3", "29", "70", "50", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "4", "0", "5"], ["2", "2", "3", "2", "1", "2", "57", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "6", "3", "1", "2", "22", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "13", "81", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "13", "0", "5"], ["2", "9", "16", "14", "1", "5", "28", "16", "0", "0", "0", "0", "0", "0", "1", "6", "5", "1", "0", "0", "2", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "46", "26", "1", "1", "21", "0", "3", "3", "28", "16", "0", "0", "1", "2", "0", "1", "0", "0", "1", "0", "1", "2"], ["5", "8", "36", "12", "1", "2", "21", "23", "2", "6", "10", "7", "0", "0", "1", "0", "0", "1", "1", "0", "4", "3", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "26", "3", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "2", "2", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "22", "10", "1", "1", "25", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "3", "10", "19", "1", "2", "47", "5", "0", "0", "0", "0", "0", "0", "1", "5", "1", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "12", "97", "46", "3", "5", "87", "3", "0", "0", "0", "0", "0", "0", "3", "2", "0", "3", "2", "0", "2", "8", "0", "-1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "1", "5", "5", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "3", "6", "25", "4", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "10", "241", "208", "0", "0", "0", "0", "0", "0", "1", "15", "4", "13", "0", "0", "0", "0", "0", "0"], ["4", "18", "146", "41", "2", "3", "43", "4", "1", "1", "1", "1", "1", "0", "1", "2", "0", "1", "0", "0", "4", "11", "0", "6"], ["3", "9", "41", "10", "1", "4", "24", "2", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1", "0", "0", "3", "1", "0", "3"], ["0", "0", "0", "0", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "4", "6", "6", "5", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4", "0", "0", "1", "0", "0", "0"], ["6", "18", "118", "19", "1", "1", "95", "0", "3", "3", "4", "3", "1", "0", "0", "8", "0", "0", "0", "0", "6", "11", "0", "8"], ["3", "4", "8", "7", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "18", "69", "30", "6", "16", "108", "20", "2", "2", "8", "1", "0", "0", "6", "15", "0", "9", "0", "0", "3", "2", "1", "8"], ["0", "0", "0", "0", "2", "2", "247", "0", "0", "0", "0", "0", "2", "0", "0", "20", "0", "0", "0", "0", "0", "0", "0", "0"], ["9", "44", "146", "106", "0", "0", "0", "0", "1", "1", "220", "220", "0", "0", "0", "0", "0", "0", "0", "0", "9", "10", "4", "24"], ["1", "1", "1", "1", "1", "2", "22", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["11", "28", "36", "36", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "11", "0", "0", "6"], ["11", "21", "108", "15", "3", "4", "144", "15", "0", "0", "0", "0", "0", "0", "3", "14", "2", "2", "0", "0", "11", "15", "0", "6"], ["4", "12", "99", "45", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "8", "0", "4"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "11", "27", "19", "6", "12", "46", "27", "1", "3", "6", "6", "0", "0", "6", "1", "0", "10", "0", "0", "1", "0", "0", "10"], ["2", "4", "10", "0", "1", "3", "26", "1", "1", "3", "18", "1", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "7", "38", "4", "2", "4", "22", "5", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "2", "1", "0", "2"], ["1", "14", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "13", "19", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "9"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "14", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "19", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "4", "32", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["87", "87", "0", "0", "12", "12", "0", "0", "23", "27", "151", "131", "0", "0", "12", "0", "0", "0", "0", "0", "87", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "5", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "8", "1", "1", "2", "31", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "1", "1", "1", "33", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "5", "12", "12", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["1", "2", "53", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["4", "6", "5", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "1", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "10", "3", "1", "2", "8", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "5", "0", "1", "3", "10", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "2", "0", "0", "0", "0", "1", "1", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "12", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "12", "20", "1", "3", "11", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["58", "171", "0", "0", "3", "9", "0", "0", "1", "2", "0", "0", "0", "0", "3", "0", "0", "0", "0", "0", "58", "0", "0", "0"], ["5", "39", "266", "159", "0", "0", "0", "0", "1", "4", "45", "18", "0", "0", "0", "0", "0", "0", "1", "0", "4", "5", "0", "31"], ["1", "3", "12", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "2", "10", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "8", "184", "39", "1", "2", "12", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "2", "0", "7"], ["2", "4", "34", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "11", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "12", "34", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "13", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "13", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "73", "72", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "13", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"]]}