{"number": ["9578583effe9c6acc1296e856eeb81bfd75581d0", "8451c1fa63f5198daf38498869836e85c85bdd08", "47668fad57e23dacc5482e40a276a93850cec2cf", "2591ede59bf7e4cef496a01e82282c88e256cec8", "5bebf970d14148069697444566fbb7dc9fceaf7a", "51a72b463bc447d32fe8e594afa1980fd34e52d6", "6fc1c8f7f17a949b4dd743603df88f1935db7907", "a4bc6c17d71fffe62cd8e478a2e68305df825d40", "f7cefcb426fed89365ab42daa387c255b599eb66", "9868957862d35bf6e4747928a04b34a86916fdc2", "46b97bf15633929e7db6c43007a6b03e852e2aee", "a1d2ebc8b51a3a0df8b15c98f47d5ac95cf7f7b0", "893a7e1c5c3369ecfb41fb7f8177d18896f0a23b", "2eb37589b53d0d2c292a2187bc87a0967686ac29", "47dea2eefc6d2816cddb3f30689070285491733c", "710a76c8b8835e36935c62024001ba6b91ceee01", "26e08fe742a9a023cc8eca454de8f84a0223d187", "d38e3974211e89d8e6d74c94178a2db102c0748d", "6ffcdf302939ad405abdfb468218b8caafc46e9c", "6e06bf0d89ad71f317c920cdaf9981a0508446d3", "b0595c595bd2c052cd05e0283bb37b67c02bd06f", "ca2ed748ba6e31c4a319ea6f2d2dc7048021f0a0", "deaa3a6cd9f4676e0c826eadadd2f3d6dc857096", "b3188c113205bb41a980b09917b7f6b242cd32fc", "ba96d53bad35f7466073f14cb3d89d09383e1a2d", "cd748df7122ea4260d35dfe90cfab0c079a1504d", "1cc16274235f89650349884dd04760bf15a95d96", "26a1928277f7eba70609f02697509ba9258dd8ef", "66fd2acdcf7d2c4f38afba3595e509df8651f2c5", "d8c5fcf00bdd3170365e92e43880021031c7d005", "1406477d0cd37e8d5d04e619ac349f0a6da614e3", "55115a5ca259787ce8d4deb7952d198f50591f92", "b1edb7048687c2822b4fa006ddeb5e2cc2a038f9", "b39494dbe68f91045850778cac4b661b38beb615", "361292f1c192cdf06195cfd5346763ba38e3ce0d", "9171715a880bf65bb698c6c76480d0a3fe65ae20", "55acc23d8656a9fe5b19b92029a2dc7277e3765c", "530cb7447089ccc12dc2009c17f468ddf2cd61ca", "521fab2dd5e829b51cff6813d0b5405d4ab2d1ee", "21fc362a7ec9d312c34ad82df6188c6480280021", "0409a2ecab8026848ec34dbd0f09378484d9d840", "f426700bc458f53588510fbb64e615dd95c1cf81", "c5a3f21fbad3828deba1deb88168e1f76829f807", "ab0821c83edd07f4e69eef15b93dd109ad3f750e", "5bbc768fa6cd3e8a3a7bebf52b0ac1e4c6e0bd12", "e2296f42d553e3f299c7dd2f4d1a4efd60007ade", "a6890bbaba29fb1074388c06bf0c231f8e06b4f2", "7fb3960afff331deac857d801970fe50a385ff39", "0aaf5ff408a54eb7dc238d3569b5d1cef9273047", "855f0493d0edba5d6f6ec4c72a46bfef225ef22c", "6c05cedecb6c200e7f15e81b95a616ba503d78d3", "d9249e9c36fbb4890f6d00f90928d3ee63fc1a0f", "b1fb9ca9a1bea5440bc6a5b506ccf67236b08243", "7a9fd5962dce7f277efa15fcc996606be0733bac", "68cf8fdc9576815e313ffbae2d9e2604dc2f16fa", "03a72e752ef68269990f984c9fd613cfd59224bc", "ee691fba43663d1715752a7642f4b4ece1738567", "1c09b3f92899b2a88a216932a72a0708e4a40550", "a300148003e3a067875b1444e8268b6e0f0e0e02", "9a2421997e83ec803c88ea370a2d102052699d3b", "92b52d25d844b81620a04917e5fa164d44b9c8a5", "3fdedd405b84905416bfaa646259e93769abc046", "3063136a2c3332ebfe07b7f5e9a00f1af43b61c2", "9e6f2bab20257b6823a5b753739f047d79e9dcbd", "614e735992ae4d3d7366a036e2ced17a78d0ba69", "08c7bffba0e93611162cadfaf2ee03e3d143e7d1", "791236ac79e535146b07a7dd5c85ab168554f5ff", "fca867d35618cd0b0589d2e0c136a927964533b7", "d4a9eb4e7bcbf0fa9e9e76c81fc86ff669f7c8ea", "c414b368e120a6240ceb238f4e0abce821a9f7cd", "71ee0e3759c7aafa849871443a47bdd001faaf1b", "966de9e60dd6a828cb52548dd8de77adc86bd319", "9c4f3523206468746ef5ee135f2bced4e45b33b5", "93414608afba1cf92f660199f1bbdf6c9aaaf1ea", "0dfa28ac3ec9dc0d9a2f4c9d5e14a6a0a470f69c", "c731abb293e79b26e53db3264306768fb86ef4c4", "edaf59e178301fc2cdc5523cd703121cfcd4c009", "aa209fa2555271215a89fe382a4b9078102e6abd", "bddc1a9ed385595ab8ec75aa0ac9be586f55a68f", "61f58baaf926d3e6b16a52305537b3495f155ca8", "594cb33b5f962e3791a6899ac6b5a5290f9f322c", "da4334b8dfcfa3efe6fba6b95afd0e5e6b272348", "7d1973e6c5e270c0c94eaf6a3e81f4f2c5b2a699", "3b1671dde97a6d564b3f4c3210fbe777dc3aa3d4", "d1883b5e5b8502a581bf3ea0ae5e93650551e8c2", "4a5735504c427276541cebb3abfdea913b9dd82a", "1e9004403c619729ad1c49f070ab61427bd462c5", "3daf5859318d6c1f2d9b6a537115d4235533c0ef", "1867457030d3c149566e95a019033cce4ff3cf90", "d8c12a727f465fcdc55fb5e25890b8b868db49e7", "457541611c0f95979ab6b9227fc688730439f2d6", "fad12f85d4b71f29c26151c63f4fb5ecc0c0eba6", "1fb33e427ad3d50ea5d9c3f44d86bc49b26b3d5f", "7d96ce8d6d53db959664453e91d5b457f78dca86", "1d9e86e27c97cd85d898104b4ac42bb487d0d7d0", "b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc", "84e3442eb08fabd09ea69722951471b49d765a64", "d6c8c1e3cf6749258e3f98d2bc03c973385e31a7", "06282a4d136b2603b923b10b69f7a5e5216ac6f6", "9bbdcac5a82600f30b1f1d1d0de27db936d3bd55", "c6752fc47ad0268480a5ef49fc6cbd485447ce23", "b373c20136eae1a821b173d106ed6c222f87fb13", "c53e2551058b445b6adf5bc588456c2b33548e28", "6e8d3cd65e2777da196513d91b796d3e03e203d1", "e280ffd7e2fe14140c9478a546c6f074cf089a13", "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f", "1840466704210c3c6c2d1d0bf06d1ff88c19c08d", "2d5cab1b7b1f2845954f851106c138137e91bfea", "7c9fd53c78a604e21c89e426091e3a0c219d9c58", "b88e0e9395fd153deea35272bef5c968fcb863a7", "c22ab9767d06be976f593927d920dfe371ab7db6", "7d53113ebc9ef6921c6238f013aabd10890611a0", "63142f621c42817c9a0a948106151bebc11ea8ce", "6dc6b4be9208221caad81b52aec665f133b5e9af", "22c835f2bcd5ee39fd58556e01324f334c5f0cb7", "2fef83799de82f67f2124908e982c773c49a6153", "a6ab854302bf2398ed221afe7aefd0c717b5d1fa", "8df7209074ace5268f9bc0195a0245b4ef7c7ea9", "46b73632b0f7591ef1328ee7ddd1e883916fec1e", "448063dde142a07e07f13b017bc9844f3555cf74", "4c2980e6ff798f3209f00292ead5060c402d9774", "42e35e9f90bcc1745191c419b120eb3c724e49bc", "582b0a0c9c1894f04b476ea11bc181405e61303c", "83e5a4937cf13ab9b94a7bb12ce2fefa168752ed", "6d351fea073bf0795dfba4ff8fc88f9557ca8979", "14ebcc4ead0b0714fa3dd5c1af697cee8013b94f", "15e7819e9ae424a33aa747030320a268f62b1d28", "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48", "7b75efd09ecc1aeb0b5c7a020d9cf17b5dad8bad", "a3ca4e13126bcf03449794889df606eb96d026b8", "f24da51ca2e47229a403819219986ebf3cd07597", "c01fc5c9352b34024fd19d296c814051d334a564", "2ef7716209043289880d5f1d5bbb9a658b93f2da", "d891661c4ae0eb6856c3a5ebe52687479c5f584f", "eb2230caf0c8d1e2d9ea67e7c4afce72f1eccc3f", "e2e672740a6e58f81924406decba024a239fb8a5", "d5ed0716db573e5785e55d140ade5ab9a3062410", "852cd720590c120f23f033f53540a73ac64c4234", "9a80d095d9afb3aedcde4c275fb4a8619a5e3a35", "e9521471aa0f2fd631a883e3c6b6f90896b6457c", "a92cf394e827089f8a10853ca5d5f0da6c23654c", "3a3870591eebe007995e87f0ff5fe26253659d82", "01661426f91322bce8bc34842a0283a5add5e0be", "47a36fd0952d8b9a884ad7b2948a93011b4d667e", "2541e658f70bc9928b573c33168075786c7fef2f", "3f261441651fe6a5f57cf4e6aa655f9661dc606a", "cebda2b11921bf4f8adf5f36adfaa462b4cd1e1a", "2780a2a9bf5b0bf7eb6b14fc6ec27916c1c867fc", "c71e61cf4830ee950b8fbc601ccadfe4d7ab6d1a", "a98d6eae472df67317d58d34f13438bb958668b1", "161b4babe861a9fcd386d2d7ba5636aa3cedf9cc", "415437810a6341576c60693237fd514500abf209", "3c4d121dc8736c7359731f9cb99098e2999f8575", "041d499a7c4af1b70617001ded11dbc01732d97f", "7dca7242926bf2e8692e54e2b33e303c6fb67707", "edf9be298c7ccdd9c26be78dbc609f319c1d8711", "aa897730085d17e131768caf40f9b30f2aa7a0bc", "533ea1755d807f75a53c6bb3a2b0d4b8ee9794bc", "8fd4072f9bf7deff39dbe7e5e3913d13915d5969", "0bcd1b341f2f4f7d93738272f5a6a2c3d2dfb0f7", "4efeef18935af8f6cd944b573e8f18f7e13db391", "f291c4d33ea5fcc52afcfa5713e519e663378bda", "d2cf574e8633bee099fd388242dcab9478ff5db7", "1c3d08794d78dde4eae661ccdd4c195793deaca0", "49e7ee05fcd6113d569d3ca20d7a806603c4a91f", "c2660973108b61e07907a4f327a2a13a300545b0", "dc283e112159a3fbace97853c95da1cbbfc125f2", "46a8e9b4119992d73e61dc1ce37f2b94d53c819e", "0c35edab6584a01d89ec5533ee6acac8f7002a8b", "43137b6b4f005e70561a147b868284d94527069f", "52288d712730a50f13fc6c2bf07d339642d06846", "ea48a1debfaa863d29dac8ddee9a4dd5a55ed785", "a09c3ab1c54575265857f8038db3e90da2156631", "bd3e680f94cc40c61da94ef05c8047d775af9935", "d87eed510b9f3e6729d4f50523bde6452a180de7", "7d055fcb517a25e3cf141a867ec2b53264c40a19", "32afd1a4e45e4ae42bb6bceb8a5823dfe8b44fa2", "bdf5bef8873e5a698e16711da8754a9aff05a495", "c6a4f55d1a9b191dbbd958c366091e567191ccab", "4413c299ea09c57b94af8647eec901554c2f5c50", "abe244c099b8c0f0e4c33921a55b27755564713a", "c8c3a6965c5a1a01951452a25291e5a5944fa59a", "20d895ff95414d4da23d07115c57920f5813a95d", "7ea5cc2b36a4347290f49e7317971a6c72f19f25", "6d9893ddf3653f58eaae0f556f30a7830207a8fa", "18a9205a04a4371ae33565694f151a25a82a3db4", "1a4bea73346135ce36422788c28fce11c3c5bbbb", "202bbfeef0a7829ddac75f28b8077e2f1534c461", "ffdf0e70125420e4263f9d1f32a38a09b087f93c", "486820f51521d0348160a18b9ba0326f78dcf518", "69ecb9465affeedf737fbe7bb5d4146a3e9813ab", "5bffa1f6790b2a5e8bc0996240c1b12317793324", "bc5b83610322e771c6d5652aa8c85dc4a5789dac", "8b5cc3256d53b827ee594ccd63325f474a33927c", "8122deb3648e54030992f09f6b6fd9ba7e3fc585", "c3f61ee5ade19eb7f2b1370b356df5ae2405406e", "8d24fe61f21edee737836ffee05f669e890d9c16", "b2af57d288514dba466241d75f33e7c55dd44cdc", "d46fea80dbf2d654bc810334e6ac26a5a917cba4", "a7e3971fddc7512fb1bd00aa2ea4388664656b2b", "70797998909a6561a32e16e29c54321fd05d176b", "058f7344db3187014e20de5d560c30e795839df6", "15fa10943c6e9db6d5db147efdec9640e86838a9", "ebf24fbda51cd8391791fb89499a6d732a36d835", "bc1e5c5c991fe6d06a5a0f6b775684ac91d289d3", "60ef777efcf683f28b33497995d6746bfe13bf45", "6d60a7db1d546ed0eb625212d4a80dab149470e6", "e9a2a1d0f7e4f326207413cdc37eb5b9d4f15246", "3e7ebf85568e7c9ef5b1373907c89a215e27e2b9", "19ae6c0763cffe5d4a9a020902ae7d9ecbb2d6ea", "c6f762f36be0496874d05c733593ac030409eb4e", "fdcd3945c53c4a1c921ea8097cbecbbf154fa9e8", "29ab864b2fda09ddee46554751f22f875c0ab736", "c5812bb485ff2ca86d67090b01b157f52c90e1fe", "18b301dfeb91ca4468e0955d4cafcb32186efe1e", "c13fc568c7cd11dbd53fb78e88479ef818c95cb3", "b7cbfc5c347869a271270ab98b8238428813517f", "4f0728f6a09063ab9f2121dd6077634a316c9401", "abf4ab2d78b2a7f3108fd7560145f45886f6b301", "f2fd0b7d52a01041db0329fc80fd0aa7630c98e8", "84f0ddd6bb629f99f6a0683aabad3856a78ea7e6", "cee6c74960a5176d921eb16458cd053f39833639", "727dbcdd88c158b27c16ea1ae265456987d7a8a8", "1c5785be57240dcf7d885095ec2ba93bc80edc6e", "4fc6400f5c31c0731f950fd617c4a55f57303c56", "a595032a902c0758610a1cb38379b5e91a01adbd", "8f456831d4d3bfa00f0fc72191480cdc2fb828dd", "809e3b5e2103a6eb1dacefa32d7917c2dcc3592a", "16be7167ec8470cc6ba24e188b6fd6d70afe109d", "cc334475b0ab3fdcff3061f58474775bd09cbe4f", "b9e81f93c1e32eb5568f306db317ea907813596e", "a82c400dc82f663d3dcf87a72966302404e2f822", "9bcbb4cfdc7f178afff5a06fd7dfb268b311796a", "a209be02eb2b4ac7cfc5bce67f44f2849ab22cf5", "788d2bfbbbc9cc2e85d27c480a56b68089d30898", "b6f767bf054dbc006ce1f098ca785112effa8519", "cc90a68241aa3ab849c0886b479da3a6449ba210", "c98d7bc340423a15ee816141066ec9244d3ea2f2", "9dfa454f6da6e88b51dba7840881feb874dbbdef", "0acb1519416832abbd7f83187c9260e99f6d57be", "745c8e2a83360f5f71904d1be828fd7041f42222", "5631132892de1bfbbe61e4fbe527367949c8d050", "2b9fd47b720f0743d69dfcc48bc04b471e37d240", "cdd516345818eab763da02e1b9d7ec42404e98c4", "1abf693b709f6315baacbbbf23d9f352c5a1083f", "1cad54f7b15974fb415a7ac5b63621a7460e3862", "7da18b96e819a347eedc7c84b29645b128de3cf6", "973696cbf5d261d313b17930a5e2e19378c085c5", "1e5f1740cd4bc602bfa68558c830e976ff7b5979"], "father_version": ["66d9621ce87c04a5167ee04097694093b13b514c", "5269701679295d8143ec578e25f68fe25594f46a", "ea7ab7cd520199fdb4a8d47fe462a4a0357a58bb", "0864a02e867633cba2daa8ace94eb3a72cc880de", "517d3b176bac50b588aea7c8b96410e58a549160", "26be9415754dcfe4b37b4a2e9fa74b9e29f562fc", "d53b3ea84a10e4a3a2be266176be5248be96c7c1", "f7cefcb426fed89365ab42daa387c255b599eb66", "9eb04414c0a7f201d039cdbf9a9ebc4144990d3f", "390385e382473927c4ba2eaf381c709003fd366a", "98f2bbf4c12d24421d2b65e4926263afe26f1265", "4552db2630b6d506ac7e212b337f818169f3c03b", "6d2557d5d1a8ac498f2bcee20e5053c93b33ecce", "cbc0af867b898d9e8244f268f4ffe37dfcaf8ea7", "565b7a198e026596c3fd18304f86537ae20f9a3f", "be0a1f4ff74bcd01580887cc9f3ec592d773f24c", "73216b2ad7b16f669000b8d7bb443921ea1a5b55", "4ec67c00a08348bff6abe1a4a285f8a78483ee37", "6dfbdc861ff7b5f027b8139671145ca67add541d", "b0595c595bd2c052cd05e0283bb37b67c02bd06f", "0d9f6b677ae67cbd749ebca817139041d1977831", "cc505e1b9fa6e6e29466914a348315f73d326d27", "e0de45ff69ba3daacc3b7623cc74fc69a4eaf6d0", "466ca729167662b72beb0b952a7819b71547eaec", "ca1df7f7e09f6b1a763882029dd7057f475b31de", "fe30b85224316cabf19f5dd3223843437c297802", "7b9a283a7a5d66878c9be01227b15e631afe2a5a", "f1f90313fc22c122a28716e7ecac1543e6fa253e", "ac14b4c197382810601574f1defd995842d7bfd7", "59a8aedb37ae35d4d2a4306c92efd463fffaaf69", "7988fbfa9047f4373bd382efb1b5add660e28cfd", "f319c1b8e5ac1135ab253513f91d5ece6719cdf7", "ceae88bd6667f4263bbe02e6b3710b8a683906a2", "ceae88bd6667f4263bbe02e6b3710b8a683906a2", "541252a9fb9837eb8867c094adcd37af2a655731", "1a9469a8c5aa31deacd36b3d15347f873ce7e889", "fa947212e010e5757864fbebe9cdafde8faadabb", "adc4c1949dd816eacb26175ee4bcab9f2c50b87d", "47b28d99a17d492b37fcdd0fc41290419a010a0f", "c18813884285493e69d94f004c294f539cc49828", "3958b1f78dc2b12da3ffd7426d3fc90550d46758", "63ee47cb642c8018e5cddd639aa2be143220ad4b", "477b3f77e159d15531fd30f41688d4b732a8b042", "bac26b8e429150d4cbf807e8692f207b7ce7d40d", "27c933527572bf861b8cb45774b0ceaa48b8805c", "3f4ac29f9112799a7374a99b18acabd0232ff075", "57085d621242cdca665e94dbd880738c37b9490b", "0cf6c4dd1fe434cc50b70b8ee007bf09688a522f", "c744ccd51cdea2e92b3e06abc44336943281cddd", "6c05cedecb6c200e7f15e81b95a616ba503d78d3", "28344d861d6e539d482ac9743788951191b965fe", "e38a6ce60dc5f381482153842fe2c74319d1f44b", "08bbb226f11a1f7f76835f953e700d905e1fab4d", "f0aa1118e9ef66ed324f9a63cdfb551cb4e9eca5", "03a72e752ef68269990f984c9fd613cfd59224bc", "ee691fba43663d1715752a7642f4b4ece1738567", "1c09b3f92899b2a88a216932a72a0708e4a40550", "74e37110e5edf38d1c9ec1b46f42670340a0c6c7", "5848096f3e1f36c038f522a3d7d6b9e3b553cf8e", "41e48f7aa3a686778e95328693b830856538e9e3", "537639c9e8ac40093429ad221b5dadce1cab2cca", "441fa98735c1360a6db3c13037b898d3e980e9de", "423ff04a75c3c83ab8be24c303aaa6aa10da7dd3", "7719e73a108c450666613c279bedaed724cd9cc9", "08c7bffba0e93611162cadfaf2ee03e3d143e7d1", "d125fc78cc0600fd0236766b6fda7d8c4ae6b3f6", "a786628318c51965ff6bd72204e78c2d6c04f8ed", "14c8c1a82bf9360856f7c125ea573b643d1fbae7", "2360cfa05c3e739e9b6ba4fb44ebe7431e377bf4", "c101e31c6984c763ffdd786248fda871fdf6aaac", "874e74a3072f7ff0d2533296698ad126321516d1", "a477f4f0ca9405ec85e65e1d9b8f2454e9ff1a0d", "48c430b811b8c8b6b3651527483f4bba2f13f659", "0c7e39981975fa88fbab012d42047ba5bc9522fd", "607bcaaf9d85560e53306bc2a7cf6333e9b314f1", "67bd3a2cf6f9c9c6e7f615969b1918f68e03932d", "02838e1e304b3742d90e89e574041a9eff3e1146", "6f15cd0060dfed248eae0219d35f20d89022972c", "0ae177fefbbe56987392482e7b310139e20147e8", "1f803bd37de5890f6da53f0b1a1b631eea4d1b8f", "4e1c352261042da7c7ea7c695e23b40b437215c1", "11b26b52563ef9bfecfcd0839b0f439e7661416f", "93605e7145c989d4f38ae347c9f31d605efcf434", "095ebbd5a116599a044c85221bc24d01b685ad86", "4a5735504c427276541cebb3abfdea913b9dd82a", "157b2323a7e5d9fd925f4dbbac43f67e451985b6", "93605e7145c989d4f38ae347c9f31d605efcf434", "93605e7145c989d4f38ae347c9f31d605efcf434", "77e31ed999bfe49aac9981dc661a64b5bba41986", "6960ebc77684dd07125e39caefc140262b1fb76e", "8e570ee3a2b5dc637c0fd270e09f67e72de35f83", "1fb33e427ad3d50ea5d9c3f44d86bc49b26b3d5f", "62b9428fbddc9f3dcb247e89201b7fc522c01a4d", "0c3b9670f0907e36a4fcb435410dfad62873693b", "33e74101e59d41740a41eca487a3a2a819af5370", "1de2ace065963ca1d9d3715b92743f706bc35659", "60b2370c74e65fa5a0a89e18a95428ee19dfc363", "f2591b666419e06017b2327f7729440c122bf675", "9bbdcac5a82600f30b1f1d1d0de27db936d3bd55", "c6752fc47ad0268480a5ef49fc6cbd485447ce23", "a411a766f7b3ea2c82cbd22e64efa6cee0ce9f2b", "c53e2551058b445b6adf5bc588456c2b33548e28", "edf66083e6245abfab4a85dce03c0bf79a66f474", "e280ffd7e2fe14140c9478a546c6f074cf089a13", "0922af5be609ff6d5559c0b534bc10cc78bd925c", "b52f692ffa6bdd3a6c9305a8af8c385908346be1", "d2b660570e1a68653e02de210b0c1221616127e9", "3f4bc4cd10a0fe746793f5974a4592fa32a9b8ac", "b88e0e9395fd153deea35272bef5c968fcb863a7", "8e8bb9c688c0ca3ba0d9ca5ddb594093eb8c8f0f", "edd6c19670b7d56700b2093071122a0015c06e95", "63142f621c42817c9a0a948106151bebc11ea8ce", "6a69c603c0686e20cc71d73689080dc9e1239ab8", "e5b9b8eb81365c8986b2d0d0c8a64878cf4a1d07", "fd4fbe41322c39329245b6a1311ae42bd10827ad", "aceadaecf18cf7ad011ae3040aa3fe570559902d", "93e38901df0cf08496955b74ba6b26e19a104202", "b3b919770bd6e1aa14abc9ee1a1406af251e1d1c", "980796005ff96f88a009822eebaba3eb8339051e", "4c2980e6ff798f3209f00292ead5060c402d9774", "c7cb503cdb093cf7bb78afdfe125dd2255f029ad", "982c893d65894908fe020ac7f989b0b8b805aa34", "1c7aee40f3d0d6f50b3d149e94a2b3b4627ca8a9", "392f29e859c198ad489f790f494352e13c1473de", "a991e54157f694d603c013f05e8870ba5e49c78f", "15c2ae7548317a9b21926b63fc4c192a65258e22", "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48", "5c978948a0ffc7f62fa61aaf0d5037b55b0b89fd", "dd86d63436c5ea9d90df52af049e82d25461d19f", "f24da51ca2e47229a403819219986ebf3cd07597", "4b8fd66c9dd50dd4c848b7ba40a549fbbcc69c7f", "8fcbd57e5922ce05b6116d13420c12413903336e", "214234e2029919dd7d25c4a90e2fac825795c022", "dce4e463d95f4fff7cd1808f1d7eafc79ac8eda8", "e2e672740a6e58f81924406decba024a239fb8a5", "b19e187bdda7765f008e0fcdcb4fd184bdd87e00", "296d843afd575a75d7959474aad76ac05afa0706", "4c06b013697d06b327f3c537e23181887aeab774", "a069f4d88385095e13fb72e9fb4bb6977fa96883", "a00c5ff9f135e00baffbc2901f0ef9dac0c8dda2", "2c19c439057e2025e10109e9c7ebe20b6e4e2105", "01661426f91322bce8bc34842a0283a5add5e0be", "de727d8c4811209b2fdc6dbfa367f8bb7f78ba4e", "cf15565243dc20e2b9fb27dcfcd65566fed261c7", "8b21c7770b85dae64fa6da181546a73378158a13", "cebda2b11921bf4f8adf5f36adfaa462b4cd1e1a", "b2d5940a9baf82c6aa796adf710b86fe64fe14e7", "b5f8ef6e16d615f48c35ed3c6826db0616e1fb53", "915c5d4d6f46ca65f60430b7a9b403be87453243", "d43cf5ea358568446f275c572d8ab9b65c827da7", "befcfd908b55f1ee80eb046fe6c1196e49491ab2", "4b042671af018f308c2a261145dc6712e39b96e7", "9cf579ef01e66dad2ffe907350d2d088497138a8", "d3a4b48ad92ce5e5a45a7046e737984608c22cc6", "c6bef300579d96fe90e5be8240ee595ae8da66f1", "937019651a9f81a12b457a1400c5fdf5bc65b6a4", "9ad3358728073500a5fc30f9685eefa48696fe23", "c9ee7adcc59f2cb686594b537e336ecc01896a0d", "60e7c481fd1fcbd8b0ecec1b4238fdc51b008009", "ce79e16f7a1811e55b140980ebf6f8f68c0370fd", "f291c4d33ea5fcc52afcfa5713e519e663378bda", "cf3615e38c3078611706e5770d0c21fd01c4c2e1", "e345feb438e899736162463263addd3c8628a9f0", "f5d6b01ca6b7d653797833e5537fe29457d9943d", "c2660973108b61e07907a4f327a2a13a300545b0", "457b37f08e3cf81299be9dc1f409eaf9c217a1dc", "944081327bcf700ebe258699807e74ae19d41989", "523f489863812d6831bc33443fe699c2903a450f", "912add077989dc06977fe31209d4d8d125bce8d4", "28567508ea50e15f63807277d1a72ec9060eb5ad", "4be9767a283af799188056a89c0af839140b4689", "50a1191f904ed9ba5ee523177c032e50da7ce807", "56aa8283505e1813bcd800c3c05dbdacccf22ee7", "fa7f8cc2eb9c4e5aa3f57b95b760df3423b0fb0b", "db3f19e881ba7a86faa97e291be874c5405eedda", "54ba11210f0657d1b77e75122557d22b5ac58009", "be05420c6b6fe150faaba4152a2846fbab95408e", "0b4bf7706a8f997a9279ad70c656fe5bfa221df2", "4413c299ea09c57b94af8647eec901554c2f5c50", "cf026212758bc4f18ee3946c0931e68d1ac99529", "c8c3a6965c5a1a01951452a25291e5a5944fa59a", "20d895ff95414d4da23d07115c57920f5813a95d", "d0977c2e3af152901b7b921a31ab6597b0884a4a", "ebd40477074f88fb6045d997c1d02939bb458b68", "1d2648231f436979b06ccce033946568bdd89f15", "281ed6f86671d4c74e41a2f632757c8096db938d", "2b1f3eec15969d5771a957ba810e3c3a80519a3e", "747e3c3051153779954e49b7dbc475daa678e1f4", "fa40b4c63a57e92e87b3fb6079b01fd5304a01c1", "ff7aa3f3314e9e9ac50f3b8b259126ad379aead6", "d5741b321f6a1c543fb330a8bc11a9fc882748d7", "3fc4bcc06132e53758608a8a59e1ddd7b5002206", "8b5cc3256d53b827ee594ccd63325f474a33927c", "cb6de44b565a6a274e30fae71a5730d7be148973", "425a59043d2bbae074335436e830e3b59dfe9278", "341c4ce5d1cf4803fabed4499ae27f546a594562", "ceb2f8fdb0551e2789381bdfdefb0fea020f9785", "8aedbc84dbf580531ec43a33729526b3ed038306", "7a115785b73a17b8b07c4fcbb91d6b26a5083ba5", "dbca5571e0e97293664a89346b38758e85bdfd27", "058f7344db3187014e20de5d560c30e795839df6", "c5e3c32215ec66d894571bb3199145d5e4a2efe3", "ebf24fbda51cd8391791fb89499a6d732a36d835", "c329d020b95035c78bed8f1be39d31b188daf359", "338758a0d3b30d47a31571e2315c3f2b34e9e894", "6387c9028e3bcd8a2e44a697af592998d232cca2", "2bddd575b3d0c018f5243354c7b399bd51be203c", "3e7ebf85568e7c9ef5b1373907c89a215e27e2b9", "19ae6c0763cffe5d4a9a020902ae7d9ecbb2d6ea", "82974376103243addbedd1eb034ca46e2db47046", "b0f50bb4bed8ab52a4dc674d042e7c1518eb885f", "50eb582657b5a07aa4aec22f11c9f3071eb631a8", "c5812bb485ff2ca86d67090b01b157f52c90e1fe", "18b301dfeb91ca4468e0955d4cafcb32186efe1e", "82771f006cad2047df9b30cdc35338599c31da45", "f4f596ec3daee1cb1890d4655c7f7ca15b557df3", "03a3cc83c3d358bf7f1a8e6dca2da512389620b6", "6d50bcea8711642c90caa6db6b1f13ccd38290c1", "6e59e502c2461c11d0e6099f10f65c666acabc45", "01278910810adfd32ecb18e27f1273aa1aab1b5e", "5c6d5a0d119481e7ca61b0884c881c6811d7af86", "e9600e10cbf677dfc8547288bf96bbe7d1de3d7c", "68f3899c1aedc5ee1c97f0c54e0d951df5d4a9a0", "4fc6400f5c31c0731f950fd617c4a55f57303c56", "a595032a902c0758610a1cb38379b5e91a01adbd", "3d1f7251c1285148481a2cde6d2a8e9bbcaae158", "809e3b5e2103a6eb1dacefa32d7917c2dcc3592a", "16be7167ec8470cc6ba24e188b6fd6d70afe109d", "18005bbae1922f725aabe1ce15624104bfc2d146", "6fe2fdf7a09dd03a188218b83c20916d797ba3a3", "50dd475eb8cdfceb9f12baab178a0ba66cfb40dc", "c9e48097ece2f2e3b16c6bb726218c7967af4e8c", "59be02d4de5f854b13b3cce194d2cab8ea1ad8ab", "2250afe82558df09b4d20f006bcb1840b64f619e", "e101ed162307934de7c5ae7e5086147494f7bbee", "cf2a457af7b0422e7728e0d55a4e794048af5a6b", "70c7728218bafe63c6ef6242a84f474a576ae4c0", "7aa1d0f6aa144d04389eab2faab603c853b23909", "95861175a8b175215b753e021ff361609a2d5281", "9f5a2086deafa340ac12e78d44c8c23b19483f9d", "646d94d420e04f1eaf3465c5df91900e558d6c5f", "f6a278018e663b56d1f6528dfc710adde76569cc", "4d73459b7e2fa806610ff1110baf1da3c650c21d", "d61e754fb66b2c9adeb681bad156efc14667b052", "427c17a73208cf53c381e4e8099d4ef60c08cc9b", "9ad4b2bc7ee14cb2004d25a65cc31e22ce293504", "973696cbf5d261d313b17930a5e2e19378c085c5", "82851d68be3381911239f8bf0738c6e33bfc320f", "165fd78726a28d401d6062d94540aca926f681b7"], "commit": ["Small tweaks to fix Error Prone warnings. (#2227)", "Fix TypeAdapterRuntimeTypeWrapper not detecting reflective TreeTypeAdapter and FutureTypeAdapter (#1787)", "Fix typo in GsonBuilder Javadoc (#2213)", "Fix incorrect HTML headings in Javadoc (#2200)", "Fix changes to GsonBuilder affecting existing Gson instances (#1815)", "Make JsonElement conversion methods more consistent and fix javadoc (#2178)", "Fix `TypeAdapter.toJson` throwing AssertionError for custom IOException (#2172)", "Fix JsonTreeReader throwing wrong exception type for non-finite doubles (#1782)", "Fix JsonWriter documentation regarding top-level value (#1766)", "Fix typo (#1246)", "Fixed nullSafe usage. (#1555)", "Fix #1702: Gson.toJson creates CharSequence which does not implement toString (#1703)", "Fix malformed JsonElement.getAsBigDecimal() javadoc (#1772)", "Fix RuntimeTypeAdapterFactory (#2139)", "Improve error message when abstract class cannot be constructed (#1814)", "Fix JsonReader.hasNext() returning true at end of document (#2061)", "Fix a mistaken use of StringBuilder('#'). (#2052)", "Fix ObjectTest not restoring default Locale (#2050)", "Fix Javadoc warnings and errors (#2040)", "Fix for an ArrayIndexOutOfBoundsException.", "Fix failing to serialize Collection or Map with inaccessible constructor (#1902)", "Fix warnings (#2014)", "Fix `Gson.newJsonWriter` ignoring lenient and HTML-safe setting (#1989)", "Fix `FieldNamingPolicy.upperCaseFirstLetter` uppercasing non-letter (#2004)", "Fix missing bounds checks for JsonTreeReader.getPath() (#2001)", "Fix LongSerializationPolicy null handling being inconsistent with Gson (#1990)", "Fix incorrect feature request template label (#1982)", "Fix `RuntimeTypeAdapterFactory` depending on internal `Streams` class (#1959)", "Fix formatting", "Fix indentation of EnumWithObfuscatedTest", "Fix post-obfuscate-class task to include obfuscated test classes", "Test cases for testing the exceptional behavior of get, getAsBoolean, getAsDouble, getAsInt, getAsJsonArray, getAsJsonObject, getAsLong, and getAsString methods of JsonArray class. These test cases, which we wrote according to the specified behavior of each method, that helped us in identifying the documentation bugs in JsonArray and JsonElement classes, which we submitted issues for (Issue #1908). Note that we have adapted these test cases based on similar tests from the JSON-java project (https://github.com/stleary/JSON-java).", "Improve incorrect JsonStreamParser doc", "Fix fallback behavior of UnsafeReflectionAllocator when AccessibleObject isn't so accessible", "Fix warnings", "Fix ISO8601UtilsTest failing on systems with UTC+X", "Fixing https://github.com/google/gson/issues/1592 (#1623)", "Fix javadoc doclint HTML warnings (#1653)", "Fix OSGi metadata generation to work on JavaSE < 9 (#1603)", "Fixed tests for java 11 (#1454)", "Fix typo in UserGuide (#1572)", "update proguard to fix R8 compatibility issue (#1527)", "Refactor JsonParser to statics & fix tests", "Fix wrong reference in Versioning Support example (#1482)", "Fix JPMS module setup (fixes #1315) (#1402)", "Fix issue with recursive type variable protections to fix #1390", "Fixed https://github.com/google/gson/issues/1310 (#1311)", "Fixed excludes section in maven-compiler-plugin (#1301)", "fix Java9 DateFormat changes (#1211)", "Fix a small typo (#1183)", "Replaced oracle JDK 7 with openJDK 7 to fix broken build. (#1184)", "Fix README.md grammatical error (#1175)", "fix issue #1107: resolve element type in wildcard collection types (#1146)", "Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract (#1100)", "fix typo in ConstructorConstructor exception", "Fix StackOverflowError on resolving types with TypeVariable recursion (#1128)", "fix javaDoc (#1122)", "Fix well formed exception (#1105)", "Fix StackOverflowError on resolving recursive types by collapsing chains of type bounds (#1075)", "negative zero test and fix (#1069)", "Performance fix to avoid reflection-based initialization of null key surrogate", "UserGuide formatting fix (#1045)", "Fix headers format in the README.md (#1041)", "Fix ArrayIndexOutOfBoundsException when skipping a value with JsonTreeReader #1013 (#1014)", "Fixed typo", "Fix for #957 (#994)", "Fixed https://github.com/google/gson/issues/958", "Fix GitHub Diff link.", "Docs fix for the RuntimeTypeAdapterFactory class. Instances of classes that implement RuntimeTypeAdapterFactory should be registered using the registerTypeAdapterFactory method instead of registerTypeAdapter.", "Corrected documentation, copy&paste error", " Documentation Error", "fixed throwing RuntimeException instead of JsonIOException", "minor javadoc fix ... @code block not treated as html", "Fixed unbound range bug issue# 819", "previous mvn release:prepare failed but updated GitHub anyway. Fixing that.", "Fixed a regression in Gson 2.6 where Gson caused NPE if the TypeAdapterFactory.create() returned null.", "Fix RuntimeTypeAdapterFactory javadoc", "Fix some typos in gson comments.", "Fixed code style to remove explicit casting op.", "fix typo in JsonArray docs", "Fixed ToC", "fixed typos", "Fix type hierarchy adapters to do a runtime check.", "Fix javadoc of SerializedName", "added relativePath to avoid warning about incorrect parent path", "fixed pom and .gitignore", "Fixed javadoc for JsonWriter as reported in https://github.com/google/gson/issues/623", "Implemented equals and hashcode for LazilyParsedNumber to fix https://github.com/google/gson/issues/627", "fix #680 - make RuntimeTypeAdapterFactory null-safe", "Fixed accidental duplication of null elements", "Replace localhost lookup with static IP to fix test.", "fixed group link", "fixed links", "fixed tests to take care of stackTrace element appearing sometimes", "fixed extras build", "fixed issue 469 by adding a TypeAdapterFactory for throwables that ignores cause if it is self-referencing", "Fixed issue 582", "Fix bugs in getPath() with arrays of objects and arrays of arrays", "Fixed issue code.google.com/p/google-gson/issues/detail?id=353 by adding set method in JsonArray", "Fixed issue code.google.com/p/google-gson/issues/detail?id=353 by adding remove and contains methods in JsonArray", "Fix inverted docs in ExclusionStrategy.", "Fixed issue 552 by documenting when fromJson returns null.", "Fixed typo as mentioned in issue 565", "Created threadsafe implementation of JsonAdapter invocation. Also fixed a bug where runtime generated typeadapters were being carried over from a toJson/fromJson call to the next.", "Fixed broken test to ensure that a field JsonAdapter annotation supersedes the class JsonAdapter annotation. Added a map in Gson to keep track of TypeAdapters which are generated by Gson.", "Fixed a bug where an inner static class was incorrectly marked as non-static while creating parameterized types.", "Fix a nasty bug where elements in LinkedHashTreeMap could be dropped.", "Fix hashing in LinkedHashTreeMap, but it still does not work :(", "Fix test that expects an exception to fail if no exception is thrown", "Test to expose edge doubling and rehashing bug in LinkedHashTreeMap.", "fixed https://code.google.com/p/google-gson/issues/detail?id=491 by adding OSGi entries for maven-source-plugin", "fixed https://code.google.com/p/google-gson/issues/detail?id=509 by adding construction for EnumSet", "Use the right method name in error messages.", "Fix object leak from ThreadLocal.", "Fix compile warnings", "Optimizations and bug fixes for LinkedHashTreeMap.", "Fix a bug where we were unlinking nodes that shouldn't have been unlinked.", "Fix cut & paste issue in JsonToken Javadocs.", "Fix a bug where we weren't reading enough characters when a BOM was encountered.", "Fix a goof in number parsing.", "Fix a bug in integer parsing.", "updated oss-parent version to 7 in gson-extras pom. fixed some eclipse warnings.", "Fixed issue 443 by relying on Streams.parse() to return a JsonNull on empty documents and throw a JsonParseException otherwise.", "Renamed Gson.getNextAdapter to getDelegateAdapter. Deleted testParameterizedMapSubclassDeserialization which we decided to not fix. Added simple tests for getDelegateAdapter", "Fix a documentation typo.", "fixed eclipse warnings", "Fix testStringEndingInSlash by fixing nextNonWhitespace to always return the character at buffer[pos-1].", "Permit multiple top-level values in JsonWriter in lenient mode. Also fix some cases where we don't throw the right thing on a closed JsonWriter.", "Write some tests prescribed by missing code coverage. I found a bug where our nonexecute prefix code causes a problem.", "Admit to a mistake in InetAddress' type adapter", "Fix dangling sentence.", "Fix tests broken by r1078.", "Fix a broken Javadoc link to this.", "Apply locale fix for date type adapter test.", "Fix nullSafe() to not infinitely recurse on non-null input.", "Fix broken test in registering competing type hierarchy adapters.", "Fix type adapter precedence so that last-registered wins (except for tree type hierarchy adapters, which were always last).", "Don't allocate a whole bunch of objects each time we deserialize a map key. This saves 20% on bug 375's benchmark.", "Fix a regression I introduced with the changes to type hierarchy registration. If the registered type was a raw type, we need to also match the parameterizations of that type.", "Fix typo: Paramterized was spelled wong.", "Fix compile issues found during release.", "Tests to demonstrate that GSON 2 fixes some user-reported bugs.", "Fix broken example.", "Fixed Eclipse warnings", "Fixed com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization by changing Gson behavior incompatibly (but more consistent). GSON 1.x applies different rules for versioning for classes vs fields. So, if you deserialize a    JSON into a field that is supposed to be skipped, the field is set to null (or default value).    However, if you deserialize it to a top-level class, a default instance is returned. GSON 2.x returns null for the top-level class.", "Fix date adapters to work when run in any time zone.", "Fixed MapTest.testInterfaceTypeMapWithSerializer. This test for relying on JsonElement.toString() to have same behavior as gson.toJson(JsonElement). However, gson.toJson() skips nulls by default whereas JsonElement.toString() does not.", "Fixed eclipse warnings.", "Converted EnumTypeAdapter to new style. Got rid of default Hierarchy Serializer/Deserializers from DefaultTypeAdapters. Got rid of methods for gettting default serializers/deserializers/instance creators. Instead we reuse the static final instances. Fixed warnings in TypeAdapters where a parameterized type T was hiding the parameterized T in methods. Removed support to unwrap single element array of enums into enum values. Also removed the test that verifies this behavior.", "Fix the map type adapter to support array serialization natively.", "Fix a pair of relatively benign off-by-one bugs. These only manifest if the source Reader returns characters one-at-a-time.", "Include line and column position in error messages.", "Fix integration tests that fell out from some benchmarking.", "Fix serialization where one type depends (possibly indireclty) on itself!", "Fixing import order.", "fixed issue 339", "Quick fix for threading issue. Should maybe look into synchronizing this method instead.", "Fix typo", "fixed javadocs", "Revised Gson to refuse to deserialize floating point numbers into integer types. This is probably a break from the past: previous versions of Gson allowed truncating a floating point into a long or int. However, it wasn't consistent in this behavior. It disallowed converting a BigDecimal value into BigInteger, int or long. Refusing to deserialize such values is aligned with fail-fast approach of uncovering bugs.", "Make test a little more complex to show it actually fixed the bug.", "Fix a bunch of preserve-type issues: - Issue 205 - Issue 294 - Issue 318", "Adding unit-tests to verify bugs.", "Fixed typo.", "Fix method name by making it singular.", "Fix minor JavaDoc issue.", "Fixed comments from r774.", "Test to demonstrate that we've fixed issue 302.", "Fixed the bug where copyOf() for a ParameterizedTypeHandlerMap was failing when hierarchical type adapters for a sub class and its base class were present.", "Fix unsafe allocations on Android", "rawtypes -> unchecked Fixed spurious eclipse warnings on deprecation, missing classes or parameters, etc.", "Fixed issue 175 by adding default type adapters for StringBuilder and StringBuffer.", "Added tests to validate issue 272. The tests currently pass so it is not a valid bug.", "Fixing rollback.", "Fixed compilation problem since we dropped registerTypeHierarchyAdapter method", "Fixing fromJson type casting.", "Fixing parsing of unquoted strings to be (somewhat) consistent with previous versions of Gson. The difference with this version is that Gson will throw a more specific exception rather than JsonParseException.", "Fix JavaDoc on JsonSyntaxException", "Fix for Issue #40.", "Fixing compiler warnings", "renamed com.google.gson.stream.JsonSyntaxException to MalformedJsonException. Throwing JsonSyntaxException instead of JsonParseException where we can detect a syntax error.", "Fix a regression that expects different type adapters for long.class and Long.class. This is a temporary fix; later we may want to always use the canonical wrapped class.", "Fix primitive wrapping and casting.", "Added a new JsonSyntaxException to indicate syntax errors in Gson.", "Added a transient map in Metadata since metadata is often of two kinds: transient and persistent. persistent part is serialized/deserialized to JSON. Fixed imports in RepositoryInMemory.", "Added an exception class to indicate IO Errors.", "removed redundant null checks. Fixed bug in Streams.copy where it was not honoring the closeInput and closeOutput parameters. Suppressed spurious unused warnings", "Fixing the Java 1.5 build.", "Fix some test problems.", "Fix some test problems.", "Test case demonstrating that issue 212 is fixed. We got comment parsing support for free when we switched to JsonReader.", "Fix for Issue 178.", "Test demonstrating a bug reported in issue 182, wherein malformed JSON is emitted when an property name contains a double-quote.", "Test demonstrating a bug reported in issue 178, wherein malformed JSON is emitted when a map key contains a double-quote.", "fixed copyright notice, minor cosmetic changes.", "Added a test to reproduce bug described in http://groups.google.com/group/google-gson/browse_thread/thread/9591c539e3c19d59 Seems like an invalid bug report as Gson can deserialize primitive values in Integer fields.", "fixed the maven configuration file for relative paths", "Added checks to ensure that typeHierarchyAdapter being registered doesn't hide a previously existing one. Fixed a bug where registerIfAbsent was adding type adapters in the reverse order of priority. Added toString() to Pair.", "added type cast to fix JDK version mismatch issue", "Added setting of content-length in requests even if the body is non existent. Fixed logs for requests. Ensured that streams are not inadvertently closed while copying output.", "Fixed issue 167 by adding support for TreeSet deserialization. Added tests for serialization/deserialization of treesets.", "Revised the setup for date/time tests to use PST time-zone. This fixes bug 184 by ensuring that tests are run in PST time-zone.", "Fixed serializers and deserializers for java.sql Date and Time to ensure that Date does't serialize time, and time does't serialize the date portion.", "Fixed issue 134 by adding support for java.sql Date and Timestamp classses.", "Ensured that custom deserializer is invoked with actual type returned for field values. Fixed a bug where a top-level object was constructed with default values even when the custom deserializer tried to set it to null.", "Fixed custom serilization invocation to correctly handle nulls returned by custom serializer.", "Fixed comments from r486.", "Fixed Issue 153 by using a stack to keep track of first elements at any level.", "Fixed issue 156. Added support for serializing an object field (or array elements) as per its actual type. Refactored inheritance related tests into its own test class. Added regression tests for issue 156.", "Fixed issue 162 by making default date adapter thread-safe by synchronizing serialize() and deserialize() methods.", "Fix Warnings", "Fixed issue 147. Integral values (byte, short, integer, long, BigInteger) are now comparable to each other. Floating point values (float, double, BigDecimal) are now comparable to each other.", "Fixed bug 158", "Fixed Incorrect JavaDoc", "- Serializing of Object arrays. - Fixed incorrect warning", "Fixed indentation and simplified equals method as per code review comments on r419", "Fixed Issue 141 by adding new APIs for writing out JSON string representation for JsonElements.", "Fixed issue 126 by ensuring that parameterized type deduction is not done for transient fields.", "Fix project so it still compiles with JDK 1.5.", "Fixed the typo in OSGi Bundle manifest and updated the version number to 1.4 to match the revised Gson version.", "Throwing a helpful error in cases where the user forgot to use the TypeToken idiom.", "incorporated code review comments from r379 by removing the catching of OutOfMemoryError and StackOverflowError in Gson.fromJson. This is obviated since JsonParser.parse catches these errors, and that was the primary source of these problems.", "Fixed javadoc for toString() since we do not output valid Json for strings at the moment.", "Tests to reproduce issue 95. The tests currently pass so the bug will be marked as invalid.", "Fixed the test that broke while fixing issue 100 in r394 by using a TreeSet for SortedSets and HashSet for other kind of sets.", "Fixed issue 100 by adding support for deserialization of collections of elements that do not implement Comparable.", "Fixed Issue 104 by making FieldNamingStrategy to be public and allowing FieldNamingStrategy to be set in GsonBuilder", "Fixed bug 106 by adding custom serialization support for Gregorian Calendar.", "Updated Gson grammar to support floating point numbers without a +/- after the E. So, 1.234567899E8 is now accepted by Gson as a valid floating point number. This fixed the bug http://code.google.com/p/google-gson/issues/detail?id=94", "Fixed issue 87 by adding support for deserialization of java.util.Properties", "Fixed warnings and updated some JavaDoc.", "Fix warnings.", "Fixed issue 52 by switching Gson.toJson methods to use Appendable instead of java.io.Writer", "Revert previous pom.xml change.  Submitted by mistake.", "Fix parsing of double and big decimals that have an exponent but no fraction part.", "Fix warning in code", "Fixed issue 68 by providing support to override default type adapters for primitive types. Added a visitFieldUsingCustomHandler method to handle this in the visitors.", "Fixed issue 66 to allow escaped slash ( \\/) as a valid Json escaped character. Changed Gson version to 1.2.3.", "Fixed issue 63 where Gson could not operate in a thread-safe manner. Resolved the issue by recreating ObjectNavigatorFactory for each call instead of reusing the same object everywhere. This is needed since ObjectNavigatorFactory had MemoryRefStack that was incorrectly being shared across calls.", "A test to reproduce Gson concurrency bug. See issue 63.", "Fixed issue 58 by disabling the use of field value actual type for all cases except when it is marked as Object.", "Fixed Issue 54 to enable serialization of fields that are declared of type Object.", "Fixed issue 53 where default date instances were not getting serialized/deserialized properly. Added support for time style as well by using he default formatter that uses time style.", "fix for bug 56 where Gson wasn't serialization null fields of type string, collection and arrays properly even when serializeNulls was set.", "Fix for Issue 55 where GSON was unable to deserialize JSON with single quotes (') used for field name/values. Gson now supports different fields with-in the JSON to use either single quote or double quote. However, a single field name or value must use ' or \" to delimit itself.", "Fix pretty printing of interlacing arrays and objects.", "fixed issue 46 by adding toString() methods to Gson, serializers, deserializers, and instanceCreators, and default type adapters.", "Tests exposing bug 43 and 44.", "fixed some paths."], "metric": [["1", "1", "1", "1", "2", "3", "3", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["4", "9", "42", "14", "1", "1", "152", "0", "0", "0", "0", "0", "1", "0", "0", "9", "0", "0", "1", "0", "3", "4", "0", "4"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["6", "13", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "1"], ["0", "0", "0", "0", "2", "5", "227", "20", "0", "0", "0", "0", "0", "0", "2", "11", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "38", "39", "56", "2", "6", "41", "4", "0", "0", "0", "0", "0", "0", "2", "2", "0", "2", "0", "0", "3", "1", "0", "17"], ["1", "6", "1", "1", "1", "2", "29", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "2", "7", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "6", "14", "5", "1", "1", "18", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "4"], ["1", "3", "17", "4", "1", "5", "46", "8", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "2", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "5", "5", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "5", "0", "1", "1", "55", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "2", "2", "14", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "6", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["8", "16", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "0"], ["1", "2", "4", "3", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["7", "12", "95", "125", "6", "8", "123", "150", "1", "2", "18", "1", "1", "2", "3", "4", "10", "3", "1", "3", "3", "4", "6", "3"], ["1", "1", "4", "1", "6", "7", "14", "15", "1", "1", "0", "1", "0", "0", "6", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "0", "1", "2", "68", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "21", "18", "1", "1", "110", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "1", "0", "0", "6"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "7", "1", "1", "2", "26", "6", "0", "0", "0", "0", "0", "0", "1", "2", "0", "3", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "5", "4", "1", "7", "17", "19", "2", "4", "33", "146", "0", "0", "1", "0", "1", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "64", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "1", "2", "26", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "5", "8", "8", "2", "0", "0", "0", "0", "0", "0", "5", "0", "0", "4", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "30", "39", "0", "0", "0", "0", "0", "0", "1", "2", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["8", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "30", "12", "5", "21", "29", "36", "0", "0", "0", "0", "0", "0", "5", "0", "1", "29", "0", "0", "1", "4", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "9", "3", "0", "0", "0", "0", "4", "4", "24", "10", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "4", "36", "15", "1", "1", "49", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "10", "71", "34", "4", "14", "71", "13", "0", "0", "0", "0", "1", "0", "3", "7", "0", "7", "1", "1", "3", "6", "3", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "11", "160", "43", "3", "10", "46", "14", "0", "0", "0", "0", "0", "0", "3", "0", "0", "7", "2", "0", "2", "10", "0", "6"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "0", "1", "1", "19", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "2", "1", "1", "14", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "17", "11", "1", "1", "22", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "2", "4", "12", "3", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "14", "2", "1", "1", "57", "0", "0", "0", "0", "0", "1", "0", "0", "7", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "6", "2", "1", "1", "35", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "5", "3", "1", "1", "153", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "3", "0", "0", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1", "0", "0", "3", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "7", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "37", "21", "1", "4", "27", "17", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "74", "52", "1", "1", "17", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "3", "0", "6"], ["1", "1", "1", "1", "1", "1", "19", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "4", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "6", "3", "0", "0", "0", "0", "2", "9", "7", "9", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["3", "6", "23", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "1", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "0", "1", "2", "44", "4", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "1", "4", "0", "1", "1", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "0"], ["1", "1", "12", "0", "1", "2", "19", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "3", "0", "-1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "22", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3"], ["3", "5", "28", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "5"], ["1", "2", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "7", "24", "34", "0", "0", "0", "0", "0", "0", "2", "2", "1", "2", "0", "0", "0", "0", "0", "0"], ["1", "4", "11", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "38", "1", "0", "0", "0", "0", "0", "0", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "22", "4", "1", "3", "19", "6", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "9", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "16", "94", "89", "1", "8", "46", "25", "0", "0", "0", "0", "0", "0", "1", "16", "0", "3", "0", "0", "1", "53", "0", "-29"], ["1", "8", "18", "17", "1", "2", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "1", "6"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "0", "1", "110", "148", "131", "0", "0", "0", "0", "0", "0", "1", "1", "0", "109", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "1", "1", "33", "1", "0", "0", "0", "0", "0", "0", "1", "4", "1", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "3", "1", "1", "1", "1", "0", "1", "1", "1", "1", "0", "0", "1", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["2", "3", "4", "9", "2", "2", "14", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "6", "18", "17", "1", "1", "70", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "3", "1", "1", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "0", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["1", "2", "7", "2", "1", "1", "15", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "6", "20", "6", "1", "2", "101", "2", "0", "0", "0", "0", "0", "0", "1", "7", "0", "0", "0", "0", "1", "0", "0", "5"], ["1", "3", "3", "10", "1", "6", "167", "1", "0", "0", "0", "0", "0", "0", "1", "15", "0", "0", "0", "0", "1", "0", "1", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "9", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "2", "1", "1", "5", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "1", "3", "26", "6", "0", "0", "0", "0", "0", "0", "1", "2", "0", "3", "0", "0", "1", "0", "0", "1"], ["3", "5", "29", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "0", "1"], ["2", "5", "16", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "5"], ["0", "0", "0", "0", "2", "2", "4", "4", "0", "0", "0", "0", "0", "0", "2", "11", "0", "-11", "0", "0", "0", "0", "0", "0"], ["2", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "3", "6", "43", "5", "0", "0", "0", "0", "0", "0", "3", "4", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["3", "4", "3", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "3", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "5", "1", "1", "6", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "8", "58", "46", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "3", "4", "3"], ["0", "0", "0", "0", "1", "2", "6", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["5", "7", "7", "5", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "5", "0", "0", "2"], ["4", "13", "49", "91", "2", "2", "3", "9", "1", "1", "1", "0", "0", "0", "2", "0", "1", "1", "0", "0", "4", "4", "10", "4"], ["5", "13", "114", "56", "3", "4", "5", "8", "0", "0", "0", "0", "0", "0", "3", "1", "1", "1", "0", "1", "4", "1", "2", "10"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "4", "35", "1", "1", "2", "32", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "2", "0", "2"], ["2", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "57", "5", "1", "2", "21", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "-1", "0", "0", "1", "4", "0", "1"], ["0", "0", "0", "0", "1", "1", "10", "11", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "3", "18", "3", "1", "2", "67", "0", "0", "0", "0", "0", "0", "0", "1", "9", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "6", "8", "6", "3", "4", "27", "2", "0", "0", "0", "0", "0", "0", "3", "3", "1", "0", "0", "0", "4", "0", "0", "4"], ["0", "0", "0", "0", "2", "3", "16", "6", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "2", "2", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "2", "2", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "9", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "6", "1", "2", "6", "6", "0", "0", "0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "70", "39", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1", "2", "1"], ["7", "16", "13", "4", "7", "7", "7", "5", "0", "0", "0", "0", "0", "0", "7", "0", "0", "0", "0", "0", "7", "0", "0", "0"], ["1", "4", "42", "0", "1", "1", "22", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "6", "0", "2"], ["0", "0", "0", "0", "1", "1", "18", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "42", "5", "2", "17", "101", "70", "0", "0", "0", "0", "0", "0", "2", "3", "0", "18", "0", "0", "2", "1", "0", "2"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "49", "1", "1", "1", "61", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "-1", "0", "0", "1", "1", "0", "1"], ["7", "9", "11", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", "0", "0", "3"], ["5", "12", "19", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "0", "9"], ["1", "3", "6", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "9", "6", "1", "2", "8", "4", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "-2"], ["2", "6", "18", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "2"], ["3", "4", "19", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "3", "0", "-1"], ["4", "4", "10", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["2", "3", "3", "3", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "2", "3", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "41", "7", "1", "1", "2", "9", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "3"], ["0", "0", "0", "0", "1", "1", "24", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "13", "30", "31", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "10"], ["0", "0", "0", "0", "1", "2", "10", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "6", "8", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "6", "26", "7", "1", "1", "15", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "3", "2", "0", "5"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "5", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "5"], ["1", "1", "1", "0", "1", "3", "17", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "10", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "6", "63", "9", "1", "2", "35", "23", "0", "0", "0", "0", "0", "0", "1", "4", "1", "5", "0", "0", "1", "6", "1", "3"], ["1", "5", "25", "0", "1", "3", "50", "9", "0", "0", "0", "0", "0", "0", "1", "5", "0", "1", "0", "0", "1", "2", "0", "2"], ["2", "4", "28", "18", "2", "3", "89", "1", "0", "0", "0", "0", "0", "0", "2", "6", "0", "1", "0", "0", "2", "1", "0", "4"], ["1", "1", "3", "1", "1", "3", "19", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "18", "18", "1", "1", "13", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "9"], ["1", "2", "20", "3", "3", "6", "239", "170", "0", "0", "0", "0", "1", "0", "2", "24", "15", "-6", "0", "0", "1", "1", "0", "2"], ["1", "2", "12", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "13", "15", "41", "41", "0", "0", "0", "0", "0", "0", "13", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "35", "1", "1", "1", "91", "0", "0", "0", "0", "0", "0", "0", "1", "13", "0", "0", "0", "0", "1", "2", "0", "2"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["7", "15", "17", "15", "17", "33", "84", "81", "0", "0", "0", "0", "0", "0", "17", "6", "4", "0", "0", "0", "7", "1", "0", "3"], ["1", "1", "9", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "18", "5", "1", "2", "8", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "12", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "22", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "12", "1", "1", "3", "43", "4", "0", "0", "0", "0", "0", "0", "1", "4", "0", "1", "0", "0", "1", "2", "0", "1"], ["1", "4", "8", "7", "1", "2", "29", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "-1", "0", "0", "1", "2", "2", "1"], ["2", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["1", "5", "42", "0", "1", "2", "49", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "2", "0", "2"], ["3", "71", "430", "386", "1", "1", "10", "0", "2", "5", "15", "12", "0", "0", "1", "1", "0", "0", "0", "0", "3", "3", "4", "57"], ["2", "6", "25", "8", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "2", "1", "0", "4"], ["1", "2", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "17", "6", "0", "0", "0", "0", "0", "0", "1", "3", "0", "-1", "0", "0", "0", "0", "0", "0"], ["8", "32", "129", "100", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "44"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "1", "2", "34", "0", "1", "1", "1", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "3", "5", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["8", "10", "91", "24", "1", "3", "34", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "8", "5", "0", "3"], ["4", "4", "1481", "1478", "2", "2", "10", "3", "2", "2", "2", "2", "0", "0", "2", "1", "0", "0", "0", "0", "4", "0", "0", "60"], ["2", "8", "17", "17", "2", "5", "38", "6", "0", "0", "0", "0", "0", "0", "2", "4", "2", "1", "0", "0", "2", "0", "0", "5"], ["0", "0", "0", "0", "1", "1", "70", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "-1", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "6", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "7", "0", "1", "2", "13", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["3", "8", "23", "5", "1", "1", "15", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "3", "0", "0", "5"], ["1", "2", "16", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["3", "51", "211", "144", "1", "1", "12", "2", "1", "2", "13", "5", "0", "0", "1", "2", "1", "0", "0", "0", "3", "0", "0", "33"], ["1", "5", "14", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "7"], ["6", "14", "123", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "24", "0", "0"], ["0", "0", "0", "0", "1", "2", "50", "0", "0", "0", "0", "0", "0", "0", "1", "7", "0", "-1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}