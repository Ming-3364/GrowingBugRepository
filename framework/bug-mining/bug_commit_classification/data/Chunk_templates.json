{"number": ["d8ed7ce120bbbbafd5feb929482f68e193ce295a", "3fa10c76e37d57eeb169dab88ac325e1805e971d", "be5e7731d57477d904ec4880ba7572a564ed7153", "e474768521c70df9ee1b615a1ee9a9bf9785696d", "66736d1e686b95e6a9f4fe88c9465931470f33a1", "3e0128cf720f9ef1f6dd9f64cd3f380beda1bd3d", "c2f8f4996daea054b7f399ce9f8438566c88e0ea", "1a5695746c0cd26a45141ddc6e0a57c442f31876", "58936db587a246bfa68acf7d449658e4675de72f", "aa87674f8335a99d1d6c686bc590b32c9c083963", "b19a313fc4751759e790ab3919134d302d0bdfa0", "8cf433de108d2bb03f668bd1799640f6cb95573c", "457f5e6947bde49e8ac727ac5568f06f8ebaa11b", "388361f12d4fd878e8cf06fd9a77935f7f8eec43", "1e5535e5b4bcef3af71e88c418679c43b9b9dbc6", "8f5d36202a621d3f11ab42b07a69cf7e28f879c6", "12043506d3326a066336b2b68a7d63f2d879ab6e", "cdf9b8d4b7cf2d44958f52af546b8d106310cadd", "797761cab9664002f1668e607113a2daeb1676bd", "bec2c20c473998658eede865017070b9d074453e", "897cd41f5852cab0f4c7f7ae667f7ef669fca369", "5e3226b00dcb8ba4385e3dfb140f58c5aadff8bb", "bd80aed0a6022d9f5d1de5119db0ad6de5cbe86b", "b81b6bffe3877458002eb073bddf4934cabdbc88", "8deabe48003532a2d39419e16ad0bf3e882a720f", "62b96499dcfea4d68779287fc72d11f301e4afd2", "7cd8eabbf219babb53b82e8de27f062d949dd2fa", "0f1ae51c6acac09dd8643ebfb24e87d903d3afdf", "02fe6fe43614a5eb2622c6fc578b6ac86de8af1c", "1a5f5541b82d5e4b0dac8cf6640182509ed2c9d6", "97ab99f32427d4b4509c01d39b4af62c2cb45cb0", "b485639de88d28115a5cbf3239ef2075ff1eda1c", "fd14c770f1ad8429b6de310f3f2418fd2bda6c47", "27324d387ee5d2d636a2b2cccda81f730e882e84", "35bad0cb712aa85af60aad9e7e3c660d8f71fc4a", "25f2c00885c2db4b8865d87539c1e697a0a559a4", "7e158cc3ac7e2ae3d2dc53a20ef4e1f63c2a3943", "c6c6e4fac00a659ec73c118d49d0c0260f36b7e0", "743bbaf0cf0a67fcaf4598388b4c7a0a5cd9ab95", "542861b0f7fb24a14d09a60691564c76cdcfb32a", "995ac830d86f2e4af7f5e98a49e5b9814ace12d4", "6fdcfa0bf1b0f73ebfb02e677fe2fab4076d5866", "0f6c243b646e99835beb9e97ebada580e8586864", "f433248c85f502e4e5c4f1807a74778f5b05cd6d", "06f211023fdca9ee75e55575b466088e08f86444", "a447dd7a3fdebcc6c3c9afc007f9a14aff9b9c9f"], "father_version": ["9fc3d8d904b872d85ac5fbe050dff312287cf9bf", "be5e7731d57477d904ec4880ba7572a564ed7153", "b9de571d456968ebf02037a0cc2bd4f7a95b04cd", "14790f7dc6b9644ba4354f587c4c5e7527b2ddc8", "f61ff5c6fbb9487fa689d9a39454989d765ae830", "e23629e62a5d6478a8bed8e3c882d51ad374c60b", "b34586bdf10bc4f84ab4a1984ea3e998b735fa70", "df395682b8b80dbfa99fc0fca65cfcdfeddb0e75", "45c9f1309dba646e2497ea5a2550b2a76e26e06e", "25af6c3cb12e0f87565dec44f224fa4e6ca4f281", "025c872f346893e367c2dbd5eaa5e42b7c687fa5", "b71fee279b6e75f11cf437039ce69f6498d8e05d", "388361f12d4fd878e8cf06fd9a77935f7f8eec43", "b7c1a21b7f4f8b92b34c813a80c49d1bf3dc762c", "23cfaf9511a6aeee59a592cc5b62fb3cf24b7c88", "12043506d3326a066336b2b68a7d63f2d879ab6e", "cdf9b8d4b7cf2d44958f52af546b8d106310cadd", "d136d4af798366b693aad669001756c026037de2", "a36c1b07338cca35994eb77b8c9f674116fcd524", "897cd41f5852cab0f4c7f7ae667f7ef669fca369", "905396b7e7c749a2e835e09f61001b3c4fe363b4", "4b627448994fb17d050793f044301c41557dc815", "b81b6bffe3877458002eb073bddf4934cabdbc88", "8deabe48003532a2d39419e16ad0bf3e882a720f", "62b96499dcfea4d68779287fc72d11f301e4afd2", "5dc489fa3be71c44ef4ce2b770b499c88efa7b43", "0f1ae51c6acac09dd8643ebfb24e87d903d3afdf", "98016bdf29b66ce544d59aa486e1debf9dd94b73", "06da0e5f3d5c09277e0de8c6156218b0df83a4a4", "ed350fb152a3ba814e8036ffa12b014edbd5849b", "6182b4a21608e0a96a8e820da0c2f8663b18bdfa", "fd14c770f1ad8429b6de310f3f2418fd2bda6c47", "27324d387ee5d2d636a2b2cccda81f730e882e84", "2933597475aadc6877a1f0c09b3bb8d84beea41f", "4db3c6603c5da41977e2e4ad9a272c741d77f1af", "7e158cc3ac7e2ae3d2dc53a20ef4e1f63c2a3943", "37acf9b33849f53550fa397fae68737ed75c1924", "8a88e70ce1ded4823e7d13ceb5a5ba2d388951bf", "95b55a9587be21f23dc866044f3e978b8cae1227", "995ac830d86f2e4af7f5e98a49e5b9814ace12d4", "6fdcfa0bf1b0f73ebfb02e677fe2fab4076d5866", "74ff49a98f6709098391e61ce8a411bca3358534", "f433248c85f502e4e5c4f1807a74778f5b05cd6d", "fa3e13f85a99b4b152a8a17ec3508f8957cb1352", "62261921177b56e857839343833223e1c6837e50", "00625b82cd48633163b6079329f58eb048f801bf"], "commit": ["Fix bug in conditional expression lexer. Switch to MIT license.", "fix for issue #32 Android Bean Getter NullPointerException", "Make split and join filters output null with null input.  Don't mistake in-backtick default for outer default.", "Fix minor issue in macro/exec parser", "Fixes template parsing bug in if conditions with unmatched parens", "Fixed (classpath) path separator on Windows", "Fixed classpath theme directory initialization.", "Fixed comment.", "Fixes multi-threaded snippet cache bug.", "Fixes bugs in bean boxing, some performance enhancements.", "Fixes bugs: looping over wrapped map, looping over POJO with null values", "Now treating all objects as beans if they have no public attributes. Fixes bug with file handles getting left open. Bumps version to 2.6", "fixes bug in filters", "Alternate template loader with non-standard file extension was not forming resource name correctly.  Fixed.", "Fixes outstanding bugs with new syntax.", "Now able to render directly to a PrintStream (such as System.out) Filters now legal inside a backtick expansion. Fixed bug with backtick tag resolution. Bumped version to 2.3.2 Loop tag option values no longer require quotes. Renamed counter_tag loop option to counter and added optional params counter=$tag[,offset[,step]]. eg {.loop in $list as $x counter=$i,1} Counter options just affect $i values - use $list|slice(a:b:step) to subset the actual list being looped over. Fixed bug in template parser, wasn't catching new-style literal blocks.", "Better resolution of tag pointers in exec contexts. Fixed issue with get filter on inline tables.", "Registering a user filter was blocking access to all stock filters.  Fixed. Bumped version to 2.3.1", "InlineTable no longer barfs on table rows of incorrect length. Fixed bugs with whitespace handling. Smart removal of lines containing only opening or closing block tags now functioning more like one would expect.", "addData(smartObj,altPrefix) was broken.  Fixed by extending ObjectDataMap to handle boxing DataCapsule objects.", "Primitive wrappers like Double were causing bugs.  Now detecting and handling correctly.  Updated tests to escape unicode characters so source files do not need to be encoding-dependent.", "Fixed some whitespace smart-trim issues.", "backtick handler wasn't working with new tag syntax. fixed.", "Added new {$obj|type} filter, returns STRING LIST OBJECT CHUNK Added options to log errors to stderr, suppress errors from appearing in rendered output.  Use theme.setErrorHandling(...) Loop can now loop in assoc. array with syntax {$loop in $array as $key:$val} Loop can now resolve references like $x = {$y}\" Can now access assoc. array directly in loop/chunk", "Fixed some minor localization bugs.", "comments were getting stripped from inside literals, fixed. ChunkLocale now tries harder to find locale files. Exec with bad template reference causing crash, fixed. Added tests for coverage of fixed bugs.", "Added loop option first_last=true\" to create $is_first and $is_last flags in case first & last require special handling. Added loop option counter_tag=\"$i\" to allow caller to select name of counter tag. Fixed bug where compiled loop did not reset row tags between runs. Unclosed loop tag could trigger NullPointerException engine crash. Fixed. All slashes in filter args were being (mis)identified as regex delims.  Fixed. Two translation tokens in a row could cause template parse bug. fixed. Stripped out the long-unsupported methods for choosing your own tag boundary characters. The join and get filters now recognize that inline tables can be lists (operates on first column of data). Updated braced localization tokens and the selected/checked filter to recognize/accept new dollar-sign $tag syntax.\"", "Fixed bug where tag default is another tag/cmd. Now allowing escapes in quoted comparison values. Now accepting single-quoted comparison values. Now handling unterminated \\uXXXX unicode escapes.", "bad json (array instead of object) was crashing the engine, fixed. missing json-smart jar will still crash the engine but, added helpful error message so users don't go cross-eyed trying to decipher the stack trace.", "new {$tag} and {.cmd} syntax failing for {.literal}{/literal} blocks and calc args. fixed.", "{^loop in ~a as ~x} broken.  fixed.", "added convenient {~0|alternate(even_output,odd_output)} filter and corresponding tests. fixed npe in loop with divider and no backing theme. if-tag conditionals now handling nested parens better.", "was inadvertently advancing cursor beyond first item when column labels were requested ahead of data. fixed.", "array of datacapsules was polymorphically alike but required individual readers for each record.  DataCapsuleTable was incorrectly assuming same reader would be fine for all records. fixed.", "compiled loop object was keeping pointer to old data. fixed.", "fixed onmatch/nomatch issues with new filter-arg pre-parser.", "fixed a bug in new generic parseArgs impl. for filters.  got selected filter working again.", "Fixed some bugs in new optimized Macro implementation.  Snippet.toString() now tries harder to restore original pre-slice-and-dice template.", "Major new feature: localization.  Mark all translate-able strings with &[Translate Me] and set the locale of your chunk to get locale-specific output. Fixed some long-standing encoding bugs.  UTF-8 encoded templates are now assumed (rather than leaving it up to the system default encoding).  Theme now supports setting the template encoding explicitly for those crazy cats that really want to have iso-8859-1 encoded templates (or whatever else).", "Unterminated literal causing null pointer exception. Fixed.", "New {/literal} block-end syntax not being detected properly in template pre-processing stage. Fixed.", "Made {^literal} {/literal} syntax more consistent with other block tags.  Cryptic {^^} {^} syntax still supported for back-compat. Fixed bug in handling of uncapped literal blocks.", "default extension is now .chtml fixed glaring bug in if block tests referring to tags defined in parent chunks moved to more familiar ~x.whatever syntax for prefixed tags. better error messaging on mismatched block tags.", "* If cond tag comparisons were failing when tag value resided in ancestor stack.  Fixed.", "* now allowing prettier include syntax {^include abc#xyz} * added indent(x) filter, optional 2nd arg is indent char (default is a space). * if tag value was another chunk, filters were not getting applied. fixed.", "fixed a bug related to supporting in-jar templates.  chunk now requires your jarred template to be placed in the jar in a folder named themes.\"\""], "metric": [["3", "5", "9", "3", "1", "1", "56", "0", "3", "5", "12", "4", "0", "0", "1", "2", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "4", "66", "5", "2", "3", "105", "0", "1", "2", "29", "29", "0", "0", "2", "11", "0", "1", "0", "0", "3", "3", "0", "4"], ["1", "2", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "9", "0", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "6", "17", "6", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "2", "1", "3"], ["2", "4", "6", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "4", "4", "4", "0", "0", "0", "0", "2", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["7", "35", "235", "127", "2", "4", "34", "1", "3", "3", "7", "2", "0", "0", "2", "2", "0", "0", "0", "0", "7", "8", "0", "15"], ["3", "5", "10", "7", "3", "8", "80", "5", "1", "1", "4", "0", "0", "0", "3", "6", "0", "2", "0", "0", "3", "0", "0", "3"], ["3", "8", "23", "7", "2", "7", "93", "5", "2", "2", "5", "5", "0", "0", "2", "4", "0", "3", "0", "0", "3", "1", "0", "4"], ["2", "4", "19", "2", "1", "1", "9", "0", "1", "1", "15", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "2", "0", "2"], ["3", "8", "46", "38", "1", "2", "25", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "3", "1", "0", "8"], ["14", "31", "1100", "1160", "2", "8", "34", "7", "1", "2", "43", "2", "0", "0", "2", "3", "0", "6", "0", "0", "14", "0", "1", "73"], ["4", "12", "91", "33", "3", "4", "61", "1", "4", "6", "60", "13", "0", "0", "3", "5", "0", "1", "0", "0", "4", "0", "0", "7"], ["2", "3", "28", "3", "1", "2", "9", "1", "1", "3", "28", "4", "0", "0", "1", "1", "0", "1", "0", "0", "2", "1", "0", "2"], ["3", "4", "8", "48", "1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "1", "2", "0", "4", "1"], ["5", "41", "106", "96", "1", "1", "27", "1", "3", "5", "21", "12", "0", "0", "1", "2", "0", "1", "0", "0", "5", "0", "0", "17"], ["2", "5", "43", "15", "1", "2", "119", "0", "0", "0", "0", "0", "0", "0", "1", "13", "0", "0", "0", "0", "2", "1", "0", "2"], ["2", "7", "29", "6", "2", "9", "57", "6", "0", "0", "0", "0", "0", "0", "2", "2", "0", "4", "0", "0", "2", "2", "0", "2"], ["13", "47", "203", "78", "2", "2", "44", "0", "3", "4", "45", "0", "0", "0", "2", "4", "0", "0", "1", "0", "12", "10", "2", "11"], ["1", "1", "2", "2", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["20", "75", "649", "261", "4", "9", "114", "5", "1", "1", "91", "0", "0", "0", "4", "8", "0", "1", "3", "0", "17", "42", "5", "22"], ["5", "8", "40", "16", "1", "1", "23", "0", "1", "1", "2", "2", "0", "0", "1", "1", "0", "0", "0", "0", "5", "2", "0", "5"], ["4", "8", "35", "22", "2", "2", "11", "2", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "4", "0", "0", "6"], ["9", "47", "194", "166", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "9", "7", "9", "18"], ["3", "5", "19", "5", "2", "2", "42", "0", "0", "0", "0", "0", "0", "0", "2", "4", "0", "0", "0", "0", "3", "1", "0", "3"], ["1", "2", "29", "4", "1", "1", "18", "0", "1", "1", "23", "1", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "3", "13", "5", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "9", "52", "27", "2", "3", "24", "1", "0", "0", "0", "0", "0", "0", "2", "3", "1", "0", "1", "0", "3", "3", "1", "5"], ["1", "1", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "20", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4"], ["1", "2", "5", "1", "1", "1", "21", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "3", "5", "5", "1", "1", "38", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "2", "0", "0", "3"], ["4", "8", "36", "15", "2", "2", "39", "0", "1", "1", "11", "1", "0", "0", "2", "4", "0", "0", "0", "0", "4", "1", "0", "5"], ["7", "26", "1831", "14", "1", "1", "119", "0", "1", "1", "2", "0", "1", "0", "0", "12", "0", "0", "3", "0", "4", "91", "1", "-2"], ["1", "3", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "17", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "14", "2", "1", "1", "36", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "2", "0", "0", "2"], ["6", "10", "28", "16", "1", "2", "16", "1", "2", "2", "18", "1", "0", "0", "1", "1", "0", "1", "0", "0", "6", "0", "0", "7"], ["1", "3", "3", "6", "1", "1", "16", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "6", "91", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "0", "3"], ["2", "11", "104", "31", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "4", "0", "6"]]}