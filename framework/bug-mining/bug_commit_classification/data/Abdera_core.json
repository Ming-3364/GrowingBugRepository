{"number": ["8090fe09b0d0426e365325887a1aa0981816fb1d", "6c5eced6ee2428cd505fa07d69f4506644a7d387", "2394792c697a2cbb2ab55f4faf1e70b1959163aa", "e52ffe277d28dbd16f267c4a2f3e624faf178c47", "c43e39de75c4881d86f5e3e0f0ffa1123942d1cb", "aa21321cf74e71be90765ab76e6006ec02f60f1d", "ca7a4c653b289be40f65fece060413b3e77c98f4", "8b50372c43497bb79c3bfe8d76bdd874694bad0e", "b1dd8d4ffd1ffa80630fb04087640de3891ac0be", "b42e0cf1a78ae877b403e757c4d80e41395d732b", "c419255ab986e43f0d8b69d3f872d78d9388e8c9", "738d959c245340723289b3a2d614bb6a1f637c49", "1e510f23a3767381609d824580e78dcaeb32862c", "4acadcfc118a98b1b1503e66b9510dae96ce9a98", "690b176da1d7a214e51b5aeb79057dcdf8058480", "7f0c51bec3d1309048cb20ca9d38c111a82a2918", "f9f2c83de308410b6bdc50773e377b9b4a5e9f82", "48df3ea4e452983119ea63c87596b5efb6e815b1", "b0efb7119a8c5407f8a8da396a50a4842e1c4e88", "6dc510fbed8662129174f5cb35a86a090a877a1f", "03cf598c3dc4667ac190df6dcc134e4ef0dcbe25", "ba5e5a0648869715a523ff8bc35cc36ff521c457", "fed8120ae16921a934f0624f9fdd67cbfb8936b1", "06c507f6e8d169270073553843d8d8401a3e59d7", "ac4028a843dff60c5a8e16ab3a023ac27ca3329f", "e80cc411750edc3fe2d9c90060bacdeb3e596de0", "9c0fbce6c54e436324bf10c57715f362069e96f2", "f811648cb3df6e69ee7809c8f95c3f8d49a5d29d", "309e8898929fb3d6c7c310723af3d698b2a49bbb", "7024ddc54e62a1d4c9db71ac638223ea5ee6e5b8", "cbfc425ac8df1b1278ae0d97c34340a4ff1e2603", "fc63ef1701566f769498266a9f2df3ed72000d7d", "e575c8e1613c729f1a7ecc5ca3704a9427470387", "dd7bf8207d91fd48382947d2713537ee1e5aca96", "0067f52e8dd7e8c14f5cdcee9dface826f47c3ee", "90bf0c928d81ee924da7e221d32016623aa5247b", "4966403f4db453d49a42cadfd0f76503691da024", "8287034b79b72709451a4b2a586ee2c60f5f56e9", "0a8d15e9234a831a70cacf39dd4ae3489cb2688c", "45c99404ea1bd0c353ed001d6d4bb1cadfdf64ab", "3313fe81312c2b044c13c868708b5a2ec57372cb", "9af080e52fe6b2c8e28dbf020c9f894b047da1d5", "84a4f7626522b0a6cb5e33d3a568bb6b83d618a8", "2d0e0de44876c7f3cc9129a89a7d650596b57004", "f381f16ea2a6f1d1ab6e39be4552bb2530fdf45f", "59a597489310a7fea9bdf897e640d6d28dad7fda", "a2397807182abcc7455d0340fb6c410ca24f7784", "f98aad3a94d5987d8ddb21a8eb53b1ed00da59c9", "99354c481b1aecb18d18390c38ea4295ef845116", "e901fa68afde4250a1777332a38121a8a2f0391d", "35834485dd1901d1cb6412be83192dc0c710079e", "505aaeb532cf2cbe5e953c49d744d0d9e741c295", "1a715e311dc6bb4650d40b9ebb0b9d55d8ca7efb", "d0601fe39c83aacb64936e4aac03f1727cce3932", "baadf142dbcb38e0c0e5c88c3dd4ee9356face52", "a850ec37b2987f0f9e45a9b51ac7df9bdceebe13", "54ee7302574cda7b3cba59ba8a8844a81e50160a", "6eccc6d7f9b31cc3596e7f90270d74bf5de4aa43", "f14e34ebc0dceb6283097b948fbf6783efcdb911", "96f449bb130baf00f2f8b80157680104999d0322", "970691ed8e0e00b5e5401105b5d50d1bdd2d3c30", "daf2dce55a995f03a1320a9dadb6f70bd58d4d53", "da13b1c62522a7f47cd0ccadd7b17496114759ba", "dd482bea5b635ea6068c340d53d6a427dfbf2704", "a9abe285e4fdbf40ea258e658d23f90657391e10", "d458baa489121cd12dab0239ddde20fd219b3c25", "24c82031e7e8b04ddf46d299457431b70dab86f6", "30d9cb459b5ff36ff283a9af4da77df52b3d9856", "b6a675c189d034c0a468ba6bea8cb93bb96eb4ba", "0b3e8e0002415c0f4bc82ddf166f2fc3bb109468", "8ea511fa44defc14e169735cb2bb0008f2a62f22", "8cc4f54298b10494c0fc1cd374df30d2fc29c023", "7abc810a426fb12914feb6794eeaae2546cae195", "056b7d2f65c76d5808194fdf024de7678c742178", "a3fc6d0c5f5c2bd22bf699b7d05d361626847231", "dba1b0b346b1006fe4b6a79aa604319a0516962b", "48f80316bb0f8f5c24c449f3e18d7dc7ea7c0dbe", "e1593fd5c07a01ee2bddd70cecc53c1b8f69761b", "17b70aefa867ae6318d1b478761886497234c296", "efeab20c2e3c34fa841f5693018ee3e48229e3d4", "9e8196ed97a711d4753d402817999393a8aa7a3d", "f976ac8ae41cb029ee1b871eefdef3bfae2f0b02", "ee64192acb3ce8c7d7d82d6f55f7fe942c985f75", "b9e9d8bf95226c6a3abfa6f761621c03403ea0bc", "facb6696bd141f48eade3e7d2ef089ad56f4e0c7", "14dc6cdce6ba1e167811ea71a5d3bd5e31981159", "1fb7c50e08b1ed93c6bb8749722cf955544ed830", "e1b75ad897cce58f22e3eb4ceb0d7f3da8467c6d", "d3ab54cf963a44e8c545f3eab902f99498f50cd0", "118435dd1a21d82abd335de42be04546d0308b12", "5fabd3c67681f517a0ef2f91acb5a83412146f6b", "bebef6ee34e27e041440c830d237a404c8634a3c", "4c2d4100c6125c0cecef81a91ed79f81411461ee", "f15692ad412242944b887ed11e19d7a3033baf11", "15f5ebfff570c6a5e6e84e60a9e90e8f8e6b689a", "9504208aa29cce0d55634df2e9b15dcb0a116e05", "40e9036f8b9ac6a6ff097d920a0315f99f6b5964", "7e3f7fa11a0012f377375ebf86aa40ae161b541a", "a5aa8d23955e8c93cdbaac0c24efd2bf40f6df41", "02e1b42e0a1bd94ae092787cc73d7cd374cc8223", "71c6a0d766c08e86397803c6314c145f636ddabe", "9e8fc9277b1372d4604aef0548a2c60cadbac26b", "a502706f459b726a69e2f5d9cbdc7f2fbcd3a79a", "2e40f8d6cb9fc155636ce435da34351dd88493b2", "b156f05b9cce9e60f328394fba327c60b20a0bd4", "f9af41c30caacc022d76358ab85a6116aab936b6", "478d68239fb2d62ebe68f2d39cd7eccbb390b7b4", "b6d3d336565d1682c0e7a6f01e33d7c1098e0e82", "68c1c5b781d25d81c7f6fcc2ae3ea161697d2f8c", "250e9ecf5636a651c4b6983a2af03894d3d5befa", "84ede74125f510570ebe14109af0ea043902b9b2", "09113e69e23330116e7c3465c84cad780bd3c489", "c0a43d3f10799a143b9fdae09f2a90bd1c2c4574", "0e98b73ef402c6fe558d65ec2ca08a2591d0ba23", "cc7d9e6eeb7b9ca174596fab0fe8e6beed605346", "c02e260181176bb01075c5cee28a0ff73e03e891", "c958b5cd546e9f03b6ec236151a7d96ab7e8fd6e", "d41482574585479862a643f9fc0d7e27b30fd682", "ea279a6055ca461c455eb47b82f61b0f16035b4c", "46b47241c747fea04aac1148f832dbb1a71f9be9", "a9c800217482a748c71ce84e6882b9d276ad6a8f", "3d8efd105c4b183fd8d606e8ee4d59309b0e6550", "3dbe7f7e70041832700e3325f32c5f3b00f9cfe9", "8940ea9f4e3302690fb4429b3a2b7e9ff83d8f5b", "bcd60772b0d7bfde24b6d3fca0fd8dcf2ed6c2c9", "4100a2e465180a0b25423e5b13f55a687ca08ce6", "4fa1a9f4fc860aacc9cfba31e0c462b6f39fc574", "c7a01bd4b3f82ea565646bf4b465d059086a43d5", "7fddd5e43c1276ff4482ce0cc6b539ae71233963", "42f864be341a0b8f862b0cf5c8500fc0a293b452", "23b65e53349049b4b976201427ae7fadcd19d59d", "c72d47a1b794120ca75cff60470bf64fb98f9c94", "fd8030cf6a594a9988442d655dd20f1fa3353e7a", "889369c800a23c1ca11d4367f4df71f23e6806d5", "925690a9e439713d9cd65da236188681cdafa474", "1ceae316ef35bca33797fc33e8939ea4b2cf12e2", "e362380f436e30b56430f11be6a1ea548a034346", "5819c0e22d048c76618e67a14b2e0e3f0d3554c9", "23edf4d9dced39d71cc1aa9de6b82e75f9b07432", "31f6fc499aef338f9e0de6ab65c7a8f9261d9601", "2287ec3f03eb0de3a5a3e2f65da468058b8b354d", "d6305769251c812c9f5beee130fefb781319aa50", "fdb3cc9ee79deb3b313a66b4ad0a45ce55b1dc8b", "5131c001fa7400f86d79eb9524e35f6c356be8a8", "70fc853bc4c2bdbe33257c0cd9f7ff44c694f80f", "b4a5ca4e8b71b6bd67711e2a20a3655622e49a75", "82c7bdf504773ecf30d3e2d1f96863a25f2ea34e", "fcbcc4d80afa2d82e0572a64688634af3c527fc5", "92aaf7a61e3af7cdddcc91eaed28818783630c32", "5c99936c91d2bb952a5a49cfdf0585836c8e1e8b", "86986875cb16a464c6b9effeb9f19bd991c1a23c", "bd917ff21ccd001c20aa621fdf5bfe79fbbe4e43", "945768fec963f75eede9ff340e0aa0660c11860a", "0da5bb061e6feff81b4be5a800722ac6a77ff989", "927e45529a6eb23ca372c57917fe6ce289370e28", "1a118df36a46c3277525d6c2607f2e3f3c515c25", "f90c6e3dd273ae84ef8cefa10509e2b7d6d25847", "9c1387145b6a30d9b98b6211083de6b7a360b55d", "13da1e709e39076888def40232facb1b71aaa4d2", "abbf0bae82e208a51585852babf9333a3b019917", "909b2f6d8bf3f94cfbb138c6ada9beb2fe5c6aec", "614a51879c85c1c2b0ceddc233d8d7ddec9eb5b2", "e40eef12abf1db9195a4edb9ab1d82f9f1dacaa9", "46d2dab805710c81161593b4db4eeb395622220c", "043ad60a3e926fa71f1a0e40c60dad0f66a21850", "e4f862dc4afeb74d1d229a4af21743256acf707d", "bed01133f9f36fdbe9358596ce4317e5f9c63052", "593a90d90648f936f0cdb0cee775f08bc03460c4", "8c1fb4c64640bd45e6f1f75617e60c7ff25f438d", "349e6ee112346013c03c754efccdae5ecdf787ae", "34e50fb6ec412193200c0fa6d014f5114da450a4", "24025a897b183a3a2dcb3d6bc748b64dcbb15dcf", "c4d6c625d7afd0c88e8acffb482554df67b8497b", "f1175461f872012b5134e4dc2374d65ed920a205", "1d1d2518633728ec171d1bb9cd4a09365482e48a", "3c52d23c440751800f5095b73dca51d884ed90b9", "802f453887098d9d590afd32848dece39f4d3ef7", "284f305fcc274884ba466a206338a8971689fa37", "2e8401ef947001e611abbd6fd138bba5f0931d9d", "294ad676c85b73dbc2b3193cccb8c79987cc6e49", "d94fb42656028031715be82f2b30d90509ef117f", "6a38e83ad0fe4482c58d2b71d3eafc255a4e3c72", "b9a8049697f47164b8be23089bd40a00314f2922", "358575edf8ef1e4bf2de7fb9216d75788d51d66b", "7f1fc1136590d6a475b6cadeebdc2662a499e446", "f0836a4a33809131dd1ff6506ec3a789635495d2", "477ae6cb0c5c6546b66ea5cb2dbf02f8fce10f71", "59120e4fe03c0ec305456b0fa33e74a55b464918", "8a71e9b1850133781d437eb8329a33b70b6bd1db", "010b6b33b1d4a48b719cce559a89e55ff86b9c64", "f7e0e12622869a1937a2c74f504215e71a57be6d", "0e95c02092b627d782d35f974ccc44b50fbc2cb0", "7e8d71a3e4e8f77b146022af7fa38ef96bb2e0cf", "104c4d614e9cb46f50ea1d6e8ca20f738ead76a3", "8bee1cd05443b71675b32cda7b12c2c4c00fdf3a", "522f3a1935d5b3e5d0c8cdb6a96e1b3b9a2b5542", "7666f6831b2e0e3f445513679f572231b44fcaf6", "1c47699ecad7edcede45ab73e0eec5a8a5c3c63c", "491f2fe41a7771811ac95cc8adbc28f589df0c09", "da9edce4862b83cb3f13707c74b314610b628d3a", "973793f0b260c889896457a9e741c644ec3f2fce", "d94c0455ec8f1e8c746be76594a25fb66bcb2b55", "d8b43715781f48aac2596610b88be69f19ca2913", "e9b8cea97bd0378f9d4f6fe5a141dfe3e1125d89", "3f387860c34253a7afe2a29705e1ce9bd06ec37b", "582a9eb9bac69a6deb002ed3d96d8c12e644aba9", "ca1b5c50f56b46018da45cbd07f07da63e7be4fa", "ac1b69a0a99d7e05eb0472de727153cb67c94c5f", "584a71bd0d0d1ec28fff374f732ae0e542a860d5", "631ba3fda9f24941fa746defb94b1a2f78ef300f", "aceb88cc93bafd4e5f149153fcba220854c1c18e", "e5e95f5432127f1347737c1904f13df92ae1a712", "a3ab26508b410e9108a468bb1a1a44bac0681acd", "3b4cb505bfdb9045802bfa2f6c7dd5e9da7f160b", "b412a723e74607c576476ed18c319b4d912ede35", "1fdf5ce392ed0b2887c42477305c5ca06a7ee49e", "9f81138d4f23dc55b94c54e899a74ebd4a9a4ec2", "c41ac7331b11b982790fcbe59758d61faa1fe35a", "ca9fe63344476cb56ca1ea04bc6d88124eb0bf38", "6fee28098de61ae1b350eb03f7575f4e91d548cf", "fc047f90e8ce37ee0992ec787331d62c22d70bb2", "f17c47fb99e56d966b40d632ebd30b48e2bbf1ff", "96dd7348b1aa466a492a6a0efaa05f012e2f26b7", "afe5a8e8728dc44966f7e50f97cb3ea78133ebda", "9c6941c91fe6cf7e125cfee73b7fe1b1015dc6ca", "2856c54d318b0edd1ed81da9062659feb3a26541", "24345ad18ee1da2e592c5dd4453c88f9d5057313", "1a7691009e2a108fcb3539212631dde70e598caa", "ee7c6b6baa467b8c91137fcc3185720e720da492", "e6887117afbe6cd33b0895f805e88c011c03cc22", "54d25560ff53502df9c052239d1d737f7b8f9594", "4d6fd1cf8993568e22b4920bf2a4071c19fc5e85", "70027c314190f227e6043b23e9a73d10f91d5a35", "b5a60dd947bbe93b5392c881a669b0d8c51e914e", "904d740fc34794bbf63f459f78b7964c773f8ad3", "81cc11d628a18a77f3671f306e4deaf421c28888", "1c4448e656609ea68b0f2c18a6b170141dec01a5", "9a3d213ab0d000429384263810742dd0eb24fc24", "b109f796a476479a75492ab5133c0fc970b31cc9", "1c059639a22fc3bdf9dd7e8d5dbbc7b416076189", "795811913549e9ac7e8525a1d99a505fd565ff2b", "e7a1d7565831ac7b04e39432bc7c54b4d28c09d2", "f02df45c0da15b9100f549be331abab5471dbf58", "3e93ea3bb0123765b820180a4f844a81cde56a4d", "8e8924280f7720e8bcb5521e65ef827eb0459ac5", "00acde5968ac8649d246f7ee59dec14f48ae6bf3", "3f11d6047a0a9b9f4a936de58d722958417b4ff0", "0e729431c6ead522446a1d7be898b47b8d43fc43"], "father_version": ["aea41cd4d54abe438c37fc1eaa33728b98216f72", "8e0086a5d4e9ee8e2270bd06b7fc474580ae4490", "e52ffe277d28dbd16f267c4a2f3e624faf178c47", "c43e39de75c4881d86f5e3e0f0ffa1123942d1cb", "aa32b52432f8451b4523fcc9afb3b012ec084709", "a245adaa85204178bd29d63da8f85d82db3484bf", "8b50372c43497bb79c3bfe8d76bdd874694bad0e", "555282c30ab00d3b1f49cb24f2d98076a82a7cad", "881cd4960e35ca69f6c8ec2608cea71b8c30e183", "f390bba23c8e5a935fd866a278548bd7c0204737", "06b5b2480bf2c01ed0410a2b31576df8371dcb06", "66fe5f576394c3d3350670a7ac093c33316a32c0", "fb2f0eaf55ed9d9db7916f26885224f7b17ea743", "a147e725d74761812f1a1432d931509721c4f593", "7f0c51bec3d1309048cb20ca9d38c111a82a2918", "7243df7feb73374e8509fa2882021976e6a84b5b", "c59215d5ba4f13eefed82f86a75c53f37194b509", "80d019ca552bc49b8bae2367f318a10ffc8fd65c", "de576c6073f76b002d974e2eb9c7833c1591a3f5", "03cf598c3dc4667ac190df6dcc134e4ef0dcbe25", "15c791a5a93abf2b042f236e034844e6f28dbc37", "fed8120ae16921a934f0624f9fdd67cbfb8936b1", "06c507f6e8d169270073553843d8d8401a3e59d7", "ac4028a843dff60c5a8e16ab3a023ac27ca3329f", "e80cc411750edc3fe2d9c90060bacdeb3e596de0", "9c0fbce6c54e436324bf10c57715f362069e96f2", "ee2a91c054c5beed596de505697d191c8048835c", "309e8898929fb3d6c7c310723af3d698b2a49bbb", "63b483484896fb6291c96606b1bf4bf6f84db240", "086baa86fbeecfc140646db16dd966a1259fe37e", "fc63ef1701566f769498266a9f2df3ed72000d7d", "afcac3717e814e8463430cc38c08591b33884dd0", "dd7bf8207d91fd48382947d2713537ee1e5aca96", "0067f52e8dd7e8c14f5cdcee9dface826f47c3ee", "90bf0c928d81ee924da7e221d32016623aa5247b", "4966403f4db453d49a42cadfd0f76503691da024", "8287034b79b72709451a4b2a586ee2c60f5f56e9", "f2ecd433462b00dd9103814d04c3155fe37e16b1", "3f890f8c31b6240c2f6d0eca413a0534e58de58b", "3313fe81312c2b044c13c868708b5a2ec57372cb", "0042585bb51b58f4453aec27f21ed48901e0c5b5", "332f1634ce79805641488a042c928966624ecc64", "9914f76ccb1bde8c691e7eace7296cfdf45949a0", "7a9cf7dbe719e040e7a55cb1987ed641ede1409f", "bff3db5a32f411a9b85eafd957d8e5143dd0573f", "6e31d5b27c4dbc340fe1b3be085a22aff55723ad", "f98aad3a94d5987d8ddb21a8eb53b1ed00da59c9", "3dd964a92a193cd8503fee24d6f08d5f7d426ef7", "6812bd2e0b915662565813402924617e77d6cad4", "6b0a76b00800b31ddc3e3cc4983ffb33d3a62914", "f37f320d131b77221fe78b5e93a1cfa4a1aa4d5b", "865535dc47b350dc1bc756b6abc1b5455aa33c9b", "30a4ddb55422d3e9ebc57d87d810fb711e500057", "4214e03332a5794769a16d7de1cd0ba7837f7b6a", "a850ec37b2987f0f9e45a9b51ac7df9bdceebe13", "3c7fef10f47ce5a2f2cd3e69c75a85e492e17d45", "c6f472ad3b4d97b826dc895979154f53c04bb994", "e5ce9282b7dbfaa9b4fa8f2588414aa65ff48960", "0e2b53fbc7c7fd99e2b4cd85ec38d0e49093f774", "34676b8d1c6079babaf4182f69c846f96ad1b7e3", "b066c560ea135cc83ee7a47e1e8484b37d5abd29", "ec6cc45b1231a7ca263e8c6363e596591a037ffe", "d766823dd298502f4a7a523913c89ebfdbf34df3", "a9abe285e4fdbf40ea258e658d23f90657391e10", "c14770cb93ad7aba53da93a9a54e57fea564070e", "dd267617d4785a91452b564fab73a08626eaff15", "54ee610f5517dde24829caa6cbd3813b9fbbf73c", "f80eb263e0463f82374d6e2dfe7b15a2a46eb285", "4cf160ce4172108d0a0af77d2fd2643687eabd41", "0a93e027fb7a1664c39d7c1a5c199c7363a3937c", "f1eede38e433e0c88cce4f2e51265e18f5ed24b4", "36278e8486607b2de45a99fb0540a2bcc0178adf", "056b7d2f65c76d5808194fdf024de7678c742178", "3bfc910f8c2bf14222d24c6d1ccc92258e4be6b9", "9dc0d741df8d0fb07f17503cef9079420f7ae5c6", "48f80316bb0f8f5c24c449f3e18d7dc7ea7c0dbe", "e1593fd5c07a01ee2bddd70cecc53c1b8f69761b", "12c18398c3c08f47407db7cc576a5f459212a046", "4349b4eae0a1d52740494e62f477539d34008b2f", "7345e8b4cff83cb2f1cc66dd60fc0b4c9df1f5a0", "f976ac8ae41cb029ee1b871eefdef3bfae2f0b02", "3710ea1f9e36689fdcd24265b65b6e1c0e15fae5", "258b6a6c27214a442e5c0b8a5bd3d67ebc47f655", "7c2471d10d9d698a2c3ec16065db4b93e58077f9", "14dc6cdce6ba1e167811ea71a5d3bd5e31981159", "1fb7c50e08b1ed93c6bb8749722cf955544ed830", "915dda575692f8220fad596236a4550a56a422f2", "afc7f96a209d1f9b3a871d114b05c5088e502d02", "404985193bfba5cb44e59d3a4ca9a88f07e0d66a", "5fabd3c67681f517a0ef2f91acb5a83412146f6b", "e246ae40f4b2988760ffd380421ad7aba343cb3d", "8e3647e0010c2e0e37f0926867324d5ffeb0407f", "f15692ad412242944b887ed11e19d7a3033baf11", "12ef98cd9594e88adfc18bfc583562a4c072fb72", "704124a2324eb04d69a9e8b43a8de77347dbfe0f", "40e9036f8b9ac6a6ff097d920a0315f99f6b5964", "7e3f7fa11a0012f377375ebf86aa40ae161b541a", "b0c0c7f251b59f55b0c426979089956654399b52", "b68f2f4f533aaae70ed67b3e9b8e3f87e2a5ea7f", "2a75b38f91b9b557848481ed10b5f3d6d23de711", "d5dac4be20fcd4edc26aff013d4ace28a3e549fd", "3fc45598341cbf88ebe27921ca28ab9cbd3b63bc", "7876160d2d3e7324a1e1a889897d3ee79965ba5b", "a0646336c6608f8bf4f45c10c2737ad921e33699", "f9af41c30caacc022d76358ab85a6116aab936b6", "478d68239fb2d62ebe68f2d39cd7eccbb390b7b4", "b6d3d336565d1682c0e7a6f01e33d7c1098e0e82", "6ed11eb85b087626d5fb071083d5a11af9929332", "250e9ecf5636a651c4b6983a2af03894d3d5befa", "ffa62236c58711778826e6a790901895df7e73ca", "8263407e7d959b4f6c542de7bfc07d7e5087af18", "982f97cdf37c9010f2e5e3f5eb654732be24ea90", "008dcec1a160a9f52e2011ffdc2430c43f7db087", "5a7b7de9437633c75a4ab403939645a1f7d7349a", "219afa8aa2a6acee94be49ebdcb32ae5556d43ef", "fd18b65addf7134514dc0582fb5765eed2fdaecc", "d41482574585479862a643f9fc0d7e27b30fd682", "2654abcbf4da754e58beb26ba0a13a05a4eaba0b", "2619edb663760c5037e5a646bb643c189551253e", "551a38806ed680e8f27ed2a93eb6969d8f5ce973", "a16dd715bb8ec5e52d81d5ada846aa3b5be695d4", "41b5785050f349c1c0c0ce1dedb9358ca905104b", "8940ea9f4e3302690fb4429b3a2b7e9ff83d8f5b", "a1e691dec33d163be770f0dae2bb6962567a1cfc", "4100a2e465180a0b25423e5b13f55a687ca08ce6", "1ffa43119bc255373446c35b0b4bcbada8bc1dc2", "c7a01bd4b3f82ea565646bf4b465d059086a43d5", "6c1b9dc6396308473e6c68385bf6427414cac6fa", "aee0af9ad9f1401e84bf1bfc72f73b9a918cfd93", "08cc4ff16922f1640fb8c05d930fcf70af72b9f9", "9a60c0a8a71fe3a925f26cb3d54f89ee2abd62a2", "99de17f7f200a29e255a1a0b2d339b34e2c89aa3", "889369c800a23c1ca11d4367f4df71f23e6806d5", "3565d5d00b104627f83cc19993049b05fcb982ec", "1ceae316ef35bca33797fc33e8939ea4b2cf12e2", "e362380f436e30b56430f11be6a1ea548a034346", "75fc15be57f3183533ec5477c5b93e8b03489f45", "c1c4a01ea5066c25d32094c73f672a50aef9bf5b", "31f6fc499aef338f9e0de6ab65c7a8f9261d9601", "2287ec3f03eb0de3a5a3e2f65da468058b8b354d", "1c668e0abd3494d83250c834d216d92d69a9471d", "b073834d9eef16080cfe302e4f1792afe980c1bd", "5131c001fa7400f86d79eb9524e35f6c356be8a8", "70fc853bc4c2bdbe33257c0cd9f7ff44c694f80f", "49243d90af1f3699feef261bad2b5922821e7e3e", "82c7bdf504773ecf30d3e2d1f96863a25f2ea34e", "fcbcc4d80afa2d82e0572a64688634af3c527fc5", "92aaf7a61e3af7cdddcc91eaed28818783630c32", "deb05864bafd83b7d051a610c4507d51d7ea0d6f", "c216dacc71a57178a8aa409308605c1d1381dd72", "19a3850606e59d68067a87bc84d0f1349b147f7b", "81f71142533539ce0a63f494b7037ef0fc8fe873", "5b2c197ccd5abf9047b347feb6a8f1ab04fe8ca5", "508dd11113dcfcd2c10de458d15dd5cfef1799c0", "e7111a1fde93670fdd6997f72909ea999b479220", "1c01d91a1fac6e0bc274fa131620617a977b7b96", "8a4766057a63183b5b235168ea895ca6743b4af1", "13da1e709e39076888def40232facb1b71aaa4d2", "db5ee88c875e09325ae31802269bd9b6500e88f7", "ce46af7d31cb88d31da3fc8a7111fe8ed58fbd58", "ce7413a5fee0bc092c434aec65ab61072db79882", "e40eef12abf1db9195a4edb9ab1d82f9f1dacaa9", "717da418c7ee2c74f050a0bb1552965addd53497", "4a7614ebaa68c3bb38b3abf5cc0366cc797cc37a", "e60ce8c6de3d6d1e0dd2872106598506d38ce19a", "6021994a9814da10239f1608d9db3f316c8f5357", "54d508c6f6a76830d3463e19c407588f19842958", "eb744a2b2b0e815e717e4a9075f4668f6d4dd603", "46e4c9045ba66136075a513dd906c171174d5285", "bb7feb6e74fe867de90471ac1aa1f3100ff53bbe", "24025a897b183a3a2dcb3d6bc748b64dcbb15dcf", "dcca703bbde9ae19c894fd2107b68230e5078901", "22ae3071d12f771550bde2915b6a1d76a194e1e9", "c917e3480c988ebffb5b33b9359583e2eff39663", "0797c0e9fb4316bbdf02419cef51c3aa47f22a7f", "6ec5141331619969d1a2ef798c6756716cf1b7e5", "8e9792530d3207244eea8cc081520294558d1234", "310547dfaba2596c45efdb460effe944c4ebb17c", "2bd3f226339c5cb03ad421aa22336df0b0e9845a", "e914471bbaf64b0dc69dfdd7358a675bfb24fe5d", "6bbb658a62831fac77550255625712de4320413b", "0bd7d65a0c10f99aa7c76b46006d06914ab53740", "358575edf8ef1e4bf2de7fb9216d75788d51d66b", "7f1fc1136590d6a475b6cadeebdc2662a499e446", "f0836a4a33809131dd1ff6506ec3a789635495d2", "b789020268d0bc5dfcb76afe7f516bd53d1e4a78", "a5b0d9b4e628c94aa6c20b32469ee8da18865857", "a23d28b606b0d0fb2bb665f22f9564e6a15ed9a9", "430ae176ffcb96c5394f27d074a00f935528dbdd", "12252375ed24f9c470f6c9e6abd29de3e486a645", "b7a0cfe811fdada95592cfebf7fa8ffb8c5d7c71", "2fb766781b92d3bb2ed8058ea4fe35dd2e928f40", "c5dc6bed985d825b7424f71168ef67ef0b52efb3", "da8e855204177ec5c6e922fd73945124d758d4a6", "9c1785b4097b9fa1be8a406ad903c8ffd38d2f81", "44829d3407eabdd1b422ad6d301669d7e5fcd790", "1c47699ecad7edcede45ab73e0eec5a8a5c3c63c", "491f2fe41a7771811ac95cc8adbc28f589df0c09", "34373548b60496f043d88b07f73cea3532f6cfe7", "973793f0b260c889896457a9e741c644ec3f2fce", "3f24b16bceed841124fa4bef9019510cc37fcdba", "16fd1657d7733f01424d3df36651282c35cb6f58", "22033c4b00f724221e4c1a49f6bfd977337f7436", "54e7654dfdb309b1d3082a4cd156a4529fdf3091", "6058f9f7dc92e91dc95831da46fede0d9acb79f2", "c4e4dc67618687ae5e084a6b1d900f8aa2e0e2fb", "eac7a2b4b6b2f1846456f2da6818b3188cb8af91", "50613b481eb52ea5df05c71335a162350e1034dc", "725e489d4ce6f70fafb933c68bdb1f300045c7de", "4f56e4c1d3f6ebadfa438fed6cf92cadc549cf5f", "555fbbe27c2394f6972161a1e952c4f5841f1175", "54e701bdf9d12173f7f13862ad4f698e227f7c98", "528d47f00965b571180eca130c5a93e96ce1372f", "1b0b78dca265e2636e9352f08a104c04a7b6b4e7", "05a6aa90af6e989fa75389eae41b8fe3f518141a", "ee261cef58c2a7dd8f0a193636d817fe96e39237", "5eb5bd0b81d0d0e54a0f4e149cf7972da5af16b0", "1d0206573bff5dcdaa0837a6fe78bf359659a221", "960d971645ef744ea63e6d38d8280e1af5ac753a", "901ca9d5e024f257692ab2801dd7a0638b560f9c", "544978cf5f5bcf8f8ab8f07abfde874284e94f26", "a0463848875b3931b539cb202f54b1167455f889", "afe5a8e8728dc44966f7e50f97cb3ea78133ebda", "5931ad4536701861255594a1025e939f9303edb8", "93320a00d1452b2c50a306df6313878ec28ecd5c", "24345ad18ee1da2e592c5dd4453c88f9d5057313", "6dea94224e226b1fe75140496a5dcc96f82d2a26", "ff8dc33ecb7db20643cf1283462e39f3f167f4ba", "f932abef42a03d1f3d0d01f17bfca1bc9a9b2cce", "ae62f34bb1fe097a86b4a692d666841c63241b6f", "d86c91509ad391d720048300de13d0b68194ae44", "14ecb87d28e3f1889ebc46db17dadc98a279280b", "1d261a114dc298741b96da02d772b6f0e702e6f6", "3ba3a77462900d50253d6300532b2927482e8726", "22b4d1139f060f1dcbec708c4e4d6fdd735e6d5d", "07bfe98eda6df0b9a8beaa7b01ce84c065e376e3", "d37c09dfbc55067d948fca394e532cf6cd4cb1ea", "b109f796a476479a75492ab5133c0fc970b31cc9", "65bcf4aa791e72c815a9b86177a4e7d498e817c9", "44b2c5ba95e7f0746a2b928bb3bcefa9bc647dd2", "6b87fbbb33992934eb43901a71953474eb21cfca", "90ddee9a75b182c4f9e31453851f2988993c6f02", "d4806d0dca12bd035481c3bdb25520cbb6aca2a0", "2e9bf19292e28afb44a4074e3fb811156650a93b", "984fd6085df2636d495b70c77b0706d456a87c24", "3f11d6047a0a9b9f4a936de58d722958417b4ff0", "0e729431c6ead522446a1d7be898b47b8d43fc43", "1bc284136b196943e7ef7cda6c8c3e222b8f8bb8"], "commit": ["Fix broken Attic URL", "Fix incorrect artifact ID.", "Applied the fix in r1452103 to the two other SimpleAdapter classes.", "Fixed a test case issue (incorrect response to POST request; causing Axiom to throw an exception).", "Avoid using fixed TCP port numbers in unit tests.", "Avoid using fixed TCP port numbers in unit tests.", "Avoid using fixed TCP port numbers in unit tests.", "Fixed formatting.", "fix for the Java7 build problems from ABDERA-311", "fix for ABDERA-309", "Fixed the qnameAliasMap stuff. It was not exactly working as expected because Axiom resets the namespace information after an element has been created. Moved the logic to FOMStAXFilter so that QName aliasing is entirely transparent to Axiom. Also added a test case.", "Fixed svn:ignore.", "ABDERA-290: Apply patch from Andreas Veithen and Olve S\u00e6ther Hansen to fix using Axiom 1.2.12 breaks Abdera-parser - compile-errors", "Fix for ABDERA-285", "fix for ABDERA-281. Add axiom-api dependency to parser.", "fix for ABDERA-282", "fix for ABDERA-259", "ABDERA-279: Apply patch from Antoine Toulme to fix Faulty classloading - unreachable code", "ABDERA-278: Fix to relax the version requirement for commons-codec in OSGi manifests", "ABDERA-277: Correct application of patch to fix Excessive calls to flush() on the Writer responsible for writing JSONStream data", "ABDERA-277: Apply patch from Olve S\u00e6ther Hansen to fix Excessive calls to flush() on the Writer responsible for writing JSONStream data.", "fix for ABDERA-275", "fix for ABDERA-258", "fixed nullpointers; added unit tests - preparing a refactoring", "fixed maven 3 build warnings", "Update the changes file with Nathan's fix", "ABDERA-262: Apply patch from Nathan Reese to fix EntryRequestProcessor and MediaRequestProcessor do not support POST", "ABDERA-267: Apply patch from Andreas Veithen to use latest axiom to get fix for performance issue. This is using the latest axiom snapshot so we can't release abdera till an axiom release is done with the fix, hopefullt that wont be too long", "Add an explicit cast to fix a compile error when building with JDK 1.5", "Update changes file with latest fix from Josh Gordineer for URI templates", "added FOMParserOptionsTest; fixed OElig", "fix for ABDERA-242", "fix for ABDERA-102", "fix for ABDERA-102", "fix for ABDERA-102", "fix for ABDERA-102", "fix for ABDERA-102", "fix for ABDERA-102", "fix for ABDERA-102", "Fix GeoRSS extension from Nathan Reese on ML - http://www.mail-archive.com/dev@abdera.apache.org/msg00259.html", "ABDERA-233: initBaseUri() in the class ServletRequestContext will append the port 443 to https requests, fixed as suggested in JIRA by J G", "fixing a bug initializing providers", "fixing providers discovering errors. Now we just need to fix the failing tests", "Fix compiler error", "Fix for https://issues.apache.org/jira/browse/ABDERA-231", "Fix NPE waiting to happen", "Fix for https://issues.apache.org/jira/browse/ABDERA-225", "Fixing the ant build", "Fix for https://issues.apache.org/jira/browse/ABDERA-222", "One fix for two issues:", "cast added to RssFeed, it solves compilation errors", "build is broken due a bug with java 5, Thanks to  Sergio Bossa", "Entry.setSummary(Div) and other text construct methods that accept the Div input had a major bug as reported by M Harris on the dev list. Fixed with this patch", "fix the broken dependency for the features extension", "Fix a test broken by the fix for https://issues.apache.org/jira/browse/ABDERA-159", "Fix a test broken by the fix for https://issues.apache.org/jira/browse/ABDERA-159", "Add a createErrorResponse method to AbstractProvider so custom implementation can easily customize the kind of error response returned", "Port routemanager fixes to trunk as I accidentally applied them to a branch before. Also, fix the distribution repositories in the POM.", "Fix problems with duplicate notices. We don't need to have the generated NOTICE file in the source distro as we aren't actually redistributing any libraries there.", "fix license headers", "Significant bug causing the default namespace to not be declared properly.  Need to fix this in 0.4.0 before it goes out the door also", "Fix POM.", "Fix build.", "explain why the error blocks are empty", "mention that the html and json jars are also required handle an error condition properly in getEntry", "fix the ibatis dependency", "I'm not sure if the test changed or if the feed being tested changed. either way, fixed now", "Upgrade to jackrabbit 1.4 as a) we should and b) it has a fix for JCR-928 which we were having problems with.", "ensure that response is not null when Transactional.end is called following an error", "fix compile error", "Fixing the build, removing the json.jar license and notice", "Fix CollectionAdapterManager so it works if there are spaces in your path. (Also can we please not have empty catch blocks anymore? Thanks :-) )", "escaping bug", "Fix bug where IRI threw an exception if there was a space in the resource name.", "Clean up AECA - allow the use of different feed URLs for individual entries. Fix putMedia. Add a setter for AbstractWorkspaceManager.workspaces.", "Fix NPE reported by Remy Gendron", "Fix JCR test too.", "Fix test.", "Fix Spring workspace parsing so it actually works with multiple collectionadapters.", "fix build bug", "Fix OAuth packages. How the hell did this work before?", "Fix HTML POM.", "CCE bug", "Fix region bug", "fix NPE caused under certain conditions", "Fix a build error", "Fix the broken test cases", "Fix JCR test. (seems Sanitizer changed? Why isn't it respecting my 'filler' argument anymore?)", "Fixing some bugs introduced by the refactoring and fixing the test cases", "A variety of implementation clean ups.  Replacing some uses of the FOM with StreamWriter; fixing up some api calls; refactoring out an unnecessary base class; consistently returning the Abdera error document; etc", "Fix class cast exception when working with extension elements", "Fix NPE", "fix NPE", "Fix pom so json jar downloads. Also fix JCR test as sanitization seemed to have changed a little while ago.", "Fix test failure on systems that are not able to properly process the non-ascii characters", "Fix build bug", "Fix build bug", "Silly bug. Bad James! No soup for you!", "fix compilation issue with generics", "Fix org.apache.abdera.writer.Writer cannot be dereferenced\" problem. *Dan curses Java generics*\"", "Fix startElement(...) so that the output is correct when no namespace and prefix is provided", "Fix never ending loop", "Fix compile error", "Fix the sharing impl. I'm not sure if this is 100% correct yet, but the test passes.  This will need to be revisited", "Fix some parser warnings and account for mixed cased tag names.. missed one", "Fix some parser warnings and account for mixed cased tag names", "Fix for the cache test failure", "Fix the sharing ext test", "Fix the FeatureTest", "Fix for the IRI test", "fix null pointer exception", "Turns out I had overlooked the a call to StaxUtils when dealing with InputStreams on parse.  This meant that the new entity declaration mechanism in ParserOptions wasn't working and that DTD entity references were being allowed... which opened up the possibility of all kinds of nasty security issues.  All fixed.", "Fix the FOMDocument complete so that it actually works properly :-) ... also, make the execution conditional on whether or not the object is already complete", "Fix failing test for ABDERA-70.", "Fixes a serialization bug", "bug fix (NPE) in json writer", "Fixing the ant build as reported by David Calavera and Garrett", "Fix for https://issues.apache.org/jira/browse/ABDERA-67.", "Fix for  https://issues.apache.org/jira/browse/ABDERA-68", "Fixing the OpenSearch v1.1 namespace as reported by Jason Calabrese on the user mailing list", "Send Error bug as reported by Chris Berry on the user list", "Fixing the woodstox dependency", "Fixing charset issues as reported by Chris Berry and Herbert Welker https://issues.apache.org/jira/browse/ABDERA-60 https://issues.apache.org/jira/browse/ABDERA-61", "Fix for https://issues.apache.org/jira/browse/ABDERA-62 Reported by David Calavera. Thanks David!", "Fix the spring build so that the resources are properly included (per the report from Ugo)", "Fix compile bug", "Fixing EntityTag so that the wildcard * is supported (in trunk)", "Fix build bug in trunk caused by removing the empty test directory in extensions/wsse", "Fix examples compile", "Fix merge bug", "fixing the retro.security target and updating the retroweaving for the extension modules", "Just noticed that some wierd patch bug caused content in the resources files to be duplicated. Fixed", "Compile bug", "Stupid compiler error", "Fix compile error.", "Provide an Error extension element and factory for use with the protocol code as suggested on the user list by Chris Berry. Thx!", "Fix compile error.", "Fixing a bug in Collection as reported by David Calavera on the users list.", "General bug fixes.  The logic for matching entry and feed documents was wrong", "Sigh... silly bugs suck... especially when I cause 'em", "Sigh... silly bugs suck... especially when I cause 'em", "Heh.. forgot that we already had a parseTags method on EntityTag.  It was buggy anyway, tho.", "Bug in the logic for setting the max connections per host", "Updating dependencies.  All but three tests pass after doing this.  I'll be fixing those three tests shortly.  Maven'ites will need to update the maven build to match this.", "Bug fix. There was a typo. To eliminate the chance of it happening again, simply refer to the isComposite method", "do not throw an error for now. need to reconsider what to do here -- throw an error or silently ignore", "Bug fix", "fix the tests with DefaultServiceContext as reported on the user list", "fix a bug. in certain cases, the reader would enter an endless loop. If no chars were read, assume the stream has ended", "Was finally able to duplicate the date parsing bug (https://issues.apache.org/jira/browse/ABDERA-44) This appears to fix it.", "Attempt to fix https://issues.apache.org/jira/browse/ABDERA-51.", "Fix for https://issues.apache.org/jira/browse/ABDERA-50", "Fix the caching tests", "Bah... silly bugs.", "Bug fix. DHContext is only cloneable if publicKey is null", "Add preconditionfailed error response", "Fix the test", "Bug fix. Fixing the last bug made another one appear. getElementWrapper is not properly dealing with nulls", "Bug fix.  Content setValueElement/getValueElement is not properly handling ElementWrapper instances", "Fix for https://issues.apache.org/jira/browse/ABDERA-49 As suggested by Ugo", "Minor usability fix to eliminate the need to explicitly cast Writer and Parser", "Fix for the encoding test from Adam Constabaris", "Fix for https://issues.apache.org/jira/browse/ABDERA-48", "Fix for Maven build (contributed by Brian Moseley <bcm@osafoundation.org>).", "Fix build error: JSON files used to be copied to json/json\" folder but the class names are \"org.json\". This was putting Eclipse off.\"", "[ABDERA-47] Moved testcase to abdera-parser module so it can be run within Eclipse. Fixed bug by specifying the correct encofing when converting between chars and bytes.", "Fix ABDERA-43, add build glue for the i18n component.", "Fix the test (remove the control)", "Fix a NPE that I'm not sure would actually ever happen.", "I hate silly bugs... especially when I'm the one who makes 'em.", "Fixing a problem with the sniffing code. In certain cases, an error would be thrown for UTF-16/32 encodings that used the BOM", "Add a test to catch the setContent(element, mediatype) bug", "Fixing a bug on setContent(Element,mediatype) where the passed in element was not being properly set as the child of the atom:content element. Thanks to Brian Moseley for pointing out the problem", "Some bugs....", "Fixing https://issues.apache.org/jira/browse/ABDERA-40", "fix a typo in the API and some simple formatting stuff", "Add a new mediaresponsecontext implementation Pass the servlet context path in to the target resolver Fix up more entity tag stuff Fix some test cases", "Forgot to update some version numbers.  Fix it before we cut the release", "Fix for https://issues.apache.org/jira/browse/ABDERA-35", "Fix inconsistent method impl", "* core/src/main/java/org/apache/abdera/model/Entry.java   (setContentAsHtml): Fix JavaDoc error.", "fix FOMElement clone so that attributes and namespace declarations work", "Test case for the RequestOptions set date header bug", "fixing a silly error when setting date headers. The code was missing an else\" clause\"", "Test case for simple extension fix", "Fixing a NPE the occurs when getting a null simple extension", "Fix for https://issues.apache.org/jira/browse/ABDERA-30", "Stupid inconsistent generics handling.... Fix so it compiles with ant.", "Fix for http://issues.apache.org/jira/browse/ABDERA-27", "Fix for http://issues.apache.org/jira/browse/ABDERA-24", "Fix for the example build issues Update the Ant build so that the example code is confirmed to compile", "Examples now depend also on security and extensions. Fix maven build.", "Fixing a bunch of Javadoc errors", "Fix for https://issues.apache.org/jira/browse/ABDERA-20", "Fixing a silly build bug", "An implementation of the Yahoo Media RSS extensions.  I put these together as a proof that RSS extensions work just fine within Atom.  These also demonstrate how simple it is to use the new enhanced extension stuff.  These were put together in less than about two hours.  Expect some bugs as I haven't fully tested everything yet. I'll check in some test cases tomorrow.", "Fixing Javadoc as reported by Andrei Filimonov.", "Fix hangs in client tests.  This is based on Ugo's initial patch, but rather than just sticking a response.release() whenever we were done with a response I went a bit further and used try/finally, as you would expect a real caller to do.  I figure having our tests match the style a real client would use may inspire us to find a better API ;-)", "Fix ABDERA-22, calling the Parser#parse(Reader r) method without passing in a base argument always throws a NullPointerException.", "Add a new test for some concurrency issues that show up in 0.1.0 but are fixed in trunk.", "Fix an odd compile problem in the Feed History extension.  I have no idea why this isn't working, and I can only assume it's some weirdness with the generics implementation in Sun's javac.", "Silly bug", "Ok, *hopefully* this will fix the issues Ugo and Garrett are seeing with the IRI code.  Please test and let me know.", "Bug reported by Steven Isaacson. Caused by a limitation some java1.5 compilers have when handling generics.", "Not exactly sure what I was thinking with the first rev of this. Fix the method up a bit", "BUG: java.util.Arrays.hashCode(...) is not supported under JDK 1.4.2 and retroweaver does not migrate it.", "Fixing javadoc example", "Fix SignedResponseFilter so that it doesn't throw exceptions on error responses", "Fix for an API change.", "Fixing compile errors", "Fix a bug that caused the @type attribute to be reset when calling Content.setValueElement with XML content", "Fixing a NPE that occurs when inserting an entry created from the Factory.", "Move the various setIgnoreFoo/getIgnoreFoo methods to the parse filter mechanism instead of parser options.  Provide a abstract parse filter impl that handles the methods. Remove the setIgnoreDoctype/getIgnoreDoctype methods.  Because of the bugs in the Stax parsers DTD handling, we're always ignore DTDs.", "Fix the client test suite.", "Fix some obscure problems noticed by FindBugs and IDEA.", "Fix NPE's and remove attributes is value == null", "Fix indenting...", "- Fixed bug which had atom:content type attribute values uppercased - Added quote() call in entry.content.value - Removed redundant code and turned it into functions.", "Fixing an NPE", "Fix a NPE that occurs when text type == XHTML and no div is present", "Oops, fix build...", "Bug: using the default namespace interferes with the namespace mappings in the XPath, change AbstractXPath to not use default namespaces", "Bug: wasn't setting the URI for post, put and extension methods", "Fix tests by making the FOMParser hand out copies of its default ParserOptions, not a reference to the underlying default options.", "Revert r429514, and fix it in a more http-spec friendly way.", "Fix an NPE", "Fix a NPE", "I'm either going to stop making silly stupid little mistakes today or I'm going to take the rest of the day off. Fixing an oops on the in-memory buffer", "Fixing up the in-memory buffer.  I had originally been experimenting with a buffer that would be incrementally filled as the original request consumed the stream.  Unfortunately, this doesn't work because of the way the Stax parser incrementally consumes the stream.  If a second request against the cache was executed before the first request completely processing, the second would either block until the first completed or would end up overrunning the cached buffer.  Not good.  So, for now, we'll consume and buffer the stream immediately upon creating the in-memory cached response, and from that point on simply serve out ByteArrayInputStreams.", "The json version fix hadn't been applied to the trunk. Sync'ing with the 0.1.0 branch", "- Fixed NPE bug in category", "More wierdness with the PushbackInputStream.  If we don't call available() within read(byte[],int,int), the amount of bytes read off some streams may be incorrect, which leads to an incorrect pushback, breaking the xml parse.", "* build/build.xml   (docs): Oops, fix regexp.", "entry.getContent() used to throw a NPE when XML or XHTML content is empty. Strictly speaking, this is ok, but it's not really necessary.  Fixed.", "Fixing up the build script so that the produced dist zips are correct Better handling of the security conditional build Three zips will be created, one for the jdk1.5, one for jdk1.4.2 and one for source Updated some of the build documentation Exclude the zips from the svn image", "* build/build.xml: Fix indenting.", "Fixing a whoopsie. I originally did not account properly for null namespaces on the element", "Fixing the build doc instructions for eclipse.", "Fix for the ExtensionElement API change", "Fixing an infinite loop that occurs when the feed that contains an entry is set as it's source..", "Holy cut and paste errors batman... I committed with an unused import. Bad James.", "- Added accessor to requestHeaders Map in RequestOptions - Fixed _invoke method in AtomClient to set custom request headers.", "From Rob Yates.... while looking at the GData stuff abdera was incorrectly parsing the dates. I fixed AtomDate and here's the change (two SS's to three SSS's for millisecond)\"\"", "- Minor fixed to default implementation of getBaseUri in ServletRequestContext", "Fixing the ClassCastException in the FOMTest", "Fixing test building. Still need to get the tests running again", "Fix svn:executable silliness", "Fix svn:executable silliness"], "metric": [["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "6", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "2", "2", "4", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "8", "38", "70", "46", "3", "3", "15", "0", "0", "0", "8", "0", "0", "26", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "8", "5", "1", "1", "5", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "9", "4", "2", "2", "12", "1", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "1", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "2", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "9", "32", "13", "1", "2", "19", "0", "1", "1", "1", "1", "0", "0", "1", "1", "0", "0", "0", "0", "2", "4", "1", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "10", "23", "93", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "5", "2", "5", "5"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "14", "14", "15", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "2", "1", "1", "21", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "4", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "1", "2", "1", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "7", "0", "12", "1", "2", "5", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "11"], ["1", "3", "3", "2", "1", "1", "24", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "9", "31", "7", "2", "3", "19", "21", "0", "0", "0", "0", "0", "1", "1", "3", "1", "3", "0", "0", "3", "3", "0", "4"], ["2", "13", "45", "21", "2", "3", "9", "13", "2", "2", "11", "0", "0", "1", "1", "0", "1", "1", "0", "0", "2", "0", "0", "5"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "19", "25", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "4", "0", "2", "2", "220", "0", "0", "0", "0", "0", "2", "0", "0", "14", "0", "0", "0", "0", "2", "0", "0", "2"], ["5", "10", "62", "27", "0", "0", "0", "0", "2", "2", "10", "1", "0", "0", "0", "0", "0", "0", "1", "0", "4", "5", "0", "4"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "1", "1", "276", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "65", "65", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "4", "14", "46", "52", "0", "0", "0", "0", "0", "0", "4", "0", "0", "15", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "6", "194", "567", "598", "0", "0", "0", "0", "0", "0", "6", "0", "0", "182", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "8", "28", "167", "169", "0", "0", "0", "0", "0", "0", "8", "0", "0", "36", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "8", "49", "49", "0", "0", "0", "0", "0", "0", "2", "0", "0", "7", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "3", "11", "11", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "25", "21", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "16", "28", "32", "0", "0", "0", "0", "0", "0", "3", "0", "0", "6", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "26", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "10", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "4", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "8", "99", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "0", "3"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "13", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["1", "2", "4", "2", "1", "2", "2", "9", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["3", "3", "5", "5", "1", "3", "23", "0", "4", "5", "58", "20", "0", "0", "1", "1", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "9", "29", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["23", "26", "15", "17", "13", "13", "0", "17", "1", "1", "17", "0", "0", "1", "12", "0", "1", "0", "0", "0", "23", "0", "0", "0"], ["1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "19", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "8", "2", "3", "3", "103", "106", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "13", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5"], ["1", "1", "4", "1", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "16", "42", "216", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "17", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "0", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "25", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["3", "14", "60", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "0", "9"], ["2", "4", "20", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "2"], ["1", "8", "10", "10", "1", "3", "5", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "5"], ["2", "5", "11", "13", "1", "3", "8", "9", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "2", "0", "1", "4"], ["1", "1", "22", "15", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "2", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "9", "17", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "2", "2", "2", "2", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "9", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "13", "63", "34", "2", "2", "7", "16", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5", "0", "0", "4", "0", "0", "9"], ["16", "47", "400", "368", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "15", "15", "16", "37"], ["1", "3", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["3", "3", "8", "1", "1", "2", "4", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "3", "0", "0", "2"], ["1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "9", "1", "1", "1", "1", "1", "1", "7", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "4", "-6"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "5", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "9", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "5", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "1"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "5", "2", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "38", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "2"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "7", "72", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "15", "71", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", "3", "0", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "37", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "15", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "45", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "1", "194", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "6", "137", "16", "0", "0", "0", "0", "2", "3", "10", "1", "0", "0", "0", "0", "0", "0", "3", "0", "1", "14", "0", "-1"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "7", "17", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["1", "3", "24", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "1", "2", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "4", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "3"], ["1", "3", "15", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "15", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "7", "19", "15", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "20", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "4", "22", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "2", "2", "3", "31", "20", "0", "0", "0", "0", "1", "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "147", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "3", "4", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "1", "1"], ["10", "19", "183", "16", "2", "2", "3", "8", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "1", "0", "9", "9", "0", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "1"], ["0", "0", "0", "0", "1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "6", "0", "0", "0", "0", "1", "2", "15", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["17", "38", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "17", "0", "0", "0"], ["2", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["17", "17", "825", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "17", "0", "0", "106", "0", "-15"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "182", "72", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "56", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "9", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["3", "5", "20", "9", "1", "4", "3", "11", "0", "0", "0", "0", "0", "0", "1", "0", "1", "3", "0", "0", "3", "1", "0", "2"], ["2", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "7", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "21", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "4", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["8", "12", "98", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "6", "9", "0", "2"], ["0", "0", "0", "0", "5", "28", "122", "180", "0", "0", "0", "0", "0", "0", "5", "7", "4", "31", "0", "0", "0", "0", "0", "0"], ["1", "6", "31", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["1", "3", "12", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "9", "93", "127", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1"], ["1", "1", "13", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["5", "7", "37", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "3", "0", "2"], ["2", "3", "3", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "5", "14", "75", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "8", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "16", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "48", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "4", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "4", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}