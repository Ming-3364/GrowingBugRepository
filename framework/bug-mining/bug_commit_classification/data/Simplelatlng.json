{"number": ["380e5c3d8e5e2bed8771871493b81783170d89f4", "291c98e172d4555b67c0609b55583fd32eaa484d", "11784e339a5f83cc29eaaaafd55f990add56eb70", "17d42bb96e882dd036442f7a2c8c46cdb299352c", "a95c0abfb89a79661ca215cd7786dbd5ce98ddd6", "38c8a79bbc8d6371799bc4a030da258dcccca4d5", "c5be488e8b82da621b4206c7b922234e61f136da", "9955dc079b36bfca30fbdb587a1ba5724046c74a", "be05c8b7c30a98194382e99e7424152430545a00", "4440291e57450407faa7fc5c66262e6644dea73a", "377336014648f06091690daab864e4f93d6215e4", "803cb70d2a02dbaec80e725f06dac2ebe3aa3647", "8efd835cbc67cc334ddc98a4680f4a0c7b9e4b66", "dd3598ae462ad6be08c4266214595e97adfe84bf", "c0ff51de730a5070b59c544bff53c7b3b6ddd6f1"], "father_version": ["031a3bb2e35f486c6a129c23b9774f27370bfd40", "ec6d34028888cfc71389e9c9f57a96aa0c391843", "b90073579e6bd0f9d377304f2e651d2d7ff2a78d", "f3d009e0fa3cb5a1a15bbb3676694e456e5a56ae", "38c8a79bbc8d6371799bc4a030da258dcccca4d5", "3f31615776059c2a05d5fd3f6cb585d71677927d", "44afe139580d9b4a3e1d7a466b0fc52b7c6f1d0e", "f49d5de141f1661b19413ee2b7f4dfdb3b1cbabb", "d209eaf3b56f4cf743c3419a8a85766cb8db7ebc", "ec58a68d4e1cca3c5612bb53028202c7d2d28fc4", "f5c89136a2662901cd39e208d8b3659a4b4e5871", "099d0db85124ce1a0acb7bc870c7d5527e455da4", "8998b60b17daa92cc4bf03499422bd0e7967b070", "002604d79a371bf9ab4849cef0ee880f138df5eb", "35f30ba976b33c68a1b3e1c6425b04ad15bb0fc0"], "commit": ["Resolved Javadoc errors and warnings.", "Fixed Rod conversion ratio and added supporting unit tests.", "Issue 7: updates to Geohasher internals to fix end-stage rounding and hash/decode stability issues. Unfortunately this makes decoding much slower.", "Fixed a typo in toString()", "Incrementing to 1.0.0. I feel this release is production ready\" due to JUnit test coverage of all non-trivial lines of code and the shaking-out of a few bugs.\"", "Discovered some bugs in the RectangularWindow.overlaps() method. Some internals were changed to fix this calculation. As a result RectangularWindow no longer has a min and max longitude, but rather a left and right longitude which correspond to the left and right sides of the covered numerical range.", "Added a convenience constructor to RectangularWindow which allows you to construct a square window. Also fixed a bug where length unit construction was not always calculating width at the correct latitude, thus leading to potentially wider or narrower windows than desired.", "Added a couple unit tests to rule out SimpleLatLng as the source of a bug in another project of mine.", "Changing package structure to be Maven acceptable. Incremented version to 0.1.0 to indicate this, because this is a change that will require some manual intervention (in terms of fixing imports, etc.).", "Fixed Javadoc warning about misformatted @link.", "Fixed Cobertura report generation so that it doesn't have to be run twice to update the report file.  I'm not sure why, but apparently Cobertura's test process can't run in the same ant execution as the report generation.  Clearly something to do with how/when the .ser file is written, but I can't figure out a way to fix it other than forcing that the tasks be run separately.", "Bug fixes and further testing.", "Fixed Javadoc warnings.", "Javadoc fix.", "Fixed circular window and added some test cases.  The changesets since release were the result of over-think and over-complication."], "metric": [["4", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "0"], ["1", "2", "11", "7", "1", "1", "38", "11", "0", "0", "0", "0", "0", "0", "1", "5", "2", "0", "0", "0", "1", "0", "0", "1"], ["1", "11", "50", "26", "1", "1", "150", "0", "0", "0", "0", "0", "1", "0", "0", "19", "0", "0", "0", "0", "1", "1", "0", "8"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "6", "35", "32", "2", "8", "167", "20", "0", "0", "0", "0", "0", "0", "2", "11", "1", "8", "0", "0", "1", "2", "2", "4"], ["1", "1", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "24", "1", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["9", "11", "29", "24", "7", "10", "41", "25", "6", "4", "11", "11", "0", "0", "7", "0", "0", "0", "0", "0", "9", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "7", "13", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "3", "9", "92", "6", "1", "1", "3", "1", "1", "0", "2", "10", "2", "2", "0", "0", "1", "0", "0", "1"], ["2", "2", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["2", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "3", "4", "3", "1", "2", "38", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "2"]]}