{"number": ["754c95c45beb20e7cb859e9d3c4a9a58cf3c9b14", "aaf1eafd277cbc6228069e24fa054d4adc1e5f74", "769d40c7dda33d7d27243b9c6304c0e5f6a59ac7", "0eb4d1433a003490144ca7b2dca9683ffd110acf", "c1b55a52dd6beacd38a0fbf88386844a1ea59378", "67949602f367b6386ee6579316b27dcf6d1841a4", "6b53c0e5e1607a6b00395855303a0643592180cc", "6894243eee1299734da9624ca534ccaa54d61b5d", "345c23c58e32cf87527be0c4f2a1e4ae310d5266", "fcf6ad4bd4b5d4c9fea5df53962297077c04eebb", "c1b4e82e2980abd19d5bce63da63b8147510c845", "42bcc8cb3e1901e32e1ac27ff341d07ede00f265", "65a9fc303b14f3b92ac303ad767ce42a670fef57", "376ca694bb80d9eb04d0b38e2cc0e8a029a1e0b8", "bcee186a5eca6485bb70cac9d4e7a4ab86463f45", "0146e3f1af2d722d5e48ff4ad105bd25dff787c3", "6964d561b7981c5afa921691e3f98d72f3d68777", "7f3b9a93b59fa82c70bd7cc92a112d72642cde53", "9c543f7a5fe20bfe096ca7668ae415b5e070f4b8", "b70f5dda2b0baa7dfab1cde118f799c45d67bd17", "88bea4f94505610679ada651ad2f0ed7860eb272", "849ecb0c8f1f18308512362884e985b4f4c3623d", "a1cd84785151cef57783af17db82948cea77b4eb", "e093dca96bd9008d9233c48902d1184359fd4b52", "1c8430dde5e95fbe1937a67e7f5655e97f03692f", "b1f60e3ff168e1780584cdee1f6d42da286c9f7a", "e0a9d3ed211cef9bf4bb0ebe1bbecc106cfe8135", "d25344b1c04b6d1e6109101d4387db354c8c73e5", "8acad4f46775564cfa3bbc5fa4e32bcd6bf5c2c0", "366a3cee90e31a6078e057bcaa7089af0e1a3cf4", "21d3dcd52b497795c21749237e929d822012a4e3", "d3285862b3bf4a8e9bb16443e12359801b48e13a", "29dfcb59fdcb64828191073e34324cc2fc122af7", "06d5a87d0c83fd875eaf8f57a574ce18e1ed788f", "cba00d2b40982ef5c7d1aa9f17445e689ab8f8f9"], "father_version": ["36d763315ee65cbf8b86a5c8b7bfd04b4e8ff66c", "b7ad4555f6536ac677a6b8cb92eb515a6f930d3d", "54eb6b7bf7f41ca96cafbf8168dbc15eddde29a8", "cdb58b022e89717c9fbf1605b641dc2c1eced11b", "8d23b9ae21ac97ad6459a7a96e53fa80a8ace32e", "6b53c0e5e1607a6b00395855303a0643592180cc", "b1d2163355ba6c860ea909a2981e80e99095ef27", "82e7f6486729dcb419f0e5ce74a79f74bcd7a57c", "e6a35c8bee0a4093efd131b9275596ee63b4c8df", "c1b4e82e2980abd19d5bce63da63b8147510c845", "f83b3002d8ce311a665d1ae61fecf782dec47e57", "a6f1476dd4693cc9cfa276b1b7770ba434c786eb", "376ca694bb80d9eb04d0b38e2cc0e8a029a1e0b8", "3f1a0f440230b5717856e5f5431d0f2c19677dcb", "142fac65895462ebd452701a0fa9ced3755d332a", "d4f91ff15bbff4edeba780818ac1d0e43d355793", "b7629f0bbc227154defe42c9d382365c2edc9e21", "5d1895d4154d370cfe0fbd0bc7d9667c69a90e13", "2998d1f867b4983fe077ec533a88e02c25a268d8", "a8bbf9b2cf4c06b12c50594185f4c8f27edfb48b", "8537d300545eceb4bae2c0702f13fbfd5f1b1827", "4af42382f46abb2533a1b335850119c96efdd82b", "3b42bd401bab51832d7613aa2b9a630d92e7e083", "f4fe5c00c167c899cca5c510db55f989b1d64c8d", "66855fe30fe8c77174ed6b78197bdb109c60ea72", "3f9dbe81291bbd024d684a5d0ab00f63f2998e49", "77ede6ad2e57fbca4ea623f15d44062bff5733de", "460c8c7650204e78d7534a51152577e18e08cd76", "350c5d06e8e74464797c9c2d4f5fd886492acf16", "bcccbd09da9e28dda6115b0c669b8e21294db51d", "d6d74e6018e48810f34be232cc4c60b37476a931", "435848d3c0a872c64eec050adf57655a137e1169", "ade8166e9f5a627e82d9027b50d00a15e9c2de88", "e53c6fff4ec660040468980ab40bccadd56b4bc5", "9b8f177128f19f470217d47dac842c0f5e54a675"], "commit": ["fixed StringsTest failing, bumped compile plugin version to 3.8.1", "fix travis build attempt", "fix eq test", "fixed Ord1 instance for T1", "Alt::some(), Alt::many() making use of fix point combinator", "#20 Added TreeSet, fixed a bug in TreeMap, added Ord.reversed", "try to fix travis-ci", "Fixed the Law class", "updated Semigroups, Monoids, Groups, added Laws, fixed Booleans", "fixed Memo usage in F1", "fixed potential race condition in Memo", "#48 fixed ListTMonadRec", "#48  ListT java doc, fix in ListTTest", "fixed java doc in Either4", "ZipperTest fix, WIP", "Fixed bug in IntMap insert(). Test now passes.", "bug fix", "bug", "fixed ListTest", "cleaned up Either and EitherTest, added EitherExtend, fixed that Either.isLeft/isRight forced lazy Eithers to evaluate", "full test coverage of Maybe, fixed Maybe.monoid, removed superfluous List methods", "RWSTBind, bug in bind", "fix compile error", "renamed type parameters, fixed problem with array size", "bug fix in do notation", "MonadError, ErrorT, fixed bug in Floating", "fixed problems with current Java 8 version", "fixed bug in Comonad, covariant return types in bifunctor package, minor improvements", "workaround for compiler error", "added List tests, fixed unzip name clash", "added F4, added Tuple.quadruple(), fixed some minor bugs and added methods in Set and List, added tests (ListTest is quite incomplete yet)", "JUnit test for Map, fixed some Map bugs", "switched Do-Block to fixed number of vars", "fixed bug #1", "documents bug #1 - MonadAbstract.sequence returns different order than Haskell"], "metric": [["1", "2", "1", "1", "1", "5", "10", "10", "1", "1", "1", "1", "0", "0", "1", "0", "0", "8", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "8", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "3", "8", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["2", "3", "31", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1", "0", "2"], ["5", "14", "691", "2", "1", "1", "214", "0", "0", "0", "0", "0", "1", "0", "0", "25", "0", "0", "2", "0", "3", "95", "0", "-7"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "11", "14", "10", "40", "0", "0", "0", "0", "0", "0", "11", "0", "6", "10", "0", "0", "0", "0", "0", "0"], ["5", "10", "38", "14", "9", "11", "248", "17", "0", "0", "0", "0", "6", "0", "3", "22", "0", "4", "0", "0", "5", "0", "0", "10"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "14", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "17", "18", "8", "1", "1", "11", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "4"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "6", "6", "0", "0", "0", "0", "0", "0", "1", "2", "2", "4", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1"], ["1", "5", "37", "18", "1", "1", "17", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "1", "0", "6"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["10", "20", "124", "56", "1", "1", "246", "209", "0", "0", "0", "0", "0", "0", "1", "2", "0", "34", "1", "0", "9", "4", "18", "25"], ["3", "9", "13", "37", "1", "9", "325", "141", "0", "0", "0", "0", "0", "0", "1", "20", "9", "18", "0", "0", "3", "2", "0", "7"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "16", "80", "80", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "13"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "4", "61", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "1", "0", "0", "4"], ["7", "8", "9", "9", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "7", "0", "0", "9"], ["10", "11", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "1", "1", "13"], ["1", "5", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "11", "0", "-8"], ["2", "2", "4", "4", "1", "6", "54", "11", "0", "0", "0", "0", "0", "0", "1", "0", "0", "11", "0", "0", "2", "4", "0", "2"], ["6", "26", "220", "37", "2", "8", "335", "14", "0", "0", "0", "0", "1", "0", "1", "45", "0", "6", "1", "0", "5", "13", "1", "22"], ["2", "4", "7", "6", "1", "1", "146", "0", "1", "1", "12", "0", "1", "0", "0", "17", "0", "0", "0", "0", "2", "0", "0", "4"], ["3", "4", "265", "105", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "47", "14", "5"], ["1", "1", "16", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "194", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0", "0", "0"]]}