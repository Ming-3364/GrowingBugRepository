{"number": ["f4d51fee087de12311dd1150842a27e56b8524dd", "50ad5b533bace62aed0d72797330123833766817", "f0fee72167c4ebc76eef0041a32e2653722d470d", "f9c6b3e68da4f178b971a4bae2110b06e87077c7", "1b1ed4d92479bd07d95ea87cfca56f3a044db4fc", "cec921d277c5e1a846981464d956a972678dd874", "6da6cef73075ff3ce54a8fb246410031d2f6bec7", "a44ac33a219f8618f1ef070eeb757cb5fbf9a050", "3d820b97d4b5c4be4f4ee85670c24b770aa6a1c5", "17a9c1e1529b1458ff9dda1b400ffe5362ddfcb5", "06bd69f79fe1b692755a2903d9965f173b385e42", "e44b45ff2085508e25cbe3d20663514ba1865366", "02a2e6ef4bd66a4919c228526bf4b43bbf6e0823", "310003fa0d6bc3287ded9a0c8aeb16ac55a2dd64", "fa324c76de5ca5743ae78d4071eb3dcadc6b6192", "b94c7636e4c22b030b2a7053efdf1a3387c29871", "98391075cbe4d44de43f3e89313b12680a6d3297", "96bd3ddb3375ec15c326e6df2bb7e63e6cbdd22f", "51f63c9efd4fe31dbcde345997cc638778e3f41c", "a02bb6153ab9821bfb84a7bd1397e9943c2b6e7a", "a95b9fb279359b9db0d97c84e9e1e6f2c2fa7696", "983aa5edf20710edd01af9871948e59312f92eb7", "84ac062960996efb5701a5a85f39f8a818082e15", "4cdc2ca8ae446692b38f67d3c2da516dddc62dfc", "19c8494ac464032679cfd8d5bd0b82d139aafba2", "490f937c6f09dcea4a952d9049116056ed319698", "b5bb89d5fbc712047a28d1d927d16a1ce841e541", "c41cf53b28eaf7eb0b13648a18e25673851623c1", "33e188bfe8f1627f843f62e6646282932ec35587", "85c8d624dbf414090101e8476ef82e6324b165b7", "dd1881ad330f35c576f431d977b3e7c1787ceee0", "38a83412b960d128e1795db449f0dc29c70e3644", "e7aa5225021a3890cd508446ebe43980eed82c7b", "d44135bdd3572a43f3ac0e89ec2f87e0f0b5c7fe", "7e09d67bda7235004a84c667e6e29870184f7c6d", "b4893374ca29104802d2aad76b0696641596e143", "2510ee904516cdd2b072a1798d6a397cff9633a9", "eee74fbaea66a11d6a6581d426bb01a0553eebbf", "83fb8c26e65e49e18c4bf8100ee85378d97eece1", "a38c52529beb04bf0815b7d95fb4a393ea110dee", "b1af9daa2737686878bf7b004d9dec51357efbde", "d858fa57eb98692fd721c6d787596f85eacf0422", "187048074aff11835156e9c8ec660e8a63d35dbf", "bf72bba94c3f54472c1ac5d159b58753a046cfb8", "004dd29d1aa9916ef7559c61a049b9cf6deb9a3d", "1ca05d01e526efa7564ab54e98a6d6b737463437", "5df0bdb1a26a4c6b232e046c8d41640343d46d4a", "516c86bd6b1aba9f6823553d86ed98cef9164e0b", "8c8c9013d1ee63641a3b6f4902801b155465497b", "7d0b45940238918033094684343551f90524e600", "597def3f5e20bed50aacd0f60b021284295e1195", "513b3e9d6c2b84df0849f39a31d4c132ce97e935", "ef7364f803942529c7694372d4cf5d3179a08a18", "04ce1667cbd81241bb21061544063757bf2db451", "b57ea0c84de14771bbc371872256130a6fa32ddb", "0b14c6d3f6b8b65ab87cc9de3e2d95f3ef99d910", "f3eecf205c35fed4d5209521799cee4279682089", "7d0db7e536afbd2a220b9e05fedff3fbd4f39df8", "f9220a694552e1df41990913ee80c8021bdfbf34", "be57d5ac62318fc9db1372a206b1b0c802d48616", "a3f8c61d2d5b21631eb242ee5525ff42dac75c79", "65c994ad3c1e6bcd5bbb66da2b05d9e224517aa2", "0913284f15f89a7c96ededc2474abba1df96b9dc", "4a6054f50bffb22377c1987e8cd7521cb025f8ea", "d5199be27d6ec5af6479f16170fc6e5bf004b348", "016a1f67263fe1cde1d910dc7002d972811951c5", "c2dd4c3ea7311b382034fcf301b40c3fc74027fa", "005020e44dadf57772f789ba617e637d1097a156", "867614829ba6b041ca6becbad0f43cb180003404", "2e533a1c588cddb8f816cc55585650c7a5ec7cf3", "3871a9cbcbd60259ebfdf4db59da8ceb0a2ef9ab", "189b98ecc9a4bc90b8bd91c30f381479fb7c31ed", "12ba9290e055c2cb86701530b66880e459794ebb", "fc0f9c905c1d087ee7e0d1d80c4af3cba5530323", "8cc7962b287140928866ea32451b0906bdc01146", "a80613b6573f9511683bae109cee69660a58ece5", "f7fbc3eca923f22df5fbbb647ac45339b95cd981", "1c7e75e7e01c7fc6934b4b2b07ce680d77081a7d", "d3a92a731fb6096dc9edb420af02f1bff441a8a0", "71b36527b3f65253ee6356f59afe94f5deed4f88", "09a4867e45e22b2a704b936bd683f15855cfdbfb", "8cf7320677de50e092324e6d6fa92c59f6fe6d70", "05640f55ce19c419bb644f8eb160797513c2bd58", "5c4579b623bc08b5719dc3ad8a830172061912d0", "2730f498a86d6f6173313f872d03fc0bb39807c3", "509c6a0ff87e9a871fa14b9683cb2e26ae1147ee", "fc68e1ba783b49df82e27fc88f4cb8819aa0b0c0", "b7d06237f88f22d4530d39b40897eec1df93ef92", "d00d176fc04d730f63b47dde9bc334b5c3a67f3c", "b48c9f52be991f280bff592dd49c1fd0de2b080a", "ed91f491249950ba19b9d81e9590ded25ca14ec0", "4a20cdca923bd342360f821d7020538e985d9ec2", "9257fb9e40526f7ad33ac83f0b7f152607510ccd", "a4c544a24242701673073d32d2ddbf037fac0099", "170a5097d7840299a1564b82f4a47c613d94663b", "db15a295e120fcd5d5ad74207d03edf09b24bb19", "a898de843abe44f5f0910b271a89b60e884852a5", "2566fd6c479f86f46a0f0a65c4587572100b5cfc", "cd3f495f13f535c2e5b413d8988e34d53f617dff", "29cc202b9c9783a8cf7a0e2d01785dbfb0a97060", "5ec116ad0b261b3143c24ff9a37c27bfc8182040", "e0e01fbb08688d769823e49f8b7e4bc9517d7fec", "1a5ea1fc2bae3fc3ed2ed353025c78cde4076e3e", "669db17c58795bf8e01c64cb3bf467b4bf1fe42e", "f47dae24720b20b405f6320ac3fabd0ce53c147c", "28c9b04a189614c2adedc993c5e68e40891abc43", "68ebf63854ef0116a62e5a290265f03835353fff", "05d5cea579d8a74227cf3a8e6a105752f18b708b", "782f16e90060b998f06d61d5be90954880af6dee", "51d045de6ed4e0f70d0b83a1fab7f22719cedcc5", "1a7335f2a78a43e0306fba256f173c9b8e6be54d", "cd9365a362b882441d2c8b76d2494a7dc090f262", "7340c5bb6fb4582afee0cc24219b628e94b3e251", "e3b2e16365582fb768d31071ea8e593580204f50", "bd2b870ff800f500fb0535ca27a05a78795c0787", "6e67feccc3b624c3dcc2909613d1b78f1b26b73d", "b9b1f5de8f022c6f62343bb29310dde2724318e0", "af335b264d5469c07b391bed7f69cb615e12c550", "8f7028fbc919a573615950303b890b7556ba723a", "86e38127fd20f1d744465ba23ee1b47843d3f4b0", "56f3993407ab4a8f92ad827ebe9b5af67a103228", "28f06e4f989ee08207d9f65c7290e1d67663d05f", "39a4d38d4108f04712c5513cb6f2b98910f0a0eb", "39aa103d9d99b134b08775d53b6373db7d3941bf", "b460d3e3979c96af2c5e954bc49c1ef4e4e8561a", "163372e76956b447e5bbd18aafcf16e51b70d529", "8548a3259cea0983da3f3a337466c479c05fa369", "639f86cad6ffd2b923eb73b1bf174a4d4bddbaab", "c87c845fdc022c1e4275a48bdd28ba2f288c07a8", "57aff5e45d8bccb361b994b432e5e5a68a7cbd14", "fc3eb1e5e7f4de1da35156de5eb4a3a2a0d016ff", "9ea8fbc85a2991fe27e2ae062de62fa2cb53b37a", "59fc5a99893c25c3b4f2cc9a4969c0063461ba06", "eb7f7d88892e105d4db919dab8fb298cc0eb6415", "b31beef04758645511a0e12ad46bed19bf6d2677", "b760f08c466b28438920856d7a1a60fe96af5688", "45d0dfa3078da610ba3c6bc98b0879af56e1b7c3", "e454734372583bb7567dd570d0800003927907a9", "e24de2b2772a52baf1c5a5c4e664f8fd99eaf3c5", "eae80c2d9169ea414c165cdd72e54de623945e25", "a42c00203e86bd4c8f540dfceede2a67c264679b", "34aeecbf9ceb7a7ffe0158307e8560929fb3537a", "70f65e6820e890517e0fde05e4a4d96c64fdbb43", "2ade5594550fe6d54a8eae99a0f17fcaa6451e5f", "b3e2f1e9ca74d80ac48fb80a618a98f2dea445b6", "600c0b87c98bdd8ca3c131a245f8c77317239da3", "977130904efed2ff1219e1388a8cc64f19f30e51", "683bb3bb0cf8fc91c2c9dc75ee899a0f51a33a10", "1b685bcf97fbea1a31525c4c412fa6ab9e1dc05e", "36fd2f3fa2900efd65649e40ec6186aed252a4c8", "2537a31938bd8673aff775ddcf33dcc665b4dd51", "87d007a2d22da14ac765222bd41ac5cff97a64b8", "71d90b05329e84d98d752884209ad0a39ccb476e", "225cd9ec392590eb9ef02c54ac32fe635a61a037", "5c77fd30115b24ff59c23f87930900cf23261339", "3b158ad850b522d7c952823a5a5e05a46cb4cb55", "9879d5e28c2ef3a8f68a2d335842d95c3d839e75", "23d5aa8fb508136454f30f81e0e4d8fa3fa1bf44", "3c65bfec1b1034f75f447f3f461fcbe448e5a5b7", "a3c2218050eb90ec9b098229beaa271a2dc6c0a0", "03e981ebf381364ed4f8d9aa09b7d74c50319d3d", "c7190898dd2df8a5efaa9f0103820b27325a29ff", "4cbcaa41ace303ea013548721c95d4b2ebfa8779", "f8c1d283eb3e91d426ce602003471aa257e09b3d", "d939672c11488b9c4d46ed9bd4be9a72ee048c5c", "4d35f8049f6c905d5a2f50e32310c46af7aed027", "e7f1f7aa7982a6d4e8e0a37f3d857c552f887543", "0225cec990443d033ca97e18186bae764c76d6cd", "75a1eaad7026c23581b0a49390f315520fbe11a3", "28d737543e3ddd43df556a3cc34924c088da03b1", "85185c5e872f74527168bb84fb20e20e44b2fbf8", "c3a17e7728ddc7277223171114cac249eea51b68", "dfc6b6f5d8f5f7443db7082a73f254fca87798bb", "90ea8acafa1d8de4af46f2e9e4d7725d22873974", "4c4001872c0011bb6943418f50c4e61e4a33e328", "716182644d6960b3aa1181e99b9ed08a95b01a12", "bc2f074d4f807a485d6dbdb1f16d2a6028fae668", "6930193710d60a235d94fca053ae2caee06ca009", "1bbb6f582f7aec98be77e4fbaf435409c7bbb102", "bf0a24f5336eda1a04b01c0f0fcd625ba1d1a876", "5afd572b0e2142175a720f1c8f25f77cb39a4dea", "173a359f81f8beedca1d174745ae1e7b2b68e878", "75159575d5f0604207f44ceed9ed0d69066c350a", "de04386254e192ba3882bb6bcd6e7727e035424a", "4212328dfb393c5d730b6738fc1c656b5ccd1cd2", "a3c1e39c977460bc4ad11da0540af1945020de62", "d2551eee871be6ef61c47ebeed186bd386a365e8", "7bbc3bd52c638af0bd9c845fc33e4f5a046ccbcd", "74615aaf8b7605303b42114d82572d3d4a5dbaba", "766630840db62cfdd2e34f121a28aa5795d8ad26", "8aa730f07ff01e65a78dd9a26cb05a6d6a0a8a92", "4e23d54aa18c5ec234716b1e7526431a89ee3a94", "d5bcb6569e001ae956adfb93b510b258244d4824", "215afba72feca69a300049e477d2782d5f0b52ff", "3acbae42b2f009b38cb32e9155699cfb8f81d2a7", "716da22c43fd09b52407463b3281551d4c421d5d", "9093b3f207ce050f9d8b31bd24da4967c15fb9a6", "cbfeb437232ec0fad3f308807a668326016b50f3", "aaa7141af2a33e54521e1891b7403f39d603da21", "07b9a20f9928a3ed0d0f4cafbdb5580d804881fe", "3af9132153440e847579d77d4c784b7e73f894b4", "d37e54737fc2fd6eec7c5e0af7bd8818966045df", "48f7b748453f6b27481ddef7157fa0fe7ff9bdeb", "ea3963c61b8852a23230bf191e9dc6ff66faf40f", "44d381214bc9ce5b20b624fbb7d7627a56057e60", "5ccaa79a4c8dcc3c5fc1e65d7ea754b2781add56", "ad1640a438887425ea284cda0b3271127690a08f", "5c636e49829cedfdaa3594f6943faebb45dfed8f", "c2464c72fdca5f1e811a08f9ae8600b5a41eccc7", "c427085fac1c80839224b32f2d8ef4b9cc802422", "0965b7e02a9fff067375fa2bf586bc69537e75d1", "01fc5e8a4aa288d86cc50178c91b343871d1df96", "2fe7c4f98f322fde2836a4f1070d04025afd32bb", "197ae577db11f96738773a1374f9bf74c2fd5d7a", "7e718050bb152a3aeefbb0e21995a2171d6343d0", "5f0bd3bd1c316c31e9e04640448c29b0cf72c845", "f760383e3aabad0142cbfa51bd06306265bb60cd", "4f9912974fff05b614e6c81bb4d862fcfb552c3d", "d29315a480c8e7f968ed5f36ccac741f7a9901ae", "b77a9a36810054b716dcd50acdf5d6d88364e546", "a125e5c2f7d5e072ba9c97be4f58438f9e6b1912", "23e5fc45b6ebaf06a6c75b0a392066375e35c669", "929312cb35f766490922abf288c54299037247c4", "b017246f9758c1777ef212e0961fc4178bb5818f", "b264f2a1fdcc4d81c5c813bc210997aa808e03cf", "2ef2219030d67b880d32b55621f77882b4d25932", "b30990ed26e7a6c248ec51d5fb13c939680d9599", "534350254e4c78b31733c071c63e575cc6af2878", "b8815111788632de40ad5b593455bdc8ea1ca8c8", "394c105f11404922e1a4c2bd3b22be8ddea72779", "fe23ed3e6be54ae59b7373725fddbd3fa81008bc", "94d95028ff6e34026279a81695bacf7f0cba7b61", "55fca36c18cb6f8088344a020777db972a1d5495", "7edc3067f66d28a1a3c3f80dcd92cc79b3efc24a", "f758d995bc46867f33cbd98ecc770736c3c0a93e", "9c7d4bcefe212d54e4c5cd5b84fdd385b8bc5d29", "ee12c9197963f139568d57e4f27964248898577d", "95fc2ed0a1948a3ca9e2b7c0552a086ce2458bea", "ffe67350493b0e4978e08b02d656aec660297c85", "4d4c558c61b635e585408e2a6d2bb0479c8b3a99", "f9175539a6a17d9709a2b279ef0ca5cc670f66e1", "3ecd49bb8540524e313acf0511f953f63346aaf7", "7db9cac19c9955a7ddcf1fbf21e158e6d125789a", "e7f71185b24cb689ceea085fcf82a74fe40550e4", "923aef474faa11dec146fdbc69594f2ae9cb7936", "d867d8d1a9a19c50f55b74683fe7627929cde336", "aaa1f86d0fced3054d9f4d40cb65e1a6f2be678e", "462e4f66f5bbe1b5904f2e1d75c7795f51fad3a7", "0168e92e1f65c181f69e300a2c65f81ee1823498", "fd5bb1cd5396b43eabb7d508f10cc337b131a4f7", "ce1f71e815a71861d4d6cb87f16751e57e8a03d2", "9770c1ddcb1a1634b5de94f4ed0db362ade481b6", "7fd09dd1d57f1fe946713123dd0481ce9636d8b8", "81dbdfe72621d6103b6b2d116d59119ca290f842", "c8bca69346b44346a73db5516789db221b521f35", "0996219ed0f4e350fd49064669506abb8b9c4140", "6c7b4117fcdc2fad0fc5f4ed8254171847137c46", "cf8c1fddcbdbcc6a8fae1027e05578e7a3fbd212", "d08ab23f5d00fb30019827fe5a60e377be408df0", "e100561cdadb28976537853ea6d8726d4a9a1634", "b9e0d733fd4deedaec664b08002855704f393e7a", "76022268d337321e6669230f1870b918a370a127", "1053076c46c81ec037b6f9e75bbd7195d34140c5", "5fa15059d050fa3a0ae4393de38d43af82395489", "60bef1f8e5ca207ceb42c9172fc8569daf16f764", "e5c7d4c94394a39fd81e1288d39f6d8361584b8e", "54154395804ad5f6361797227fbb6516ddf751a9", "f10da0bb23fb7b7a7d276d377268930d232faf6d", "f92cf9ae0458ddf592ac7d78419350996f4b6385", "a9cecba96a2b1ea51481b59e4fbeef7d7da3fe0d", "c1d062dd342c0d492e24dfe004a11ad6be5eadbf", "7dc2c1bb4f918c741b883f5013e269d7b690b79a", "e52d4c9960a6158d234fe7fb59edbe71de3c6933", "b054b2160722d0adba2ca95d55082a5401ff111e", "823496ea8fac6f0cc16dfee6aaf9eb93be8371ca", "eee7f4d0f90df7e5eede96fd7fea0c0e3b23e5c0", "7d8c575a9e7ba4c5229b57736d473c50ca5bc166", "9356e93435f1bb34fd92e6df42a6991eee5e00b4", "9e2252a28c6b907fa2e466106d3f085fd1902820", "1b95c0949adb79b96997af1f9be1275e6b962393", "5b8ff983e9fbccefa0b17fceeead1986736ca976", "e413ac37964cdbe88724b9f10feb3936860f0018", "d3e208b9407b3b3f37d498fc4873eaeae652c130", "ffb36c1e0301acc7b840df0b69f1955550f35363", "2cbf064fe1f5f983781198e3388ddb49881abcd1", "6f6c2d66e06ac37870a10745250eea8725be7d14", "b41d3a18df64afd4f9f2645374b943d5dd6d1767", "85eda906aa99371ce0e4adafb833a917f17776df", "4cc93a1d32908ce4795669750fc9ab1cd022206d", "2113166ed6a359adfcde240310960f1aee3f2607", "7b70e6cd2b13634436d7637f012c6112af30ccbf", "64ec10cbbd042ab9e4de44b20ae95540d4f0dfc6", "674a6ba9877d2de7224306c83e7871e1eddeab93", "79f9f10697b7385840de52e0aeacee8a32a45a29", "364121b66af40ee2a09e3067d150089b49841968", "0b63b370c10480aed39b9ec166652b6a61e32e1e", "a53cf2a7aa887e493aab35c093ce2a129ec56c41", "5a9c224317e139eea839165e5de5fe7f43369568", "7302a5ab3a8ea4d8250e009c919cb70860c1ca69", "d4604ccc43fd6a5444f830cd857d2c9086c7916c", "295e121ac606ef2f01942a5a75d0d23ae5c117e2", "94d75029c296550dfbc7f2ef6e08ee6584eb903a", "d2bdfab4b941af5305a054de4130329b34681cc3", "9aa11e23459c9ef058a429c0712c56b60097ae57", "1b80d343ca28618318e7c13760913ad91dca78c5", "51ae45b7462481c08fb53feaffc4d18ad4772074", "195ecb5192949835533cd518518638869e68374e", "2297abf81fe7c8756e4912f3b8b93f62920d8e61", "69cacd25b82edc6735ab1a31a0667616903c8ee9", "b3388bf853dd3761ca278a802a6e571f149eac49", "919f6c5b0d863d86420f10e347a06a6cc2d79b45", "456a440b2ca83ef9ccaddc6404374b5faa9ae200", "1eef46472bbc179cd636bad8598a865ce9d80a18", "f3ceca41bc128ae4ff831e6f63038253ff4cf123", "f592973aa574814d22041be9e8636c76ba203202", "8064816e3d14931a1d359af43f4f16fc362779d2", "dde945425633156d7a45d765f292033bab6c7f10", "6c16da4699a2041d918f9b6bccd25b15cf2c227f", "06ad954cfc5a02b0af08b91ec998458205083745", "974cb4fa6e1b50df369183a165b3ca7e21cb8c3e", "a62b59ba82b00d3d50eb7c1483d0f1dbb9809587", "6c3b943ffb930db1cc4017ba0d15a188b5a78ef0", "2d65ba415a0495f26fabbf1bcd4a987ba04093fb", "da5fb242ab8a34da5b127b802876c4e057632a1f", "8324bef7c445ed742ade31086008d40cfdab4890", "878ba5ddc25f45a81e7443f1541e84b44b1fd3e1", "2a218f35420fe75636b317308490f155ff6be9ee", "5d0003be79e8fc21eb18559cbbb57408cde8e443", "5a58a70fea79b232f08364acf37e9f4c24ba324c", "89f9a68b9cfc8d03e9e363ad1d0edb7636445ef9", "041b921f8ec876993091d2d8cf281554f086c14e", "ec683346f8d375b84a8479b20a0b5a2432ee4c92", "cfbd7b08ea9026dca6dcdf4678f40b22af2666e4", "a6ace71ffb7d3aece837c29befadef409604ef39", "cdaf42d8c17cf00dbac59b6d85f54123a685ae8d", "bf894beec69afce9e59342aca1d3586f3b99c53f", "fd6c3a4b66b971d8c5f2740c30c821d07bf63188", "b37a208a0795ffe28257089e7e090a38a3b18eed", "cc8fee1eb4cfbb3e680139db030fc0d4575e6280", "869e9938044edcbfe8d8f661a37e0b85074e275d", "994150c3143fe6c15e455532f156c03e8993a4e9", "21bc9b52fc35133d84a97ba5be136d4bcbcb2b9c", "08a1558f67c002f632bc5d6189043399f70abd71", "82eb1819e9b902eb389d7431c9b5732fcbc9df61", "20cf9cd87ca75f0696ae47c9bf84691749f9c178", "5e23f109b30b714b9b3f1c1a5db7174bc17464b9", "02ec6b625e846cbd2ed52df33f606a3d7f60bd3a", "1564316deeebfb12b412d52250e30cfc77af0f0c", "6c11df4602cacb5b62a6f1c87529b16d4e7d1705", "4ffc6b7cc58bcefbbed61f1cc42212278c32f394", "e5120ceea68f87136ab3a6f628d6facc3ec2df83", "0486f34de43d9772defdfe6bedfefb0552c36991", "09837736725b4405babcc428ac43816cf77f630b", "8a5db48a32ef0bca5b87058904ad99c0e809edb7", "c46728a98690e86b4fab24295d044f20e8ba17f1", "28abba32409d6ddf1f3218bc1e49985224176095", "fb6cd6ba8ea35b9a8726584c8c4b5ef2082731f1", "1dab51b0ceb617af1461c4d3b07a7b6be378d4c2", "8fa1de2d27869180e6e9b88d50708ad9120949f7", "ae37e3ae395af2d60187c26c0a5f50982cd21418", "1313111fc820c43662b3b98672f70316d84ee80c", "0cbda9bdbe04f47a58b8b44c3115b516855caf78", "6b271a9969518098238f2c0d1f658c05de44f970", "1f72da420f6f9f9c7ea090bde158e7289c1a7138", "7839ec6d3ef0aef3c516f62c5dd26f2f30a1ac28", "eeccf4c9fef90c11d9820ee99fca434c7a48a0c6", "c533b17f67a27066967191311fa5512bef24cbc8", "43f57ed0f80d8fb5d04e6baa946a2aad5251fa7a", "f0437b554c95b5412ea926f3af8364aa1be3a6cf", "916b28671e863528a8eefefcfd84745de775a427", "40b9df4e3964dca1a138bc158e4a7f7762810677", "532ad39f51997f39ee0ecc2aba7a094d80c5daac", "e2ee4cca5a853ee403e3fae7408cdd1fec53d135", "7832b0bab22bf3cd2f46f8fcf4cdcdd8d712d12c", "516c9aa5009c37143c3c518d5296e57c866d4d29", "7898dccbcd3a30ebc7aafe28f093fa60ec845cb3", "8ba3527342d68c4f6e1e02a42de57dc51c362f9c", "9cda57be07ce1f9867945cf149d42ae3f7eca8fb", "afe8ded20e5e0c03af85d3a451353ef19c9a9ac3", "cddc3dac821e395530080cbb37b7ef8f3110f6f6", "1507bef69094d633f516cf26fcb94e5e2a6ddb7a", "b475f7c4b5fcef3b62796980d6d061c196bdac02", "de832840b6969dc838c454392aec4954af6e0c8b", "cac3e9bf504f5c9299e1d37535c1b3cb67dc7166", "4fadf07be4cd99a579ef09bcc137bc857f2e50ae", "0ad4050ad4013e4a3e6ba97cb3927331e1636c6e", "66db2c7e42d00783cf44264a3119df58c2eaca9c", "fe25a7204cce1dd65e137c8b6aa374aea969e4a6", "b14e3674510526cc4d6070f0c5d040af9f131a84", "d960749d4a36f7f9d35c4cd21c72589cd0721ff7", "61141d2f6a2a4013587053826e8caa92df7ff660", "5ba5e05234a9c91f91c559fcb0d33e7482f74d9c", "7f2d67c8e6b741e24f7991bba00dd320f2ec7c84", "919a4be8a606ad9946b390ae9d97bce1f1bcbf8c", "3af8cd1f6c73a88cdbc7976a676b4169778823d9", "4a573023d8186d1c1e27e16f69d63bb4a66b37b8", "274cd6dbf9afc51ab1477c4ff6acc9735d7843f6", "bd219e7f7eec3efca80283e8e1dd92996886d6be", "69463896ce9d6f7282b452f7a3558ce18fb84746", "a47c3b4892dc480eed0bb976136ffaeb9682eec4", "684114d9473e6098081a2f519788cf4e0a78c7c3", "161f3b9b1dce39597b8e5db56c57ef978aa4ed63", "32caf7c554aea378c0cd19f096295176c8695402", "9edfa6440c9902186229544c41e8449da42b6b9a", "ab219db62b117720c023bdfe669abc4e05e249e4", "dafab8d3d5a0092c4f2af60d3947d7f1144870df", "014986dbaf1b30e20d70df6dff9545028cb7686f", "a96fe5bef050cd30b1714c3bdb4fbba7f5db1807", "feea8a0d3c7e4912fe7929bd4f393db752cfaacf", "9a42f31756d42768b516579942b06ec7ce17882d", "f8a94bdfd8e4f6321272a5e3c1904b4e7a2028fb", "20544d4c4b596fe00d312ec251e36a6dfdc00186", "efc6cc449e39844e28ad04b1b4d5b8ed261445fa", "536d008e95770e28fa3e1799aa13dd9eea316751", "0cb929e62f4a0e70106497426bf6922eab710f51", "cf9f020e1647726aa51ad62052dc80ebfeb64030", "4b1fb82d81474692d56d3f1fa0f75b6d681a8497", "960753022cd096f5a0eebdcdee7458788f779f9f", "6d5eb8fcfd40a356f848c407c2429f711b97c0f4"], "father_version": ["162bbc41337ebe06bac8b7333979d925349e0bb0", "59ee523cb42c840853fe358bf3f435861714ed69", "f2266a847c1439521ea2abfc2c242dcf3f67db07", "597c06804cef8b3b02cc954ac654b636c3f70acf", "cec921d277c5e1a846981464d956a972678dd874", "a972856f6204f0e81716ec7f6bcc3f02cc316084", "c71207dd9e131e840e03a99531a3c3b081ae743c", "c6a3bc699f7743a1178f8e52e5ac39aaf4e5292c", "e4a31811fb6448d71c1dea17413deb52cd8bc48b", "06bd69f79fe1b692755a2903d9965f173b385e42", "c88d35711d2ecb0c36d145e49b1d5042cc72bf2f", "ddf424857ec2e7b51e424c234ebc81819d01ddc9", "de1d8e38ae77e9cee8b0f0a9e6d984c4a19db9ce", "25c8ba9d24456f87d45619eefb6ceed7e888a7c9", "2937173ef8e5b193dd0178d488354e3a77b31ff9", "98391075cbe4d44de43f3e89313b12680a6d3297", "8951c17bcc00fe3c0d2203516baa31ff2210b1fb", "04e114112ab0750faa9058ba22eb7c75816b5d4d", "84d1a37bdff45771dd1b3cc26227d2b00d870f8d", "c93f5bf865f9bc9592b12ec00a30e906ad2d9b36", "983aa5edf20710edd01af9871948e59312f92eb7", "748323bc7e8e9200777a0c0ac2ab5f941aa430be", "4cdc2ca8ae446692b38f67d3c2da516dddc62dfc", "19c8494ac464032679cfd8d5bd0b82d139aafba2", "490f937c6f09dcea4a952d9049116056ed319698", "b5bb89d5fbc712047a28d1d927d16a1ce841e541", "f154e5d47a43f104c930c184c8c6a3753e543753", "06b3471ea57779d1c0ae2d386538e4209898a349", "85c8d624dbf414090101e8476ef82e6324b165b7", "eaf460eba11cba97af3b2813dfda15defd5bc642", "3e31c71274d576f868a13fc857ac3fdc559553bd", "e7aa5225021a3890cd508446ebe43980eed82c7b", "fc024e396afd33145991237198e162a48b4c0ae2", "6c67ed2f9e778e1e17fa92e1b2b8a4c879d2cd3a", "95b4f5351f97759d5f8cf0307ca9f89f6c6653b9", "b67083c35780bd8b6764cf3ecd600d194f6898cd", "eb93522a1f83721723522cdf0090defaec18c253", "a1591ab3513b3c048c3315a7c58bbbb077de93c8", "3e1dd0e97a012672c32431aaf295fcb9c97e37d4", "55840d343cf24dfe5b2146a904a8cad71e2cee2b", "879421cf381bca92169a931183e7bd0e593b48a5", "02056450c8c00c08c66d03b2ed1d7beaab7c97ae", "d74d9a0f3bc4af11a07091733b78d1f76f1161e3", "52b4e6367a7711e3ce305ea4c376bd374d129698", "2e28914a0f48cda7bcdc21a72cb8590f4e6f06ed", "fe0f90d894a4213b3c65820c90bff2ee588db3f5", "8c196e19afc44373a08554694170eec99e0cd05f", "6092f924b36061353ff92b18c88400ab3bc05327", "af38a4e32582cee6471110309a8f47ee441f9280", "7d033060b08cedc9b54bdc1f8951a872870cdadb", "0cdff0ade7e6a6ae2a48356e55d7549353535043", "5d386b1f4ecd005082cbb232d110d91cf42715a7", "04ce1667cbd81241bb21061544063757bf2db451", "664a6e8e8d8c640a0db6827161ddd293d6e71ec2", "6c053b0f1790e9b8c4daa773ec4a5750546d55ad", "2cd901867ea518707739c0da0d85faa746824bcd", "adcff4cff2e825e3f559b77e3e86d6399ce183b4", "6cb0edb9598c175ee429decc570b7f1462ef1b5e", "ac214bfcc63761ac440785675a0bed7d2798ec96", "721b335a239125549fde0b4be5c0d764541ceea6", "b7b4322aada5d6d5521d47b5fed769b40753d68e", "0913284f15f89a7c96ededc2474abba1df96b9dc", "9744d5f6f5fad365be9a6f1379d741c1b5cd4949", "73f7096eba0321a9e5cbd35811ff0bf7e7b0cdef", "02680cbf1f7bc681cadb9719a7b3d1fe741268a9", "60a041d393c75035e9a63c33723c382ac6f35c30", "3feab0942b21164e1b96626019d424f71ddbb024", "2432f29607d674f032b855dff4dbbffba0114f21", "87683a59c4cf3b7c2c60b75c271d8738c4501233", "f08b31327d5c012e9f0fed67023fe8e53905d6b7", "03683a464d1b77533648f5710431717ee34fbdc1", "7aee6c91b462c60bec3882ff5a858caa9c6d0295", "44e087d2977af86dda2677f13d5415371b7be7b1", "8cc7962b287140928866ea32451b0906bdc01146", "a80613b6573f9511683bae109cee69660a58ece5", "f7fbc3eca923f22df5fbbb647ac45339b95cd981", "1c7e75e7e01c7fc6934b4b2b07ce680d77081a7d", "ea59bd130ed436df2bf90b06b6c165d97ad15277", "3956eedbfcd8f57263892bb6667d21a839f67990", "09a4867e45e22b2a704b936bd683f15855cfdbfb", "376c0d1d2f8e926e200a003f51d50bcb4bc57655", "191a391166a8565718ef685531afa3fa44afd69c", "a267d66e3a73ccb00f53b7f0e2ca64643857253d", "2730f498a86d6f6173313f872d03fc0bb39807c3", "509c6a0ff87e9a871fa14b9683cb2e26ae1147ee", "476cbae161154c96f8cac68c51baf3785d04f3c0", "2d42cec48d820f60812628102b104f140ddd1931", "c52ef8e57f8641fdd6371122445f9415c8145113", "6a088d1b8a4aa343362cdf4e749b7c5fca38971b", "741d1f5c6d3cbfbf232d604d7c8fb9809b5449e7", "4a20cdca923bd342360f821d7020538e985d9ec2", "b15bc636bfd12e7f8ea19ebb5fcfae57ab4f1f16", "f7a0d26b803e48ce272a5bcc96c7ff1319b00f71", "170a5097d7840299a1564b82f4a47c613d94663b", "9c75d18b8ca0c34d9a193e93b6ec435bb788c326", "564334a3b2a0c9716c7ada87b9bd790fb44f747e", "2566fd6c479f86f46a0f0a65c4587572100b5cfc", "cd3f495f13f535c2e5b413d8988e34d53f617dff", "29cc202b9c9783a8cf7a0e2d01785dbfb0a97060", "5ec116ad0b261b3143c24ff9a37c27bfc8182040", "14d829107a8a4d5ea443042b96f69318ad5d55c5", "1a5ea1fc2bae3fc3ed2ed353025c78cde4076e3e", "9d2bba78e9a2e7e587c8a682127c956dbb305806", "565f590875089f8d32fbe43015fd9c80b850ebfd", "28c9b04a189614c2adedc993c5e68e40891abc43", "a12d0bef1f9f6ee7967f53baf91fc50159633eab", "01ac26694f3e2908fac8de6795db175a625a70f9", "782f16e90060b998f06d61d5be90954880af6dee", "2b14a7c97a5088d82136e891fff24ee741f9fa71", "f205872c925206296a80877d1c6080ef8775df6e", "3cf62d0bb53bc058776b2bae5ae6f1ad31d3f59d", "7340c5bb6fb4582afee0cc24219b628e94b3e251", "1fced1455f9fbfa8e58bc3d73861ddbe019c6627", "bd2b870ff800f500fb0535ca27a05a78795c0787", "c96e9ecd658fc29a157851efb17f63535ba9e1a6", "91d1630dea212b4aa376af14f170886252949a50", "2562bd541cf8e9289b7f0892483974970f3c26d8", "b6e5122f5e85ac3d6b59c04e4e43ab511fa0006f", "9b2ce85df522e2585bc0bd8ab73c1b8dbed022c3", "bdebe257369f8b97419511ead1683b013a8745f5", "8decbc7be8c008f57046564ff785848d551a8617", "d4f7023d80d3d17913b2e638b0432d1ca7209a2e", "39aa103d9d99b134b08775d53b6373db7d3941bf", "b1a23b1c06c88befcaf6a37233033ab14691943d", "163372e76956b447e5bbd18aafcf16e51b70d529", "0dca56f30dde6b9b935f235e491c1ec6d6516da5", "b9a775d254698c4fbb1c803e51f8b6f171a0eb87", "ef8a3ae9aaf9ffc852634ba49de56c05e3c7615f", "bfc35d7de1f94f40d2fed1ab903ebc8ed5e9d251", "a9d769efa60d603368b6f098d9bd877e7807bd76", "bdd87a386962721691e05238dee03767cb0ab6bc", "59fc5a99893c25c3b4f2cc9a4969c0063461ba06", "c46bba7d43466dd603b7dc242e1e3d22a694e9c2", "8ec2beb3d2883c19e33fc0edbca14847b370d95a", "c2e0b90c1570bcfcb4b63b887877201c9749b2ed", "208f72d0d885cf51e2368e01488d499692c86859", "e7b6609ac7f50185225a1b191eaeb0f6f41ba4c4", "59a27f700369f72866e35ded004bf6b24393d26d", "2af1eb5a26b362a2012d8f00b013297d5dc7b5d4", "dcc9b0027c0d21cda22dc7a3e092f42ef784a5c5", "1da1d4945dd9236617247cb855c0aac3a4112ccd", "c30d62010ff02d83ba5f9d3afc1674584a5ae3ff", "1406eb030e031860b7197b270560eaa97964090f", "d8400077ac4d62378ee11e8ac8d3885f7dad33d2", "600c0b87c98bdd8ca3c131a245f8c77317239da3", "ef4e74dedf879aacdd3fe2a8fb19858bb0ae4a9a", "683bb3bb0cf8fc91c2c9dc75ee899a0f51a33a10", "5747c1704a8631e4ba59ef54885cbcd081d6515a", "36fd2f3fa2900efd65649e40ec6186aed252a4c8", "2537a31938bd8673aff775ddcf33dcc665b4dd51", "87d007a2d22da14ac765222bd41ac5cff97a64b8", "71d90b05329e84d98d752884209ad0a39ccb476e", "3925501d127ee07bfcba25dd3d23d327fd9c04b6", "5c77fd30115b24ff59c23f87930900cf23261339", "a50ffbdf7fac0443aea1e4ae5aa614215f3910d4", "9879d5e28c2ef3a8f68a2d335842d95c3d839e75", "23d5aa8fb508136454f30f81e0e4d8fa3fa1bf44", "3c65bfec1b1034f75f447f3f461fcbe448e5a5b7", "a3c2218050eb90ec9b098229beaa271a2dc6c0a0", "03e981ebf381364ed4f8d9aa09b7d74c50319d3d", "d51ca44e5bfa703d69796f7896e8cadaec7d8f13", "98f79d2d0168df9d0f34c18b615a2eecc5468d55", "f8c1d283eb3e91d426ce602003471aa257e09b3d", "d939672c11488b9c4d46ed9bd4be9a72ee048c5c", "7cb6d81c5212e453ac0f9611cbb7576c31db4ee5", "4299412e0e292246c8a22001785aacc0d592cd64", "3ee30152308ef6f8554d93cbe87ad285ff46a21d", "b712aceed1daf782082c5dbb558620bca2eda85b", "dd4f552cc01829aba2643a771de0c2b9537b6d15", "fc7f974c81803184178f6020da6da1be1ae27adc", "91e930de1c2c294ae0f58698a0a1c3382dd89de5", "dfc6b6f5d8f5f7443db7082a73f254fca87798bb", "90ea8acafa1d8de4af46f2e9e4d7725d22873974", "c2ef042a057215aafb73f3e8270780aa135e0d3e", "610a2a4d1e2e38844d7bd1e7961c8d0a9265c1d3", "bc2f074d4f807a485d6dbdb1f16d2a6028fae668", "6930193710d60a235d94fca053ae2caee06ca009", "4d2c9d93ce7721d24c0ed984100bc2ef5a77c221", "bf0a24f5336eda1a04b01c0f0fcd625ba1d1a876", "fbc4f5a16f7bf9fabd9457fdb53b79c7d6667db2", "173a359f81f8beedca1d174745ae1e7b2b68e878", "ad1e155a18a7fbb468fdf3c489ab31518ac88a5a", "de04386254e192ba3882bb6bcd6e7727e035424a", "4212328dfb393c5d730b6738fc1c656b5ccd1cd2", "a3c1e39c977460bc4ad11da0540af1945020de62", "d2551eee871be6ef61c47ebeed186bd386a365e8", "7ac97798a2137b0e27e807ee7a40d9bf56e5cc76", "4137f557442a88515a6d98aae7866d0c24e2ed6d", "766630840db62cfdd2e34f121a28aa5795d8ad26", "8aa730f07ff01e65a78dd9a26cb05a6d6a0a8a92", "5f89fd78ec13f8b10cf2a94c79963655cad4a839", "a50b8505d05e8fa5c0434ef263cba2de5920a195", "215afba72feca69a300049e477d2782d5f0b52ff", "3efb10e783fe0828b548dab5e11c3eff117cb55d", "879be9651fc22fe95ffd43b2164851862de0fa8a", "5bbff32d443f848004825621db0d07cc6546c6e0", "cbfeb437232ec0fad3f308807a668326016b50f3", "aaa7141af2a33e54521e1891b7403f39d603da21", "81d07c9c93b7ff2ad325501be965aa471738bd23", "0e2b1abe904f680e84105224993e147b12ae900e", "b19d54eb6698101dec86ba363473bea1bd905286", "eb856bf0d2cb8ca96773d01720db446142d5d3ca", "968c27b66449feaa186438f6524b88eaccab041c", "e6667d03f9076bb32a84e3c4e070b7ca9a5c6c97", "2544ce006040e1ae4fde3f99dfa0cf923615b4e1", "ad1640a438887425ea284cda0b3271127690a08f", "8224f6041fff4454fdb394196e18cdd61e1c93bb", "c2464c72fdca5f1e811a08f9ae8600b5a41eccc7", "c654870e9f51045c54768f228255acdd925bb238", "51e2d03645d49f3462f9321750c021480822646c", "e197a08be61feeaf90ee032ab9e465c5cd081aa6", "2fe7c4f98f322fde2836a4f1070d04025afd32bb", "6a7097d3e53e86076f0f7e146eaeb455c496b5c5", "7e718050bb152a3aeefbb0e21995a2171d6343d0", "e7c1b890ccbb7a31abf4e5451b970e7a2665f25e", "f760383e3aabad0142cbfa51bd06306265bb60cd", "4f9912974fff05b614e6c81bb4d862fcfb552c3d", "d29315a480c8e7f968ed5f36ccac741f7a9901ae", "b77a9a36810054b716dcd50acdf5d6d88364e546", "b969ef4f2df44f83af00a0f31a4cd57fc4de0f60", "c4199c050ba8bdd18786d68108d9ba8494595ec3", "1a7a3cad9cba7b8caf59ff5d19c07419845d9e8c", "b017246f9758c1777ef212e0961fc4178bb5818f", "b264f2a1fdcc4d81c5c813bc210997aa808e03cf", "2d3c5cc1589ed0b4b2bcf6f3498e96116333be3d", "b954d153c988fb4632d9a759adc4d0eda663fd7d", "534350254e4c78b31733c071c63e575cc6af2878", "b8815111788632de40ad5b593455bdc8ea1ca8c8", "394c105f11404922e1a4c2bd3b22be8ddea72779", "fe23ed3e6be54ae59b7373725fddbd3fa81008bc", "3b1524e9e60328e1a69a44c572a43d6cbc15e60e", "38102e02ba41d2ed947c286902ce8e1a1fdf04a8", "34f32167c55aca4a52a79bd8cc4ac01f6a7e5599", "f758d995bc46867f33cbd98ecc770736c3c0a93e", "3987de3ef041acef9251fe5b6a4310863d3b29a0", "ee12c9197963f139568d57e4f27964248898577d", "2fd2ed2d8e65285a9dba3a7ecb37a49f2fae6213", "4b365e027f68778e2d6c5a272b8fcc5a51d1a6fc", "549fcba0a86180d39c96d961a0d8718d0c7fbdf6", "e2f933a39f9518eef3b99ff682118145ac97daa5", "c7d527543868ea2835e609e072b8a6423d4d99cb", "7db9cac19c9955a7ddcf1fbf21e158e6d125789a", "e7c6c66a7cf0d212fe3b4f5cae96430b9a38c821", "3ee8639f3bf9a62f99726f3e38ef63f6ccb2a78e", "cec432c83b0f19d43e57becee42d85dcaf5d18bb", "fb70d419c6dee2cfb8a17d88e939bada07d23d9d", "d96b2950b4d0bec9e307cd5f7122a455e36a7fe2", "1a253e8bf1727f0c44a793d30e21f0a6ee0790b4", "d76a4f03a1481d52af13ba3b279907a2f407f315", "ce1f71e815a71861d4d6cb87f16751e57e8a03d2", "b8e1df346474f2086b30a4cdb2cb77034fdfc1df", "4b854d46fb90269a61dd74a029ce34afd956b103", "eb8ccc138ed3b2bb3148f22b15bc0f474986f3ba", "0996219ed0f4e350fd49064669506abb8b9c4140", "6c7b4117fcdc2fad0fc5f4ed8254171847137c46", "d08ab23f5d00fb30019827fe5a60e377be408df0", "cf8c1fddcbdbcc6a8fae1027e05578e7a3fbd212", "536fcec94a35db722945cc1f3ec5da5d6552ca05", "9a67df7d74e7db90db0ce714d81b69a4894959ec", "b9e0d733fd4deedaec664b08002855704f393e7a", "0dc1fe9a74eeb34749176f625c5e3b297d143d2d", "1053076c46c81ec037b6f9e75bbd7195d34140c5", "75f45603e8c6e48e60fa79d2f16f0da188edfd51", "241aaad2daffe0c44c243f6546aa6481f035c0d4", "e5c7d4c94394a39fd81e1288d39f6d8361584b8e", "84fe0957a1dcab9c9b7855a9969f1e1c11ea3db9", "d574512f1b04b3a84ca70a044124f5d399e66053", "10aa637bc86e1cfee6ca085053e441c021e4d109", "a9cecba96a2b1ea51481b59e4fbeef7d7da3fe0d", "c1d062dd342c0d492e24dfe004a11ad6be5eadbf", "5f4cb7f2d871333d8209c3ac4319183176c54330", "989cc0643feca571c7cc6293df0d261c2db3b9ba", "b054b2160722d0adba2ca95d55082a5401ff111e", "823496ea8fac6f0cc16dfee6aaf9eb93be8371ca", "75105b726aedab800974e93e3b663102fcc5793b", "99f3067fa37e0edf878b1ef5cfd4207d9ef04758", "9356e93435f1bb34fd92e6df42a6991eee5e00b4", "102a84bae2d3f79a4daafea29dcb0ea634703640", "ef5cafbd3acf831886504ec61e66c6dde9aa80d2", "5ba9f51aee94dae4ca6e1f4beea8b4c167687ffe", "e413ac37964cdbe88724b9f10feb3936860f0018", "b0bcccdc4a3ca05398aa171071f42d32cb274418", "3a672c25f388270dca8c2e6e6f7f1f0d0b9cd82f", "1481880d06b495f084767ec091bca664a43a0097", "358d77b3f990c3856a66550ffbc93f993076905a", "9e707e0da3ee31f85c0f0d84347a301d46569500", "119355423b44fa4367405a91f6527ce643270af4", "565b811cfb42e90af9c1435d0437aedc3946b30c", "6321072b4a7d533edc00e0817605e9ae9b1fb3b6", "b730892d996c9408384242b270acd0452ce792a2", "c970a4e77dc044150eb777e770a0f319a21de6d1", "674a6ba9877d2de7224306c83e7871e1eddeab93", "280c60ac3e918eb7fe8fb542847913bb5317cbc6", "f9276d140c2e21e1f85067a75972aaf833aad609", "e16838b2296c977ac353230ab5c1b626ffd97f9c", "0a3a6d230ab7500e34d7a71df4126f7db0ca4cc9", "ac6e6886d41b583ad6e639765763ff6bb4a30327", "2d221b99f74966daa32419428e157faa3f05d44b", "d4604ccc43fd6a5444f830cd857d2c9086c7916c", "295e121ac606ef2f01942a5a75d0d23ae5c117e2", "f6f77e96062f8651c6ecc49caa1d15072d6527d2", "aea99b38abdb5b25828668b95bf1c8ba15f611e3", "40d054d632a6a5a4adf3ddfa28baf092e18b9a68", "87a365a5ec4c62fbed266259fe61ddddc2e6c4d3", "51ae45b7462481c08fb53feaffc4d18ad4772074", "9e74a87041a8a256412a4bb247d6e4a54d745528", "e147ad5ab62e3379ea570d99ea90240039e0fc5b", "69cacd25b82edc6735ab1a31a0667616903c8ee9", "b3388bf853dd3761ca278a802a6e571f149eac49", "ed9f7f6a2298797cbb15f5c199de7a043db7e197", "6392d51780e00fc5f6f9c74b4f25c613562946fc", "5dade9a960751ed5a8a071b5d93ac39bcc132b31", "f3ceca41bc128ae4ff831e6f63038253ff4cf123", "2ee1e7b7f57b6702afd74b23dc2d2b938249c9c3", "8064816e3d14931a1d359af43f4f16fc362779d2", "c721a48c8a03370d68710789a471b58a603035d3", "3599be320366708d1a8d003b0e7d510326b437c0", "82bd24cfba91285f5da8f551f1f54f9f9375612b", "87ad14ba84342fe79855e2664c417e5c487f97e5", "b6ea5023794c9a8c0a7fa3d19109fecd0d2d221e", "6c3b943ffb930db1cc4017ba0d15a188b5a78ef0", "fff932223309a43c3e9b017a1748d0b7e632d984", "ccdb63798934b6f4bd6c1c6b30f05b42e695776f", "8324bef7c445ed742ade31086008d40cfdab4890", "1b3cf414b767f75842005f4c300e1594c4370b8b", "2a218f35420fe75636b317308490f155ff6be9ee", "5d0003be79e8fc21eb18559cbbb57408cde8e443", "5a58a70fea79b232f08364acf37e9f4c24ba324c", "eb71d3b549879dc36e385d995c88d822a821d444", "041b921f8ec876993091d2d8cf281554f086c14e", "14b3bb8a30ca4ccc1d2d1746680ded8bf8017770", "cfbd7b08ea9026dca6dcdf4678f40b22af2666e4", "1d9b36cc842c3b92c84db821f1ebc2c26205104c", "2690055fd6300c405de40292ca8cec06024e31d5", "bf894beec69afce9e59342aca1d3586f3b99c53f", "fd6c3a4b66b971d8c5f2740c30c821d07bf63188", "b37a208a0795ffe28257089e7e090a38a3b18eed", "cc8fee1eb4cfbb3e680139db030fc0d4575e6280", "869e9938044edcbfe8d8f661a37e0b85074e275d", "994150c3143fe6c15e455532f156c03e8993a4e9", "7744d28e993aa223353dec9be9a78d078a145edb", "56196fe41912ab66411b191101078234ac6a087b", "07f207c85f77924707cc61ad1947b0b033fdc947", "a9941114cdfc0c8bbce606266ffde31e5bcb2420", "254396da5b219e5007e99dfec0282d6ee4300222", "f66a9b9440a0c09e98ed21e91a8734a387811700", "138b76793c869572ef46dd348d9595071493164f", "6c11df4602cacb5b62a6f1c87529b16d4e7d1705", "e613e6662add8c6aeb4a910ee5f8da56a97638b3", "886a270d69779f88f21ab56ae36196856fb9a0cc", "e3a6039c20a3db6a1950a506960cbeae013566f5", "5b9e00f8671193108ee6374c3713e241ebc47db3", "498d134dd0bdf10697b5e44365b56519d8eccf76", "9b6ee5ebd49859f77bbec32ed327a656193f15f1", "4910eb8c161fe6b1a9de972cf87545cb213b4133", "be6705faf12b37c61abd9eb6930d94fbaae9c99a", "71c3db08226d8e35f8efb79bfea5ffd68abebfb4", "911f2369c704647526283c36490129c10c4a2f93", "cea4747d77d7ba5396b54d72432518fcb6e17250", "c3af138932f2f823ce2c65dbc3d10f92d14565b5", "535cc2695cf190cae4a02539326c1b3477db83da", "c4373c1dc85ccc9f5ff8a6633f2a8c59693dc20b", "41f61dd285a91a417f6b4d101776d33aebcaa747", "fe4c824f9b56987f54e5e97d2ac2c7f4e074e3c4", "6c839533ec9bfe44e0f78fbffbdca00d3fc85d07", "21bce08f643793a2a4d5d1c416a67f7a91ab9f92", "43f57ed0f80d8fb5d04e6baa946a2aad5251fa7a", "6c9e08cac8fbd78aa49165e3675d294be49761fa", "673e9f0cd8aae9114d7f048bd11644dc602fa1d3", "b9282a3a80ea62d0120b93a765a63ef0f7debb54", "532ad39f51997f39ee0ecc2aba7a094d80c5daac", "0114e35efab1000a0a0b5aa2d95f11f3483daaca", "040416e9a1f3dc7bd49171b76ed6a766164e6fed", "68f542aa31c3e208ee8c539bcc53e72453502ece", "7898dccbcd3a30ebc7aafe28f093fa60ec845cb3", "cc6dc3bcc1d06fd686a1ee449dce0670b7aca663", "9cda57be07ce1f9867945cf149d42ae3f7eca8fb", "081667e3fd8cf2364e923dfe797da336dc4d7873", "d2a700a84767c9a4fba98fef5b59556a00b77064", "1507bef69094d633f516cf26fcb94e5e2a6ddb7a", "b475f7c4b5fcef3b62796980d6d061c196bdac02", "de832840b6969dc838c454392aec4954af6e0c8b", "7a866a0e3d2c80bb0fffffd54678ed2e92524483", "28dc93bf69bab23f6a0e086ea22cc91c508df6ab", "0ad4050ad4013e4a3e6ba97cb3927331e1636c6e", "66db2c7e42d00783cf44264a3119df58c2eaca9c", "fe25a7204cce1dd65e137c8b6aa374aea969e4a6", "b14e3674510526cc4d6070f0c5d040af9f131a84", "2d2dab0c9e7a64aacb018a5d1ccf94ca39ef7eb1", "61141d2f6a2a4013587053826e8caa92df7ff660", "e675820abf972cfb3de28a8580c25bbc840fc4c3", "b6f7b536108dfdb86a98f76cd904f65f75153be8", "c488fa95df883dbfcdfb2aa97df5af22ba4f315a", "66b750e4a7df0614743ad8d514b9b71e01f71407", "dba52221f1b3f575232000cebddd7088643d6905", "c134cbd1974adea01a8e21c799f4796cedbdf7a6", "bd219e7f7eec3efca80283e8e1dd92996886d6be", "f58d9b31d693d479774e754a6960e2208da8be55", "a47c3b4892dc480eed0bb976136ffaeb9682eec4", "24ec2ebbfd6f75afc73f4de5bf8945d26735bfa6", "649fee53a83fec56e630893247e1cdfbb679337b", "ce2ce07f15b74894cdcd0a9291f1f31c53641282", "9edfa6440c9902186229544c41e8449da42b6b9a", "ab219db62b117720c023bdfe669abc4e05e249e4", "8e44f527d75f0f99b0ff367d4655e1866faa11f6", "c1983f2bbe1892bc7c06d7641ddd8e9488145fa3", "a53b18867bc1becda6824629373ad8dcef6c464c", "feea8a0d3c7e4912fe7929bd4f393db752cfaacf", "5e47c158ecfb630b8a8c6973ae750c90d7a8fa85", "3ce0cef7e43d11300ab8cccc34d833720434bf38", "20544d4c4b596fe00d312ec251e36a6dfdc00186", "dd8adc89e32eeeb54307fcf5be211ea8be9f2eab", "8d8932e5164140dd545ba0ab620ee6804caa607a", "b5e564536ace826e81f680e21a4fe1319f618de3", "28ddf5095c4153c16b94a0fbbd778e34a3101a7e", "0549b94bf67ec2a4cb889b42748fb6669767fb50", "960753022cd096f5a0eebdcdee7458788f779f9f", "42d2ff4b3195346aa7fabd7d1f06ba2cdffaf97e", "0a89bcddbb9d1ce0d88185823be827ca474fd6ae"], "commit": ["Fix version comment [skip ci]", "Fix link to the user mailing list", "Fix up GHA badges", "Fix Javadoc parameter scale", "Fix possible NPE in DefaultPooledObjectInfo.getPooledObjectType()", "Fix possible NPE in DefaultPooledObjectInfo.getPooledObjectToString()", "Javadoc fixes, improvements to tests * Make it clear that nulls from factory makeObject -> NPE * Disable tests that don't test anything but dump stack traces * Fix and re-enable preparePool GOP test * Add a test factory that simulates resource provider outage * Add a (disabled) test showing remaining liveness problem", "* Make sure GKOP reuseCapacity(int) executes reuseCapacity() at least once,   improving liveness. * Fixed OP test case for POOL-391 (failure was not picked up by runner before). * Make GKOP clear(K) exit immediately when there is no pool under the given key.   Prior code registers / deregisters, temporarily creating and deleting a pool. * Javadoc", "Use XSD and fix XML", "Fix checkstyle", "Better error message", "Javadoc, format, better error message, related to POOL-407", "Fix typos", "Fix broken XML.", "Suppress PMD EmptyCatchBlock from ruleset Error Prone 429", "Fix copy/past error.", "Fix test formatting, replace deprecated method in new test cases.", "Fix XML typo.", "Fix formatting.", "Fix Javadoc.", "Fix tests (again, failing on GH, ok, locally).", "Fix typos.", "Fix tests (again, failing on GH, ok, locally).", "Fix tests (again, failing on GH, ok, locally).", "Fix tests (again, failing on GH, ok, locally).", "Fix tests (again, failing on GH, ok, locally).", "Fix tests.", "Fix toString message and exception message.", "Fix Javadoc link reference #91.", "Fix worng javadoc. (#91)", "Put fix section first.", "Add and use AbandonedConfig.copy(AbandonedConfig) to fix CPD code duplication issues in GenericKeyedObjectPool and GenericObjectPool.", "Fix generics formatting.", "Fix formatting.", "Enable Javadoc for Java 11 and up now that https://bugs.openjdk.java.net/browse/JDK-8212233 has been fixed. Note that the current Java 11 version is 11.0.11.", "Add and fix @deprecated Javadocs.", "Fix generics warnings, remove unused exceptions, don't override @AfterEach method name, remove unused imports.", "Fix [WARNING] Old version of checkstyle detected. Consider updating to >= v8.30.", "Fix due-to attributes.", "Fix Checkstyle configuration DTD link.", "Fix PMD issue.", "Fix typoe", "Fix old codehaus issue link", "Fix GitHub action for Java 15-ea.", "Refactored EvictionTimer usage tracking to fix POOL-386 and handle abandoned pools. (#32)", "Fix a couple of IDE nags to the code is clean in my IDE", "Fix build on Java 15-ea.", "Fix Checktyle issues.", "fixing baos violation (#26)", "Complete fix for POOL-326", "Update to reflect fix for POOL-376.", "Fix mailing list page's SCM page link.", "Fix the site's source repository link.", "Fix the site's source repository link.", "[POOL-367] Fix typo in package private method name stopEvitor() -> stopEvictor() #22.\"", "(typo) Fix evictor typo (#22)", "Fix javadoc warning", "Fix Javadoc link. Closes #21.", "Fix for POOL-363 (#20)", "Fix Javadoc nits.", "[POOL-352] CallStackUtils mishandles security manager check (partial fix.)", "Fix compiler warnings.", "Reformat code & fixed some typo. Closes #19.", "NO-JIRA: Fix failing rat check #18.", "fix pom to properly treat GIT", "POOL-356 fix deadlock on massive concurrent requests", "Fix Javadoc nit. Better local var names.", "Fix PMD violation: Avoid modifiers which are implied by the context.", "Fix POOL-337. Ensure cancelled eviction tasks are removed from scheduler. Includes a test case based on a patch by Reinald Verheij.", "Fix release date for the unreleased next version.", "Fix Javadoc links to java.util.concurrent.locks.ReentrantLock.", "Fix typo", "[POOL-336] GenericObjectPool's borrowObject lock if create() fails with Error.", "Fix typo", "Fix autoboxing warnings", "Fix unused import warning", "Fix indentation", "Fix a Java 9 IDE nag. Ensure possible exceptions are handled.", "Fix import order", "Fix typos in Javadoc", "Fix checkstyle errors", "Fix Maven Central badge.", "Update maven-checkstyle-plugin from 2.12.1 to 2.17. Fix SCM URL.", "fix java 6 build on travis by using precise distribution", "README.md: fix link to homepage", "README.md: fix travis-ci badge", "Redo Javadoc fix (props Gary)", "Fix generics compiler warnings.", "Fix issue reported on users list. Ensure that a call to GKOP preparePool() takes account of other threads that might create objects concurrently, particularly the Evictor.", "Additional fix for POOL-315. Thanks to Keiichi Fujino Also review previous fix.", "Fix transposed digits", "Fix POOL-351 Add a configurable delay (default 10 seconds) to wait when shutting down an Evictor to allow the associated thread time to complete and current evictions and to terminate.", "Fix POOL-310 Ensure that threads using GKOP do not block indefinitely if more than maxTotal threads try to borrow objects with different keys at the same time and the factory destroys objects on return.", "Re-working of fix for POOL-303", "Partial fix for regression in fix for POOL-303. Remove interrupt calls where they can't help.", "Fix POOL-307 Replace inefficient use of keySet with entrySet in GKOP.", "Fix POOL-306 Ensure BaseGenericObjectPool.IdentityWrapper#equals() follows the expected contract for equals().", "Fix various IDE warnings", "[POOL-309] Fix misspellings from destory\" to \"destroy\". interupt -> interrupt\"", "[POOL-309] Fix misspellings from destory\" to \"destroy\". interupt -> interrupt\"", "[POOL-309] Fix misspellings from destory\" to \"destroy\".\"", "Fixed javadoc typo.", "Fixed javadoc typos.", "Fix typo in description of POOL-297 fix in Commons Pool 2.4.1 changelog.", "Fixed javadoc typo. Thanks to Oleksandra. JIRA: POOL-294.", "Fixed incorrect JIRA reference.", "Fixed misleading javadoc (does not throw if there is no capacity to create).", "Fixed mis-placed changes.", "Fix POOL-289. Patch by Luke Winkenbach Fixed class loading for custom EvictionPolicy implementations that may not be present in the class loader hierarchy of the Pool classes by falling back to the class loader of the current class.", "Fixed GKOP evictor capacity leak.  JIRA: POOL-287. Reported by Caleb Spare.  Patched by Thomas Neidhart.", "Fixed errors in comments; reduced execution time of POOL-259 tests.", "Eliminated possibility that DefaultPoolObject#getIdleTimeMillis() could return a negative value. Use by pool implementations would not hit this bug. JIRA: POOL-279", "Fix POOL-281 Fix a potential infinite loop in the underlying Deque implementation. Use solution from http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/jdk7/java/util/concurrent/LinkedBlockingDeque.java?revision=1.1&view=markup which is licensed to the public domain.", "Fix incorrect @GuardedBy object", "Fix loop condition for POOL-277 (will fail under concurrency), some more tests, whitespace fix", "Improve fix in r1626998 (itself an improvement on the fix for POOL-161) Handle the case where the developer has explicitly set the TCCL to null during the construction of the pool.", "Fix POOL-276 Ensure that objects are not validated on borrow when testOnBorrow is set to false, testOnCreate is set to true and the pool is exhausted at the point borrowObject() is called.", "Fixed error in GenericKeyedObjectPool constructor causing minEvictableIdleTimeMillis to be used in place of timeBetweenEvictionRunsMillis in eviction timer setup when a GenericKeyedObjectPoolConfig instance is supplied to the constructor.", "POOL-263 Fix a threading issue that meant that concurrent calls to close() and returnObject() could result in some returned objects not being destroyed.", "Fixed javadoc typo.", "Fix typo", "Fix line endings in each of the src distros", "Fix POOL-249 (Java 8 javadoc fixes) with a patch by Ville Skytt\u00e4 Also fix all the remaining Javadoc warnings", "Correct bug ID", "Further fix for POOL-248. Ensure ISE is thrown with or without an AbandonedConfig.", "Fix POOL-248 Ensure that if an attempt is made to return an object multiple times that the current active and idle object counts are not corrupted.", "Added 2.1 api docs, fixed broken link.", "Fixed error in comment.", "Fixed wording, made compat explicit.", "Revert incorrect change of version, release description.", "Remove a duplicate null check and fix some typos in PoolUtils. Based on a patch by Bruno P. Kinoshita.", "Fixed typo.", "Added missing create counter decrement in GenericKeyedObjectPool create method on factory exception path. Prior to this fix, exceptions thrown by factory makeObject calls could leak per key capacity.", "Fix typo", "Fix POOL-241 Patch from Bruno P. Kinoshita to expand coverage of unit tests.", "Fix the IDE warnings", "Implement the fix for POOL-240 in GOP suggested by markt. JIRA: POOL-240", "Javadoc only. Fixed typo; clarified create contract.", "[POOL-238] Partial fix. These pools all use String so be specific.", "Fix Findbugs gremlin that appeared because class was made public", "Fix hanging ant build", "Fix up eolstyle", "Fix Javadoc links", "Fix some low hanging IDE warnings", "Fix some more Javadoc warnings", "Fix Javadoc warnings by deleting Javadoc :) Allow the methods to inherit the Javadoc from the interface (it had been copied and pasted to/from there anyway).", "Fix some more checkstyle warnings", "Fix some more checkstyle warnings", "Fix some Checkstyle errors", "Fix some Checkstyle errors", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Fix some FindBugs warnings", "Move comments inside outer element so it is easier to see which comment applies to which exclusion. Fix a couple of false positives.", "Fix a thread-safety issue highlighted by FindBugs", "Fix some thread-safety issues in debug code highlighted by FindBugs", "POOL-211 Add a test case for logging the last used stack trace and fix a bug it highlighted.", "Fix various Javadoc and other IDE warnings", "Fix various Javadoc warnings", "Fix various Javadoc and other IDE warnings", "Fix typo", "Fix a TODO", "Fix up URLs so they point to actual sites; this allows relative URLs to work properly", "Fixed version of maven-scm-publish-plugin. Might be, we should do this in the parent?", "fix javadoc links", "Fix FindBugs warning of possible overflow", "Fix more IDE warnings", "Fix various IDE warnings", "Fixed threadsafety problem in GOP, GKOP invalidateObject. JIRA: POOL-231.", "Fixed eclipse warning wrt raw type.", "Fix typo", "Find Bugs review of GOP", "Find Bugs review of GKOP", "Fix various minor issues: - comment typos - Unnecessary assignment (FindBugs)", "Fix bug (always setting initCause to null) identified by FindBugs (and hence redeeming FindBugs from the pointlessness of POOL-220).", "Fix POOL-217 Use an IODH for PoolUtils.MIN_IDLE_TIMER Based on a patch by sebb", "Fixed javadoc typo.", "Removed obsolete @author property, fixed some typos, dropped reference to non-existent pool impl.", "POOL-222 - bug in javadoc markup for BaseGenericObjectPool#getLifo()", "POOL-222 - bug in javadoc markup for BaseGenericObjectPool#getLifo()", "Fix POOL-219. Replace references to the removed StackObjectPool.", "Some more issues fixed in 2.0", "Some more issues fixed in 2.0", "Fix POOL-221. Remove unnecessary volatile.", "Fix POOL-220. Update javadoc for compareTo", "Fix problem with MBean attribute names. Add same tearDown debug code to GKOP tests.", "Findbugs reported that the tryLock() status was not being checked. Fix the code to use unconditional lock() instead.", "Add specific test for null factory TODO causes tearDown error", "Fix remaining test errors by providing a non-null factory", "Fix POOL-216. Efficiency improvements.", "Pull up maxWaitMillis Fix a few volatiles missed in previous pull-ups", "Alternative fix suggested by sebb", "Fix an Eclipse warning", "Test seems to work so let's enable it. If it proves to be a problem, it should be fixed with @Ignore, not @SuppressWarnings", "Fix indent", "Fix references to renamed methods", "Fix Javadoc warning (ObjectPoolFactory -> PoolableObjectFactory) Update prose now references to deleted implementations has been removed. Re-phrase prose so we no longer have a misplaced apostrophe.", "Fix path for Javadoc generation", "Fix up classpath for test resources", "Fix up to latest version of template", "Fix POOL-212 for GKOP.", "Fix typo", "Fix POOL-161. Patch provided by Sylvain Laurent. Ensure the evictor thread runs with the same class loader that was in use when the pool was created to ensure that the factory class is visible.", "Fix failing (worked on my desktop, failed on CI and my laptop). Add some notes.", "Fix POOL-100. Make eviction policy configurable. Includes a simple test case.", "Fix POOL-207 Remove unnecessary null check and simplify code in a few places.", "Fix POOL-176. Add support for softMinEvictableIdleTimeMillis to GKOP.", "Fix POOL-202. GKOP: Make clearing of eviction iterators thread-safe. GOP: Align with GKOP.", "Fix POOL-205. Consistent locking for poolKeyList", "Fix POOL-206. Stop the evictor before closing the pool.", "Fix POOL-159. Expose (an estimate of) the number of threads blocked waiting for an object from the pool.", "Fix POOL-199. Ensure only one thread can call evict() at a time. Use a dedicated (more fine-grained) lock rather than locking on the object.", "Remove the Factories and fix the build", "Fix POOL-201. Remove unnecessary generics from Config classes", "Fix POOL-200 for GKOP. Use accessors.", "Fix POOL-200 for GKOP. Use accessors.", "Make write-once private object final, and fix safe publication issue.", "Fix POOL-182. Improve multi-threading test by recording results per thread and aggregating at the end rather than trying to maintain a single set of results throughout. Based on a patch by Zoltan Farkas.", "Fix warning", "Fix POOL-183. Added a getter for the factory that can be used to validate objects.", "Fix POOL-193. Make startEvictor(long) synchronized. Also aligns it with GKOP.", "Fix POOL-195. Make protected method final as it is called from constructor.", "Fix POOL-195. Make protected method final as it is called from constructor.", "Fix POOL-196. Avoid threading issues for getActiveTimeMillis()", "Fix POOL-197. More consistent init of timing attributes.", "Fix POOL-198. Make protected things private.", "Parial Javadoc fix (BlockingDeque is Java 1.6+)", "Fix typo", "Stop multiple calls to close() triggering an JMX error", "Stop multiple class to close() triggering an JMX error", "Fix regression in r1158831 Deque (Java 6 interface) -> LinkedList (Java 5 implementation)", "Fix a bug in eviction that could see a destroyed object returned to the idle object pool if: - it was being validated by the evictor - validation failed - an attempt was made to borrow the object during validation", "Increase hold time to fix Continuum failure", "Fixed test failures due to factory reset no longer supported.", "Fix typo", "Fix some Eclipse warnings", "Fix POOL-188. Remove confusing method PoolUtils.ErodingKeyedObjectPool.numIdle(K key). Patch by sebb", "Fix typo", "Fix indent", "Make Phil's suggested changes to (hopefully) fix issues when testing with commons-performance", "Fix possible NPE if forced creation fails", "Fix various Eclipse warnings prior to re-writing the core object allocation code", "fixed changelog for 2.0 release according to what discussed on ML", "fix for POOL-187: TestGenericKeyedObjectPool.testMaxTotalLRU method falls in an infinite loops parametrization was right, problem is that I accidentally merged obsolete code :(", "fixed package references added generics to samples", "fixed broken links on package javadoc descriptors", "fixed compilation problems on Continuum TODO:  - checkedTests cannot be performed since the compiler already does the check  - generics warnings have to be completed", "fixed generics in EvictionTimer class", "Fix POOL-184. Concurrent borrowObject() and evict() can trigger inappropriate pool starvation. Test case based on a patch by Adrian Nistor.", "Fix POOL-184. Concurrent borrowObject() and evict() can trigger inappropriate pool starvation. Test case based on a patch by Adrian Nistor.", "Fix POOL-181. Make BaseObjectPool.isClosed() public", "Fix POOL-181. Make BaseObjectPool.isClosed() public", "Fix POOL-180. Only stop tracking objects for a key when there are no idle objects, no active objects and no objects being processed.", "Fix POOL-180. Only stop tracking objects for a key when there are no idle objects, no active objects and no objects being processed.", "Update change log with POOL-179 fix", "Fix POOL-179. Correctly handle InterruptedException whilst waiting for an object from the pool. Based on a suggested patch by Axel Gro\u00dfmann", "Fix POOL-179. Correctly handle InterruptedException whilst waiting for an object from the pool. Based on a suggested patch by Axel Gro\u00dfmann", "Fix some Eclipse warnings", "added (Phantom|Weak)Reference pool implementations fixed wrong import on SoftReferenceObjectPool", "fixed key type, it has to be the generic K rather than Object", "fixed non-synchronized methods", "fixed IAE in broken tests", "Javadoc; generic warning fix", "Fix Javadoc references I noticed in the Gump failure message.", "fixed copyright year", "fixed artifact name and package in ant build", "maven-checkstyle-plugin 2.1 -> 2.3 (2.4 fails with Embedded error: Error rendering Maven report: Failed during checkstyle configuration TreeWalker is not allowed as a parent of Header\")\"", "Document generic warning; fix incorrect type letter", "Fix test to use JUnit4 style expects", "fixed deprecated properties direct access added missing setters syncronized mutable properties (s|g)etters finalized the factory reference", "fixed the <E>/<T>/Object mix signatures", "removed test that explicitly required a null factory fixed broken tests", "fixed broken tests", "fixed generics removed deprecated constructors removed deprecated Factory setter properties made private added missing syncronized setter(s) updated related testcase", "Ant build fix for not forcing Ant to have JUnit on its classpath.", "fixed ObjectTimestampPair deprecations", "humorized the compiler to fix the ambiguous 'prefill' method signature. FIXME: when using Object as K the methods signature match", "Fix raw type issue", "Fix Javadoc and missing tags", "Fix Ant build to use Junit jar from M2 local repository. Shall we use Ivy for Ant builds?", "COMMONSSITE-57 Fix announce mod_mbox link (I used version 1.4-SNAPSHOT of the commons-build-plugin to do this - need to release it and update commons-parent at some point)", "Fixed version reference.", "Fixed typos in comment.", "Fixed javadoc typo.", "Partial fix for POOL-161 The default context class loader for the eviction thread needs to be the same class loader that loads the library else memory leaks can occur in multiple class loader environments", "Fix up jakarta download references", "Fix and expand failing OOME test case Add consistent handling for Throwables that are normally swallowed including always re-throwing certain Throwables", "Provide a test case and fix POOL-162 based on Phil's suggestion.", "Package oacp.composite no longer exists; remove test case references Fix indentation on rest of test cases", "Fix description", "Fixed error in close javadoc. JIRA: POOL-154.", "Updated changelog for POOL-152 fix.", "Fix POOL-152. When borrowing an object if a new object is created but validate fails, the latch should not be returned to the queue as an exception will be thrown.", "Fix POOL-149. Any test that uses latch.getPair() to determine if an object has been allocated, should also check latch.mayCreate() This corrects two possible failure modes: - threads waiting indefinitely for objects regardless of whether or not an object is available - leaks in the internal processing count that could lead to pool exhaustion", "Fix private method misspelling: calculateDefecit -> calculateDeficit.", "Fix private method misspelling: calculateDefecit -> calculateDeficit.", "Fixed error in release notes.", "Fix error is tests. All tests still pass.", "Fixed license formatting and suppressed checkstyle warnings for this class.", "Fix POOL-146. Handle the case where one key has reached maxActive but other keys have not. Prior to this patch, once a latch associated with the key that had reach the front of the allocation queue, all allocations would be blocked until a suitable object was available. With this patch if maxActive is set, allocate() looks at every object in the allocation queue (subject to any totalActive limit) rather than just the first.", "Fix silly error in test case. Add a short wait to work around possible timing issues.", "Fix comment typo", "Fix POOL-147. It was possible for a thread to enter an infinite wait when it had already been allocated an object", "Fixed some missing / incorrect links.", "Fix POOL-145. Don't check the same idle object multiple times in a single evictor run.", "Fix POOL-144 and related issues for GOP and GKOP.", "Fixed download link.", "Fix root cause of error reported by sebb with testEvictorVisiting() on the dev list. When adding objects to the toDestroy list, need to remove them from the pool to ensure cursors are kept up to date. Make all places where this happens consistent with each other and, as much as possible, GOP as well.", "Revert r781166 as further discussion has suggested this too is fixing symptom rather than cause.", "Factory methods *should not* be called from within syncs. Fix copy/paste error in r774007. Part of fix for POOL-125", "Revert r780905 as discussed. Alt fix to follow.", "Increase testEviction2 initial delay by 10% to reduce timing errors Capture and report visitCounts when two\" checks fail.\"", "Added more info to failure error message.", "TestThread booleans need to be volatile to work reliably across threads Add Throwable field to save errors when they occur Document fail() reasons Thread.sleep() only generates InterruptedException", "Fixed xml to work with maven 2 changes plugin.", "Fix POOL-139. Make StackKeyedObjectPool._totActive thread safe", "Fix two issues that, oddly, had the same fix. 1. clearOldest() was called from inside a sync block. clearOldest() uses factory methods so must not be called from inside a sync block to prevent possible deadlocks. 2. clearOldest() calls allocate which set up a recursive call to allocate() which in turn emptied the allocation queue. This caused breakage as the recursive call unwound and items expected to be in the allocation queue were no longer there.", "Fixed javadoc typo.", "Fixed javadoc typo.", "Add Phil's test case for WHEN_EXHAUSTED_GROW and fix the bug it identified. When growing the pool, still need to remove the latch from the allocation queue and increment the internal processing count.", "Fix for POOL-137. Correct inconsistent synchronization.", "Fix POOL-75 for GKOP. Objects are now allocated to threads in the order in which the threads made their request.", "Correct bug in patch for POOL-75. If allocation fails, latch should be removed from allocation queue.", "Modify test to include additional check. Identifies bug in fix for POOL-75.", "Fix POOL-75 for GOP. Ensure objects are allocated in the order in which threads ask for them.", "Fix a bunch of Eclipse warnings in the test cases", "Fix POOL-135 for GKOP.", "Fix POOL-135 for GOP.", "Fix POOL-125 Ensure we don't call factory methods from inside a sync block to prevent deadlocks like DBCP-44", "Rename prior to using when fixing POOL-125", "Fix POOL-107. Narrow synchronisation to where it is needed and ensure that calculations related to pool limits take account of objects we are in the process of making, particularly via the Evictor thread creating minIdle objects. This patch removes a possibility for deadlock (DBCP-44) but introduces the edge case that where (idle==0 && (active + 1)==maxActive && minIdle>0) a pool may appear to be exhausted to a client if the evictor thread is in the process of creating the last object when the client calls borrowObject(). This is really only an issue if the pool is configured with WHEN_EXHAUSTED_FAIL. The patch also aligns synchronisation strategies between GOP and GKOP. This means less synchronisation in GKOP.", "Fix some minor Eclipse warnings", "Fix POOL-121. Give the timer thread a more meaningful name.", "POOL-122. Reduce scope of fix to just OOME.", "Fix POOL-122. Given that stdout and stderr are the only options available for logging, don't log any more or less than previously but give the evictor a chance to carry on.", "Backported fix to softMinEvictableIdleTime test from 1.3 release branch.", "Fix POOL-133. Make sure active count is decremented even if destroyObject() throws an exception", "Fixed download link.", "Fixing the assemblies to say project.version instead of version to stop '2.4.1' leaking through from the JVM properties. Also making it project.artifactId while I'm doing this.", "Fix compiler warning: Access to enclosing constructor GenericKeyedObjectPool.ObjectQueue() is emulated by a synthetic accessor method. Increasing its visibility will improve your performance", "Fix Javadoc copyright year.", "Fixed javadoc links.", "Fixed an error introduced in r385746 (post-1.3 changes to improve exception management). When passivate throws an exception while returning an object, after destroying the instance, numActive needs to be decremented.", "Fixed an error introduced in r385746 (post-1.3 changes to improve exception management). When passivate throws an exception while returning an object, after destroying the instance, numActive needs to be decremented.", "Fixed typos.", "Ensure that _numActive is always incremented *before* starting makeObject and is decremented *after* destroyObject completes. Otherwise, while destroys are in progress, makes may kick off, resulting in too many concurrent instances.  Test cases illustrate an unreported bug in pool 1.2, which does not affect 1.3. These changes should have been included in r602765.", "Ported changes from 1.4 release branch to fix an error in the GenericKeyedObjectPool constructor that takes a Config instance as a parameter. The minIdle setting in the Config was being ignored by the constructor. Also added tests for all GKOP constructors.", "Fixed an error in the GenericKeyedObjectPool constructor that takes a Config instance as a parameter. The minIdle setting in the Config was being ignored by the constructor. Also added tests for all GKOP constructors.", "Fixed version number.", "Fixes to address POOL-86 * Made LIFO/FIFO behavior configurable for GenericObjectPool and   GenericKeyedObjectPool, with default set back to LIFO   (reverting to 1.2 behavior) * Fixed GOP, GKOP evict method and added tests to ensure objects   are visited in oldest-to-youngest order * Changed backing store for GOP, GKOP pools back to Commons Collections   CursorableLinkedList (brought this class in, repackaged with   package scope). JIRA: POOL-86", "Fixing svn locations after TLP move", "Fixing the mailing list addresses", "Fixed javadoc to match behavior when maxWait is 0 (blocks indefinitely if exhausted action is block).", "Fixing the Config.softMinEvictableIdleTimeMillis handling as per POOL-95", "Fixing typo in the word evcition", "Fixed the copyright header", "Better fix for POOL-82 reverted Test[Keyed]ObjectPoolFactory sources and updated the project.xml to only include the correct unit tests and include previously missed unit tests.", "Fixes bug 39341: javadocs indicated that maxActive, maxIdle, and maxTotal were per key for GenericKeyedObjectPool when they are for the whole pool.", "GenericObjectPool mindIdle and GenericObjectPoolFactory softMinEvictableIdleTimeMillis bug fixes.", "Fix: optimization where EvictInvalidFrequencyMillis is less than EvictIdleMillis could be optimized out had the comparison backwards.", "Implemented composite.Manager unit tests. Refactored some unit test code in the base pool package for reuse by other tests. Fixed some bugs where if the PoolableObjectFactory threw an Exception, the pool would think an object has been returned more than once. Other minor improvements found while pondering code for unit test creation.", "Unit tests for the composite Lender implementations. Bug fix in EvictorLender where two EvictorLender instances chained would delay getNumIdle from detecting idle objects that have been evicted.", "Fixed 18 instances of the misspelled word eligible\" (was \"eligable\") in Javadocs.\"", "Fixed a bug where the InvalidEvictorLender didn't properly unwrap objects before passing them to the PoolableObjectFactory.", "Edited all JavaDocs in the pool package. Fixed spelling mistakes. Improved consistancy. Updated examples. Clarified expectations. etc.", "Improved behaior of SoftReferenceObjectPool while trying to fix related unit tests. Changes will help getNumIdle() be more accurate with minimal overhead.", "Fixed memory sensitive unit tests when run under some situations. Improved speed at which memory sensitive unit tests complete.", "Corrected contract bug in javadocs. Original patch contributed by Anton Tagunov. Committed patch contributed by Sandy McArthur. Issue #35543.", "Fixs eviction behaviour through more efficient and accurate implementation. Fix described by Thomas Sch\u00fcrger. Contributed by Sandy McArthur. Issue #33265.", "Fix issue 31900. Patch supplied by Sandy McArthur. Thanx :)", "fixing pmc from name to url", "Bug 37314 - Fixes to POMs", "Bug 37314 - Fixes to POMs", "Fix for bug that could (in certain circumstances) result in the pool blocking for up to twice the desired maximum. Spotted by Sandy McArthur. Issue #37337.", "ASF Bugzilla Bug 34296 [pool] Potential pool leak if _factory.makeObject() throws a Throwable", "ASF Bugzilla Bug 34935 [pool] changes the borrowObject method so it advoids catching an exception - patch by Sandy McArthur", "ASF Bugzilla Bug 34934 [pool] clean up some JavaDoc warnings - patch by Sandy McArthur", "ASF Bugzilla Bug 34902 [pool] StackObjectPool.releaseObject(...) has silly behavior when the pool is full - report & patch by Sandy McArthur", "Bugzilla Bug 31298:\tsetMinIdle feature implemented for GenericKeyedObjectPool - original patch from Bowler Simon", "Bugzilla Bug 30426:\t[pool] need property for removing objects above min - applied patch from David Rosenstark (with some cleanups)", "Bugzilla Bug 29863 - implement the Keyed\" version of the fix\"", "Bugzilla Bug 27493: GenericKeyedObjectPool: maxTotal limit enhancement - apply patch from Todd Carmichael with minor modifications", "Bugzilla Bug 28619: GenericObjectPool: Swallowed Exception - improve error messages", "Bugzilla Bug 29912: [pool] Compilation under 1.5: enum keyword - use unsynchronized iterator", "Bugzilla Bug 29863:\tGenericObjectPool.setMaxActive(0) allows an infinite number of instances - junit test", "Bugzilla Bug 29863:\tGenericObjectPool.setMaxActive(0) allows an infinite number of instances - fixed => setMaxActive(0) allows no connections", "Testcase for Bugzilla Bug 28918: SoftReferenceObjectPool", "Bugzilla Bug 28638: Not possible to extend GenericObjectPool.returnObject() without affecting addObject() - remove the slimy dependency between the two methods ;-)", "fix title", "fix variable not used warnings", "Bugzilla Bug 24864: GenericKeyedObjectPoolFactory Config Constructor is incorrect - config.maxTotal added", "fix page title", "Improve error message when no validated object could be created suggested by Chris Handorf", "Fixed typos in apache licenses", "classes directory at jar top level fix by Stefan Bodewig", "Bugzilla Bug 22597:  minIdle Functionality", "Bugzilla Bug 19614: [DBCP] Poor performance under load Bugzilla Bug 22229: [DBCP] Foul connection causes livelock of all pool operations", "Bugzilla Bug 22078   [DBCP] testOnBorrow fails if setAutoCommit() throws an exception", "Bugzilla Bug 22078   [DBCP] testOnBorrow fails if setAutoCommit() throws an exception", "- fix non-existing mailing list archive server (archives.apache.org) - add me as developer", "Use <source> to fix issue 21838: Weird HTML makes the pool example doc hard to read", "fix javadoc warnings", "apply Anna Kreglewska's patch to bug 17990, fixing sync problem in returnObject", "fix issue 18062 by throwing NoSuchElementException when an newly created object is invalid.  This prevents an endless loop caused by invalid factory configuration.", "* change <unitTest> pattern so it only invokes the root test suite (otherwise the tests are run twice) * correct <inceptionYear> * fix description fields * fix spelling of waldhoff", "fix bugzilla bug #12841 -- use sleeptime instead of _timeBetweenEvictionRunsMillis in sleep call, in case _timeBetweenEvictionRuns is changing", "fix non-postive max active bug along the lines of Amund Elstad's patch make similiar change to GenericKeyedObjectPool add tests for this bug", "fix bug noted by Patrice Thiebaud, in which Evictor (when running) would evict all object when _minEvictableIdleTime is non-positive", "Fix LICENSE name in the build file to match the file in CVS", "fix concurrent modification bug in StackKeyedObjectPool, and add a test that demonstrates", "fix some cut and paste errors", "(oops, forgot the add) apply John McNally's javadoc overview patch, and some related changes (see bug 8082 - http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8082)", "apply John McNally's javadoc overview patch, and some related changes (see bug 8082 - http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8082)", "applied changes described in bug 7519 http://nagoya.apache.org/bugzilla/show_bug.cgi?id=7519"], "metric": [["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "0", "0", "5", "11", "301", "1", "0", "0", "0", "0", "1", "0", "4", "23", "0", "-7", "0", "0", "2", "0", "0", "0"], ["1", "5", "17", "15", "1", "3", "19", "15", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "5", "4", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "13", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "6", "2293", "2293", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "143"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "94", "90", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "32", "32", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "8", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "13", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "12", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["3", "4", "3", "3", "0", "0", "0", "0", "2", "2", "143", "131", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "6", "24", "32", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "0", "2"], ["1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "14", "27", "29", "31", "0", "0", "0", "0", "0", "0", "14", "1", "1", "27", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "9", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "3", "3", "147", "0", "0", "0", "0", "0", "1", "0", "2", "8", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "8", "91", "16", "4", "12", "148", "84", "0", "0", "0", "0", "1", "0", "3", "13", "11", "10", "0", "0", "2", "5", "0", "3"], ["2", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "24", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "5", "4", "1", "2", "43", "1", "0", "0", "0", "0", "0", "0", "1", "3", "0", "2", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "1", "2"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "718", "718", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "35"], ["1", "2", "1", "7", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "5", "54", "49", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "9", "76", "149", "149", "0", "0", "0", "0", "0", "0", "9", "2", "2", "29", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "0", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "7", "25", "9", "1", "1", "70", "0", "1", "1", "3", "0", "1", "0", "0", "1", "0", "2", "0", "0", "2", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "1", "2", "64", "1", "1", "1", "5", "0", "0", "0", "1", "5", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "10", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["7", "19", "2", "2", "0", "0", "0", "0", "4", "4", "15", "5", "0", "0", "0", "0", "0", "0", "0", "0", "7", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "8", "11", "8", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["1", "4", "4", "4", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "13", "66", "60", "1", "1", "1", "0", "1", "1", "5", "0", "0", "0", "1", "0", "0", "2", "0", "0", "5", "5", "5", "5"], ["1", "2", "45", "46", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "55", "11", "1", "3", "5", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "2", "0", "0", "2"], ["2", "3", "0", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "5", "23", "19", "0", "0", "0", "0", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5"], ["1", "1", "2", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "9", "7", "4", "2", "5", "5", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1", "0", "0", "5", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "5", "1", "1", "0", "0", "1", "1", "3", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "8", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "9", "4", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "49", "19", "1", "4", "27", "0", "1", "1", "4", "0", "0", "0", "1", "2", "0", "2", "0", "0", "3", "5", "0", "2"], ["0", "0", "0", "0", "2", "2", "8", "8", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "1", "1", "64", "0", "1", "1", "6", "1", "1", "0", "0", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "15", "9", "1", "1", "17", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "1", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "1", "1", "20", "7", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "3", "14", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "4", "12", "4", "2", "14", "69", "12", "1", "1", "5", "0", "0", "0", "2", "2", "0", "7", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "1", "1", "18", "0", "1", "1", "5", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "5", "11", "3", "1", "16", "46", "17", "1", "1", "4", "0", "0", "0", "1", "1", "0", "5", "0", "0", "2", "0", "0", "5"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "47", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["13", "22", "0", "0", "7", "35", "2", "1", "1", "1", "6", "0", "0", "0", "7", "0", "0", "0", "0", "0", "13", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "1", "1", "2", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "2", "2", "2", "26", "1", "1", "1", "4", "0", "0", "0", "2", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "6", "0", "3", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "1", "3", "21", "1", "1", "1", "5", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "5", "9", "590", "1", "1", "1", "8", "3", "3", "0", "2", "45", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "7", "10", "9", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "4", "17", "3", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "1", "1", "0", "3"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "3", "50", "72", "72", "0", "0", "0", "0", "0", "0", "3", "0", "0", "45", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "4", "6", "6", "4", "0", "0", "0", "0", "0", "0", "4", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["3", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["1", "5", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "5", "10", "39", "39", "0", "0", "0", "0", "0", "0", "5", "0", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "3", "15", "109", "86", "1", "1", "33", "0", "0", "0", "3", "10", "0", "6", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "30", "23", "0", "0", "0", "0", "0", "0", "1", "2", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "17", "70", "78", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "2", "2", "1", "1", "9", "0", "0", "0", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "4", "19", "31", "31", "1", "2", "7", "0", "0", "0", "4", "0", "0", "8", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "5", "9", "6", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "10", "25", "32", "0", "0", "0", "0", "0", "0", "3", "4", "0", "5", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "4", "12", "9", "1", "1", "8", "0", "0", "0", "2", "1", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "17", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "1", "3", "41", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "5", "17", "19", "16", "0", "0", "0", "0", "0", "0", "5", "0", "0", "9", "0", "0", "0", "0", "0", "0"], ["6", "15", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "0"], ["5", "19", "18", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "7"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["2", "8", "12", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "2", "8", "9", "6", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "12", "24", "18", "2", "16", "42", "37", "0", "0", "0", "0", "0", "0", "2", "0", "0", "8", "0", "0", "1", "0", "0", "5"], ["2", "2", "11", "3", "2", "2", "136", "0", "0", "0", "0", "0", "0", "0", "2", "8", "0", "2", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "4", "0", "0", "0", "0", "1", "1", "9", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "5", "26", "35", "35", "0", "0", "0", "0", "0", "0", "5", "0", "0", "10", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "5", "6", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "2", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "6", "14", "11", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "29", "29", "29", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "26"], ["0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "9", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "6", "13", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "4", "0"], ["0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "220", "220", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "13"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "9", "36", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "6", "42", "16", "1", "1", "93", "0", "2", "2", "2", "0", "1", "0", "0", "5", "0", "0", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "58", "85", "85", "0", "0", "0", "0", "0", "0", "1", "0", "0", "25", "0", "0", "0", "0", "0", "0"], ["4", "11", "70", "5", "1", "2", "40", "0", "1", "1", "3", "0", "0", "0", "1", "2", "0", "4", "0", "0", "4", "6", "0", "4"], ["1", "2", "2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "11", "39", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "2", "2"], ["2", "3", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "35", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "-1"], ["2", "8", "165", "155", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["3", "3", "0", "73", "3", "3", "0", "159", "0", "0", "0", "0", "0", "3", "0", "0", "7", "8", "0", "3", "0", "0", "8", "0"], ["4", "9", "12", "14", "2", "3", "5", "6", "0", "0", "0", "0", "0", "0", "2", "0", "0", "8", "0", "0", "4", "0", "0", "6"], ["1", "6", "6", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["1", "7", "6", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "91", "65", "0", "0", "0", "0", "0", "0", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "8", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "5", "0", "1", "1", "57", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "3", "21", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "6", "2", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "10", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "13", "25", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "7"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "10", "15", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "5", "1", "2", "0", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "18", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "5", "26", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "16", "83", "82", "0", "0", "0", "0", "0", "0", "1", "0", "0", "14", "0", "0", "0", "0", "0", "0"], ["1", "4", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "2", "2", "0", "1", "1", "43", "0", "1", "1", "4", "0", "0", "0", "1", "3", "0", "1", "0", "0", "2", "0", "0", "2"], ["2", "2", "2", "0", "1", "1", "45", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "14", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "14", "8", "1", "2", "12", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["6", "8", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "0"], ["5", "5", "50", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "1", "4", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["0", "0", "0", "0", "1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "6", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "7", "32", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "13", "10", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "79", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "13", "0", "13"], ["1", "45", "70", "70", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "44"], ["0", "0", "0", "0", "1", "3", "4", "36", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "9", "10", "19", "0", "0", "0", "0", "0", "0", "1", "0", "1", "3", "0", "0", "0", "0", "0", "0"], ["1", "4", "12", "20", "1", "2", "3", "16", "0", "0", "0", "0", "0", "0", "1", "0", "0", "7", "0", "0", "1", "1", "0", "5"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "11", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "12", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "6", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "31", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "33", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["6", "10", "23", "0", "1", "2", "22", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "6", "1", "0", "5"], ["2", "2", "15", "1", "1", "1", "32", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "19", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "0", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "8", "4", "1", "1", "38", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["2", "8", "8", "8", "0", "0", "0", "0", "1", "1", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "40", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "24", "16", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "28", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "6", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "12", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "5", "0", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "11", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "16", "51", "49", "0", "0", "0", "0", "0", "0", "1", "0", "0", "9", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "10", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "47", "39", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "2", "8", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "4", "10", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "17", "124", "64", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "10"], ["1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "17", "104", "54", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "12"], ["0", "0", "0", "0", "6", "12", "24", "26", "0", "0", "0", "0", "0", "0", "6", "0", "0", "10", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "15", "267", "157", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "7"], ["2", "9", "24", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "6"], ["2", "12", "79", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "8"], ["2", "5", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5"], ["1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "11", "20", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "5", "14", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "7", "0", "1", "2", "9", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "0", "1", "2", "9", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "9", "25", "19", "2", "12", "138", "22", "0", "0", "0", "0", "0", "0", "2", "12", "0", "13", "0", "0", "2", "0", "0", "4"], ["1", "1", "1", "1", "1", "1", "262", "0", "1", "1", "5", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "262", "0", "1", "1", "5", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "31", "1184", "90", "4", "13", "534", "3", "1", "1", "14", "0", "2", "0", "2", "41", "1", "17", "1", "0", "2", "79", "0", "37"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "10", "10", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "0"], ["52", "52", "0", "0", "52", "53", "0", "0", "20", "21", "146", "124", "0", "0", "52", "0", "0", "0", "0", "0", "52", "0", "0", "0"], ["0", "0", "0", "0", "2", "4", "6", "10", "1", "1", "40", "2", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "15", "0", "0", "1", "2", "3", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "7", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "7", "7", "8", "17", "33", "550", "199", "0", "0", "0", "0", "9", "0", "8", "52", "24", "26", "0", "0", "4", "1", "1", "6"], ["3", "4", "7", "10", "10", "12", "541", "0", "0", "0", "0", "0", "8", "0", "2", "50", "0", "0", "0", "0", "3", "0", "1", "2"], ["2", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["4", "8", "29", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "2", "0", "2"], ["8", "23", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "2", "0", "1"], ["1", "9", "19", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "5"], ["0", "0", "0", "0", "1", "8", "45", "38", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "10", "37", "39", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["2", "3", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "3", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "7", "3", "1", "3", "44", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "18", "86", "2", "1", "8", "137", "7", "0", "0", "0", "0", "0", "0", "1", "4", "0", "12", "0", "0", "2", "6", "0", "5"], ["1", "8", "26", "3", "1", "3", "50", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "1", "2", "0", "2"], ["1", "2", "2", "2", "1", "4", "22", "8", "0", "0", "0", "0", "0", "0", "1", "2", "1", "1", "0", "0", "1", "0", "0", "1"], ["1", "6", "49", "2", "1", "2", "43", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "1", "3", "0", "0"], ["1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "7", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "178", "0", "0", "0", "0", "0", "1", "0", "0", "18", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "8", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "6", "13", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["19", "76", "0", "0", "15", "58", "0", "0", "1", "3", "0", "0", "0", "0", "15", "0", "0", "0", "0", "0", "19", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "21", "53", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "5"], ["1", "3", "61", "22", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "7", "78", "18", "0", "0", "0", "0", "0", "0", "1", "6", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "3", "19", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "5", "63", "68", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "4", "6", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "10", "10", "0", "2", "8", "38", "4", "0", "0", "0", "0", "0", "0", "2", "6", "0", "2", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "2", "2", "2", "6", "32", "0", "0", "0", "0", "0", "0", "0", "2", "4", "0", "2", "0", "0", "2", "0", "0", "2"], ["2", "6", "10", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "7", "1", "1", "3", "24", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "96", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "5", "18", "52", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "9", "72", "38", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"]]}