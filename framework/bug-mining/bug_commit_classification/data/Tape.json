{"number": ["da609ef2d234adfad88758e1f94a4849b640048d", "9fa0a3eee397acc02cb7f08153e7dc72d9e31270", "ebf042307d6c357786ace558e5378a4f72584711", "a65365c8025d649ce0b20424a4588b4634b2ddc0", "dfd3046c1574dd6d2e346ed78745e8ac0e612701", "5412f76bdf401999d9048a255a23cf15e20c4827", "289db283139a4232acfe0782f5dda8fa3e154535", "3988b1864c209ef43bb6f329101c094bd6af884c", "73548e2fff6454e1994a06d72f75a8d26aa7a1f9", "ef09d0ad8d0c53dc6d0698bf0cb803db48be69a7", "261127e1847cf9699f4dc3e917b7116c892b1342", "8f075a24ddbb72f2e4fa5b9c69b79c9379d63c07", "0895ff5e042bc1a7b9b7911ff2164458f60cd27c", "bda160c5ca4e752d96202a92eaaa490e0f215d0d", "7c4bff30e358a617a7d2c9055f5ac845d7822ae9", "2622b66bf570424ad0a47204c1a697dc80451ecb", "1d80e01bb24fb145e364fba05ea10440e179b706", "124b0137722e2e14477452230245c1800ccaeb2d", "199f6101a0a56f2c13f765acf84542f47ff414aa", "c429d9f4b60b22cb4547e669e06ab5c38b292e74", "3dc325a60608554cc735107d1e6d732fd1f49ae9", "676d7d858b383db3f3e31c663bd5c47c1efb5e48", "3655fafd82a5d69e5647d3337176b89e76c1feae", "81e2918b7066fa87743e220613a86ab71f7f578d"], "father_version": ["9fa0a3eee397acc02cb7f08153e7dc72d9e31270", "7f7967da7d82302a2c6b62388264a2cbe844e66d", "d6338094db4bc8a649019316117d21fadd5920e3", "2f67b8cd3a6f8a4a37a1c72b78d5626ae891d828", "2f9bf020430bcb8fcc2b07b5ebbb118547d250a9", "e0c3b3cc15ab0ec1a16a56aa6e4e0299b181ade0", "d1ac0d5fe1178ef51f98cfdc74b35db4c58a1a20", "36cc75ee4e7c2352d75f26678c7a833fe46fb3b8", "36cc75ee4e7c2352d75f26678c7a833fe46fb3b8", "261127e1847cf9699f4dc3e917b7116c892b1342", "a0b267d16cb1cbc14a981d6c5677f4e4d24482c0", "100249dac7bb21ce8c4fa6f8665ddff96d078e60", "009120a8a83d3e48303f7f19d3bc89664583e8c9", "1281e7e8cd960650b7e205dbe5b0b27c5151a6c4", "d0a0e4aca8801eec5ea44ca14d7cf9a53e706dec", "b24f6465b1b68616d485f8bae6100122158078c7", "e8b834ee0fefdfe6b1ab2b2bcd76d200af8d9ef6", "96e1a5bee917ccd7c99a1548351321ba874c1c8f", "f34368ee0f4dd8dea93608a892fdb48d8d2cefc4", "3dc325a60608554cc735107d1e6d732fd1f49ae9", "676d7d858b383db3f3e31c663bd5c47c1efb5e48", "2d3934babb2075e860f414192d70a89147e0068e", "55602a30cd7f181ff15b7ca6edf039fe34878e06", "c114ac2aa242a36b00d43082a32d297732af3f56"], "commit": ["Correct unit test errors on Windows due to files being left open (#181)", "Fixed issue where a file handle was being leaked when an exception (#179)", "Specify Error Prone version.", "Add Error Prone", "fix QueueFile.readLong()", "Normalize error thrown in ObjectQueue `Iterator#next()`", "Errors fail the deploy script.", "Fixed EOFException by reading the elements header using ringRead Using RandomeAccessFile#readInt will fail if reading at the edge of the file", "fixed the count of bytes to transfer to the EOF on file expansion", "Update release plugin to avoid commit bug.", "Fix Javadoc formatting.", "Fixing ElementInputStream read(byte[], int, int) to return -1 when done. The current implementation of ElementInputStream#read(byte[], int, int) will return 0 when asked to read when no more bytes are remaining. However, the InputStream contract for that method specifies that it should return, -1 if there is no more data because the end of the stream has been reached.\"  This difference causes typical idioms for stream copying", "Fix Travis build.", "Fix comment on ObjectQueue", "Fixed a log statement", "fix javadoc comment", "Rename function pointer type + fix indent", "Fix wrapping on function declarations + minor comment fix", "fixed makefile", "fix malloc size", "Add more tests, change peek API, fix a read bug.", "Fix endian bug, also add sanity checks.", "Fix spelling", "We weren't syncing the file length metadata. Added syncing code. Added code to constructor to detect files corrupted by this bug and throw an exception."], "metric": [["0", "0", "0", "0", "2", "3", "9", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "1", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "7", "7", "7", "1", "2", "16", "0", "0", "0", "1", "0", "0", "7", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "1", "2", "7", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "2", "1", "1", "18", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "1", "9", "5", "1", "3", "42", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "9", "10", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "19", "52", "51", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "6", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "14", "215", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "10", "47", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"]]}