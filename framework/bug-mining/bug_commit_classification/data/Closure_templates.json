{"number": ["2e3850315513532d4792badf09de6bb321ac5f6a", "eccf4fc75a358726d70bbbb7f1e2409b3b5f0154", "8fa29282551cd7beb8fbe26739ef2d1be661a263", "ba398ef5ccf36520e2d01467499302f9adefcfc5", "fce7da73f788c5338f8ab7a0f2f697119083c34d", "6683cb240af5009d1803be0536a0be2d9a3d3d34", "ae2e5a746ac10295d9c5714dc0bbb23db1171c78", "51e04527c4336090cb6020640e3cfa0e2327ca74", "8c3532812e4c91889793b3ab95c17083976c6755", "aeaa7a25b2048762a6875b5f75039550732b84ad", "e457eb33198ea3b1e5adb8c50c551b01e72bca5c", "902a571cd6e27a3bbef56cc79cb18608f280185d", "7efbef54e4a53da492921e4b9d20a07bed689b98", "50088a5d9954456d6ac085230c2e386cb1cfd4ee", "1fa5f3797afebbc1c12b361c9ee1a392718a0b1f", "61216a6856f1935eb1cc4c5e3f9a0807fecc4e31", "b494085573b05e9d8400b3953ecda523eff1060d", "aac50a18d1c5bd45cc6be1b4e19f868db82c7b74", "5dfd5a92ddb34fe7918494fe4e6f2b749d944180", "b2f90df9856eefa6e17cfcc22cfa677a9e2d6464", "9954786118f06f67ef5c048f6f96e6b7f88f017e", "4505b5570390ff67ed2ff2adc5216b12dd3b6dde", "1cfd46b9b5c7dbc0c43dbc8cc708f51878438add", "1505a01b69c24df5433f0aa7990036ef10e9c8bd", "6ae497345b67d2144e4c2fb470693bca2fb397e0", "e5df0a0d84c7a03cbc0baffe1e8d21d9a8d0fce3", "c2afcf4e5dde831948ca28da4e2646da36c7e195", "880c85de858b1c83d9367d22266834579c462f12", "cc2c5e42ea7f1e118c459634c26261398b9e3f06", "c6624df0fe321982f0e464e25cf50085bf2177da", "375b99c9c3a739be6bd17c34a7b2e1eb8da94e62", "e684644112674774844c17a8e322a7c5fc42ad73", "5fd8ec5b03b0e7aa45a559584478a0a1685d7a72", "880faf049b826f5ec1648f693becd4b3893dc4f1", "f1d0c8f5217adb6ff6abe9318aac599af102674c", "40cbb3f9d562adb2ff0afacb109f1344549cb0f1", "bcfe28d51238c272f7ba7f2c93a09c82eb66985c", "8bc426a8b642aeff580b7e292f9f905258d96434", "94a2e22b33ed3045fd3be90b09b5d29365113bdd", "fe031bcfac5a2e44261a9837038cd895e2011aeb", "32ba3a2d188882c1206eee94cf79df97ce025f2a", "69656ebd1c2ba79095109137e172f63354d4a198", "4820f400dd72fea5e8f81daf82c7b8dfdfa7c283", "89125aca6043884afbb27dcf2291af461ceb2b4d", "b4a2cb104df2540e7f3fb462b7119b9fd44183b9", "56079a0c5bceeec5fdcbfc8cb0097145e973c4ee", "37094946f27cf48050a54561de7091c7ddc89647", "9d291f50d98c2724e5578cb065060fe98b8874ae", "80e305dc845e17c7f11fbfbda874ec0236117e08", "88e3fb9779e7bceb29cb75141f0fc0a70c32d4af", "0c76b9daa99a1ad5d71458c75cd8c5e89d89f828", "a4dfa421e48d8c91be4402e5d8186340978b42be", "454420639ac3441d9b634923b2698fd08919df1d", "c8c437f9224e161b3ef65f1b51ed1ff5e720d5f8", "50ebaf5d682097445a6348e9ba28c812e1c139f4", "805c922f89d2ce6fc11493ed36c1e08a68c84be8", "3bc7c6b2fe0c17342eede819f7db99ee2c8cefc0", "999854ae6f56177d251d309845077f180f7a8087", "5b228cff8bc5e3a7807110901479a386a93bd2da", "91fda70650dd89ec7d81a49cbf7d327a5daa0af5", "21d91b9d9ec9085e42cda89ce5673c2ccd4f437a", "488ea8e3ccdb01c33b005487f308c8c0ae981572", "169e9bd89881ce04cc543a4f755d1a16b9ebd4ff", "94340605afa13ed12ce3a1df00c0793248a1f49f", "9af33fdea2795973f49cd036c0485e4f9af39f88", "20a15d97a94d7effc89cb4fd9964c67efed2148d", "b322942f427b9401b69421cd0ebcf7e86ad63090", "7d3ced5bd1682fa7be015ef4dd62a23d71f585e5", "f417e4e1f18862f173e83671badd3f80314ff506", "1a4d823bedd7f350de7b7045d8b68e78b6f525e5", "1a626b6df8558ef83ddd642dceeea0ac6346059b", "d566c2d5a5695c9ba7f92ad6fbec99348a52a982", "805295f9a8b657f4c9e12551e264f959cd49fbc7", "f08b8b1405c0e9047b130dee85250ed13a39acdb", "cc39127d6a1202a799d1b4cc0ea6c82503b8da19", "44fab90107968498a454af7ea18fd551a02e5881", "c661ea98231c3a9588bc50455d8fbaa6fe6ffe80", "4bffd0b9a01ce4843618ce7c4c3e6cfbf560af67", "5a23e67738214b27787ef4e4eebfcc189ce4f0d4", "a80f7b324d368e9bf721e9e0efc861905551ea19", "d07276b57570483b783f4727d1bfb2f7b2e314b0", "a5b723a4ccaee0236e150ee8b6ba337c8c883890", "0652e64f7e2dee2daa8381eca100b8b80f6222d6", "47732dc18479fa8754bc3c50c117c642ac55b33f", "e5cd1cbf10b92056f65dd3aa46d8e7018bfe8e16", "f2fabd222bb8423e048a614b3752f46d8b097acd", "e6b8b0b81b09e51f6fb17caecc3e509431158507", "496ff5facfed744df873f3cfe42c323e71892361", "c15decf112b63f2a805fe7c1ea2ad85245d23bad", "3e6e9be4a14f15fb44153daf6a63db315d0581c0", "b78c0f2193168cfc4ced916bb643005eab4804e8", "47ea6bec7ee56ccf7b6cb59f4901ed85991c2e7f", "1dbebc58f2132b32680de7ba3985f00d4753ebd5", "d88d6f7864a3ed6c24dfba2f22ff36bcdfe03e20", "1ef9547ceeb952efa7a293f31e954def448ca3a3", "fb5ffc0dba3dc06660d5c0bade8624d89cef21c8", "96ba5d3b03fb33ba224f607c6635cb973ea89351", "80450b6face932b35388d955f7ee0b5f3f9258e6", "57a6e0937581d6863d971c12f117e668bb8f6c74", "324fd100aece714fbe36d66dde8c654877d46d53", "b06ba27ef0c440d298db02884a9645584227dd9b", "2e6efeb28d70495cfac9efdddac8e151452451e3", "edd7e374eef4f9b0341cd5701668a611577ce8ba", "78a3e1c89ff6f46109c23ae67e3f41ce1ea52c36", "8935b51cabe134c56070e5400b7bf1f2c0a8b3bd", "83acbc5754de88475bfe7fa593ad7798d15a4f7a", "27751fee9413eb81b82955cad911343e30e70bb3", "b1611af523b8a7a722631c70d1d6e3f7f70a8b13", "f16a3059b73992f8f3157889034072df4ef8e162", "abe4facd960d967b7f110a69284b688a747b3859", "5659e05f27c60c0ff99f830a8e265dc6e1423c69", "857f02500f06903876f0def291f356377d2472df", "5088850966f07a6877d3ea40398e8df142df00ee", "cd29b7387ac0a084f22f5a03e3f96d364eb33ece", "0ac1256388a147c0834085e5265aad9a3ea2ab81", "605663091a08bcaa889bc7781c8e12c50178cf3f", "6c4927861f64da14cd0e70c74c5e98b33824bac6", "b21680571081acd1fbf3588ee597030aba441369", "48df93a0b347b12444a1ee61612c956c05a27e05", "3ca3657a1d6496be491c8e4de6bee9331bdb0fee", "1a8cbf73a718f1e35ec4598a15dd3f5f3c6ca400", "6596e4324c46f4f082166644ab265512ad70c258", "46621e87b3a22bf38c6cc1455402467d7e10b5d4", "8f2572b4eebe852f619e6fe7ce798cf98139c784", "0a5ae269e533bf2e21b1ef572f8d3fd918f3a81e", "77e49e9339249fc8b9dcd8ad7bc5a9ac5ad469e9", "39ea68f6dd060fc8bd684d11a3e2196f25da7f7d", "11002788120046260960668b33ddd9c6b3b28778", "fb306065b6743dd22c8898773927e47d9f04a82c", "b9511e239825fb1353cdf13ee07a43b60ca0f65d", "7ea78f13fbcd3142927ca192ce650263e8203048", "07ea6f102d405033c2c92e9b741c5655371b9ee5", "259a87209703953d9977dcf9c10804caac69e381", "e070b721165c9961b66b470093c778bf2db0837d", "c864b1be48c4e296c552b641f07785ff2ea812bb", "9095aa4f982b2a2fd8dca315d82bd94d724bb878", "efecbd562bb2e7368764a2137b9589d36fcce01c", "b1260a820e7bbf4392175e4690a75c0486937dc4", "f9f208ca1d6323e0da484116943bcc07a4fb1a94", "ebac0c74bfff3e3481ce9562dbdbbcbefa59b179", "ad2f31461352d4cad41024b4a4b1f31fcb0f7b5b", "444bd07731d7adcef7697947f85195a5e378cb21", "974bb5dcad59af047644aeee499f29a743a9bea4", "c09b008cade2aadc3f23ef80daf3051b9ce5d6fe", "05c9b7468139dfac452f7394d126e83ac5c67cfc", "b22b19029826162e4efd5b3414e71f9b94ccda2a", "850a2e7179a9ac568bc42e785e8d67700bd62270", "ad0330fd8a33ba7c02da1fc11335612b6789429b", "6ce08642db5be42f38da08dbc16020b3e766d4ad", "75978e583632becb12fca48016ede4b49a389fcc", "9ef392b396cd2c9975a8b586e7b4a06e63a5ffdf", "da868251f7caec58eea03687bf4ec184c571813b", "41b32838c5760a44c9e0718a74a005241f90fcdc", "7e5afc8b512ab33e1f15980cdc454bd7a2a6e987", "653f960783bfc9defc9cf711bbb99418981a1cf5", "6da816908c5bc696d347af2e035fc117b4b8abc0", "e6c23b99eb421353b0d2a09774f8b762e1bd91eb", "149c661651b2ca7976963db56d514744b6258d32", "a1d5f1b091158d5fdb14b5197a4ca9617768c366", "d192ee0c57a962a0d2297178aed97e92f10d5e02", "ed46cdd5f541ceff1abab3d318c521217fc2bc5a", "99f22801d9695fa6699be4542955d134982b066f", "c23c68d023213e1678feb83f253c205bbbecc338", "bff585ac35d7812c1b5965cb0228229bd099e3ff", "2debe1978329bca1f4877011315392b46ac043d5", "9f393021b1c970f426c59ebbc1c62451c81a16c8", "43c77aeaeb83d9db66c14e603b56519f9d760139", "3f73a98bc024dff9f6f44c09fa3d696bb4088f58", "50ce4ef5a84c7ff93d93d3d92965cf0ea583413e", "e94484526bdf17342ecf95db1f93ee8b02b32322", "d8c6a4fbe764ecd6d7a39f5e09a8d306aa74d4aa", "59bccf4c3f6d824aa490c7001ff9d951ba992972", "1858922d8c60c1ad73ae27d41a11bd56f2d27eb9", "26e9585572bb63c53f185874898a91a4c7422091", "a873bc96bb6c96afdb89fe5d9de323e00e42bebc", "bf1d588dc2a76ae9f04613c0b9df640f7c182b6d", "5091a88e22bc4233a185e18ed57bd7121140ead8", "f4caf73a3a78bf59a18c23fbc624a7d8ab19f795", "685c82af91a04fdfd5bf85aeb4f8220229068c05", "5471fd036b55ca68d6f00bd354d4781604f7d05a", "154e53905a28a98c4cb7e1ef07a823f29996147a", "a26b15772259a780e7ed21f673c661147e0a4170", "fbd83cba2047ef6b8aaebb910f32a6cec33d3781", "0eff9f777c5762fcc7b19fe5f0c5477afc7da6ad", "7f2c63288bb141b6da95301bbac3beb9b3457ba3", "93d594cff8082cd85aae47dc587e2aef3a200481", "7ecf1957b8fe38cf1b6155cb2b011ec3996fa270", "9765fc8787f0927db8590dc84ce484b2593f7eb4", "609e219442da85302fc4e6aa713d349b9e273b66", "f2cdf531760a6796a4fd377433051c62f04cc988", "57ef4f9dacd3e2ab41f84ae364cd37e1aa6b5877", "ff4726de8bf84add9a64eb7e2042f1938312b1b5", "f7e70c12d0132e403e9bb09f56573c15a4b07d1e", "6ff084bf85db650601757e5d75cae0348c892530", "4d17c600c160a052064d9778cc77a7fe62c8c794", "549594db3620dedf838fc0534711ff36e4ab1f9d", "af026551b39aa6f4313ef859aa5a246c434ebd5a", "d1bf58f3e67ffd087c84560f07bc6b52bcde19e5", "1535bce96658b27c813f5742863a1a84f05e09c0", "fe67a9cd0dc67ca46e905dbcd25f3e4be75f126c", "cc96eede2dd81138464ce044002227d825202e50", "fb708d8420b523cba46e732be038a049c842d364", "973cff30602bc8dd22f8730bd62bf244d8240978", "fdaaf71d04f217776d86aa3d03d55e0adfe91084", "de01a2c97d3320fd79795bd92855b45fa48ae99f", "cb07e4df2cdbf9e7a4a4b4fe7d4ccc036cdfb75f", "aae5e23c10890294116f26273773232d51c43233", "5035881b55f37a4b4bbc2641e57893687f866a84", "65c54eb9bc6711a8ba283706c578d4e2a92eb840", "3d2156f950c822c071c83c2768a269433b44c36f", "38a6f798f6a2e81bde40c1149a857781527a10cb", "e8ef3477b1e6819128990257214736f9795b7d5b", "afb9bcaf0f8ff82a2b598a6b3208a48fb959b1a5", "6ae8b0af5526931b6500d53dc59bde00a44b8098", "23747fea0193f4433ca5baf8dbe5f80de9888805", "de03a23fc55de323676940b037ec83d6298b06cc", "46ec132739c662ce0e367e2bea5b450058e1e805", "6bb6e689a01ac33f215071224ffbcdd48fe34589", "da0434f953241cb98c806007f1d485b995dc864b", "0c8944384e43129d30c30f78d02e4ecad4295704", "e2743371e60ce94006ae9fadca30bd55211321bb", "445eee899c5f342d2ad9309ed359e0a531121d3b", "376e24d084b77b0df83412672c21a28bfcddd7f4", "b7ab961375724a855f295bdfc1c508000cf16541", "5f7d5509c8483c6504a81ca3912f02994bac5fa7", "cd91f70a9a7d9aca55d31b8d30bfa78c53fcf8a6", "506e9a3a6c44b823b4f6c368609928f668120c4c", "c56662c654c6e92bc06e80e276f6af105709c65c", "d4b853cdb1b19215592e40ca8bb3fe5a721f4ec1", "5c37c79d7112a27656fe13a1fe5ca27e6fc41f08", "5728c77189de811136837b739ff5256170255c10", "406611bd70aa86679ba996428524a4f50a9b7b12", "82cd4036198b6c2d025caa837830c4d9749ddc57", "2ae3254b3f45ed7377493d13b7c72fb068cb7cc3", "6372021c5ee693c2d797238bb2b1c1d2cc4ee662", "fa5c3ab9dc3175d89c71c8c9663db1408b725bf0", "0dd4141a5da65b2253f05e4af3e9590b4ad95721", "463b8549c653790e691f51c80dfe71ce04ac998a", "5c39a2ea8eea841d7ae94c0c1ff71e20652bf48f", "3b8f1ffa7f91242329e02bd98e25cec7e0fe1858", "e60d88574b5fd531161d46df8b2754bdca6d23f0", "63643483c3058c6091ceaa114d97d79a91344855", "38ee336ff59cafc9f25bfcb8668e38ff7b88b43b", "227da58b61336fc22212ce5992eeae4dd92be323", "0a2d655e10a1e40efb0abc735905c7ef2050e3fa", "8b63f9d886ea0b4ffcebdd736dff425bab411309", "3dadaac8313ffbc43caeef93ba390114d6eb5531", "21761175e6e205a14a4b8dea3927e799d16c6125", "e700ad623bc75d1c536df162429974a49992cbdf", "77fa123ea6ee4021a59daa9f5cc770c33cb9890f", "9f60ce96297428b22c95c51683d10023eab0681f", "d370704c1c61da646ef830e5b1e8b559be46bf90", "631ff2940add8ab8f570961a96abac9af569c1e4", "1a60226634f7df51617e3397215ed3a8bcc2b9a5", "02e73e7fc1618df779b1be0bf587879430ca496e", "fa00cc0980c97e6758b941b4a3aea1d0444d7919", "cfa878b8716ad29e656d38b0b636b7a596f1a442", "fb7ebb60e9559fff55d6894d60ea656faa8441ef", "44baca3a1c83acc5c6698f8898571c2a331952a2", "3fc83869f087fad6bcf6f1bec65dd3422cf4ff3b", "530c314ad829319ca430253214e09dafe94232f2", "e95ae22106bf356ebdfe80987115aeb933d46222", "76a8f7c6341db1babe3ac327e95e9e606796036b", "7497a889a7bc17df5321c4b09fe666f5c7ae2315", "51eba0ccb764aa5ed81cc3fe0aac8488690e52b5", "44da2a5e7f6a7373d6c091a28267a99af25cee60", "aa59d72f5c67f0e798ec71d9134912240f3801f3", "2e5cf321a6cfdeb4d54c4408f2e29614191771e6", "b5e5ddce7fb317a8eff7c4a994b06d3fd648ec6a", "8ed7a6075dbaa4223114363d6cf6d557a2170326", "9f42d3bea1f7ec949d14c18fc88ccd19cba1adb8", "04922d30cc12a1b52eb6e63cbb217ba2baa78f86", "5dd2b541d36c69224af731e52e7f9b11e39f97d9", "dbd7d7faacb10d5d86ffb149b0e94a167161bf2c", "de2095af4bc2880afa757dadec60fd4f1d021a47", "a80744ddcd0dfa7d7a5304ed031d5ef1215b2fee", "085ce058308feef03619081267c32b0e74fe5471", "f2f92d63b8ef8aae64edc3b8d9861b456287b05c", "f27c259d398a2776969791cae8f8586f3678b356", "daf3ff3e36aa3c999295c7dfedfe87a90b29aafb", "3bbcdcfe87a40ad2e742496f48dd017b60e47b90", "2fdda09b1a821d6fa5f176b42190f4787f6159bc", "2393f25b8185788d65bd534a60db8af40c7ddd01", "92f1ba26d69f4dd2c3dfec58a1a38f178700e1f6", "1ab99b3c2c772f810240cd842ebdaab4795a3dfc", "ed01fd8dc98eebf5a5ddd842922554690d0e28b1", "40b581c15e723b310325a2fbbc2db9c25f5c49ab", "005e47ae6bf3d89f340b64f9945f5d2036ea8a6e", "8dc0fc45f8506c3cf7c050a4c36f73539020c174", "cd7281df5fe357d350ac9748fd6a680c68ec0148", "c5d3defdc9418f1a0faf0f2a977c9529d5a374f0", "0b6d1ac738ae9689e07b49c5139a0ffa6882b692", "c705c388ef6bf13926eab99c9208665a4dd1a765", "a6925ba25bbeadadfb09600b9174f65f61bf053c", "4be6672d021523995dadb6edf038bcf11f543eec", "d245d410bdb473513ab77e921d6963d5d7891c8c", "b10397fcc470b30d60bdc5247409c08f15134f01", "e413aa554679e3a2dcadc15bd93eeae6a7b82dfa", "29600fe119e3d8f8e39464dda6101e23d3e69e74", "c8f994f15922db35b00c126396b16eab6118bc8f", "40e1581505a45b7ef10187e498d2e440c7e70668", "51a9d4a033739d59e634a3ba7e6007fdf2c26c99", "a5b736f2060c3bb470f39315727746165d2a4df3", "71d9c8689d5fd480a92de4c60d9d8c25a5f2644f", "63106536a108cc7ad4b244e42932a322bc878716", "6b0dfca7dadd5fca5c849e36f54710790e962c1e", "b28c9deabd0e1622c79a6bc171774c44de0ece4a", "e62a0f027ec7ba6fb7f0fc213d2d22d70ec1de92", "99208d00deb299be4cd0f013e0ce38a88f7103b0", "cc2629d74a33e5c3ada1d34cae69c99037f5e90e", "b27b1d0f4045f8028b5f4379fe2de347ea536619", "bf980b51553ee3dca2281f8e072dfa7047eb3393", "8c56719b1ebf5519ebe6ce375a9b399132d07c4d", "7cb1104c341251a29e959b575b41cac3cef3d207", "bd0ade75334814c5724462e28023621cee099a20", "efcb4d2cb151867d4b8bf9bba673c96375c11a5a", "f34e8044183844e72e448edf45d82f21abbf8c22", "198c3e6418bfed07aeb850e0dd70b0190bf71a3c", "a5c76ddbe425090f7e6180974e639909ffd4bc7a", "26fa522056a1534c40623f88f2fd68546fe65a84", "2d83cbe0438231328c208103c525e30090fd1681", "73cea225da1a846f83138832bfd79a545350a0d0", "dca1e112502e738aa0b647988b1f5ca17c0f6a7e", "0d908fe3a27614b9a836577d172bf23570bc8b92", "90483d23b03ed13bcdd175b38bc0552755b3858b", "a47b0a8deaa7c05eca142ec0fdf20e862e85d789", "626316ab6979f947c80eebd4dbf3eb2a83fdf9ec", "c7ecaa8969c993e6ca48e8a40b830250dec0f791", "37ff9baa230140553c59c029a915827ed7d8b54a", "a1972b6f5a5369239dd7b2019e91b87b2a2cfc67", "aeded49161a8853ff96b8574717896846f689923", "1b06ad487f9bbd1ad4ff509633e5f266a6b48df2", "8c70e5f038290672e0a84b46db1dc3e6058a79d7", "be168a04eb126ebe0013054e1801e452ca06c78c", "3c799d92c870413ba3414092fab274e1511b1f7b", "8da89a3fcd81dda42e4b0b624710589593429cc2", "710754de07240c5d07c6c8aac97416316a755618", "e21671657f75e9dc2de362232a9efd93a5d2da0a", "7296a4bcec7d0bc62ef50697a0b687dca2cff005", "9dfe4b1804879094f9f1d87fe049a21286a8514b", "5aa9b5067f12a69343dfb9774677202cdd4f1f16", "db36235870085695c0f6973f952a05cfaa98276c", "d365b1b5e27ef56d9e51330b7eb98c1d7f42925d", "efcf4fe110f209b63ad1bad49abb44903850769d", "d92309c76cd2f9ae746007cbbc48a0b879e890f4", "888322a039ae091e9bececd4d11b4cc5da1ef6d6", "2ceb7183ffc2b92c09e1eecef3e5ddc9e48e29ff", "f89988da0c60a30574a53943d1a3073cf5e6c45c", "b0794bb363d9fc4475766c2dc7cbba9d5a6135da", "fd6dc711d94426fc38643ee2263d4bc357778a2f", "79c3f11712053352f5ba5b79e3960e3548a92412", "c4aef010e1eaa0677141ffafbfb3f55f65999517", "7e6151f21d2b9735576bf807215ec9b8a3d39b61", "2258bec5ed4bd10f49347d250041aa9ea7eda01e", "e884ee2d7cb5820527f5a2d0a1ab2267588fdbfa", "581d54a90553c070c3206a867d7d01df65f668d5", "d35f65be7533e7aad2ce8b7d7e1e9f426f69a159", "bdd876b510630d60272c2cec586558a84b4ad679", "09282994603f20fdcec424ee231e9c2e0a846beb", "13d39960d44fa5d9934812c4505d92ec29d4def7", "5f054aca759083b094e86e5409818b8193c7624c", "f20c3711271379507c508a5a8966061818ad995f", "301651ff7ad32fa36e9ff0f94981bc5951e857ea", "9a6b51300c9ef5d0db97985cd3e4d6bef07e39f4", "1d930544135c90f82ba05b04105cbe9b7620da71", "e854098bbf18b5cb1e29cc8254a886a96d85b825", "57a8cc59afcece4c00a6526940c8f306672f328b", "2f737f4f3fd17cbee3aaf7bb0f2b0899282b7d4b", "63ff9645a5c77853c4a63ef23d2560207062d46a", "e58b5dbfbaea39c2a5cea9c4fd209da91e5d4980", "fcf09722e3b6dc215b3cbb531df33d69968ea2dc", "13c302d8af64c8003be37706eebdec1aeaa72e1b", "dbc2c7dda86ade239686a7775c5bf8de187721de", "785d9ee6aae4c97ee84430301fdf6ef2eaa45639", "fc77b19fd650321a78186ca5bbe0ad07508fd6f8", "865caf76e225f0b9c623b2ac9611da21794d19e3", "9f82f46810fd50f22f21dac6344a2c67d942887d", "4f314f81dfb8081e94dca988ef262fbf62dccf6b", "ae29323b0377c9b9b6223b7dea962634436a6dcd", "5db086fdec7c865643b89653f560876582760f16", "f948155f291d5be1dcb01064893d24398cdcfb1d", "40935ad4ecb939fc4cc573e16952ec3ad1ef38a4", "8f8d948aa1c3f1356db1e181cc9c22d32b70547b", "416e7658a57fb88b8bf9b22498236024b49bbd88", "cce773e8e177bfef774a800bdb4f4ac48a543591", "0fe243be9aec44eee24b3424ebae29097de7ebf1", "1d0d04f44c01b07629e1c779214d92a110906ac9", "003daf071da2b6ef338a2de3174231caf3ba893e", "aa5223406d019c3684fed2cc3fb0b7de47dd3541", "2dfa7d3fb9395d9bce6ce1ee4a55ef96dd79d987", "7b7447c90d759eb534c8709406193ea8a5f36e96", "4c72f5770a980de41fa2792ccd18fed0c72918ed", "86bd724443ef9c338fb718b4101d448b01060c3c", "4e87191e953460009517a7ee4f684f3fcc8ce7f7", "6cf26e406c82b5546d5daf055d608ac93e663ded", "ce5ecb6f9f4704407f895a4c6f68e8748d457a7a", "30000b371ca14af66df1665ed13d39ae8f3e23b3", "c8e013be84dd26090a2000ddf47143999de36c4a", "37161e93f113ae7686f6fca229b13f6e42047289", "1155f2a2a0486c63268d2a8c28c79c3441c9dda1", "a7bec6b19ab02e745fd168bc42c28a6f43aa9606", "40d091e0550576c7b2350dd6c56fa2a4256d3b5b", "96b0816f6e37945cca64a76ffebc10edc825d8a5", "b4c508c20c7de60055b0be5fc41d0cc7311ba47a", "8309e6b78f7f194492ef90e6427cd15118f272e1", "9b7a42f96f8124e1470e350bf4b843dfbb583594", "ee01b9226219e2717845eac3a430b851e291c351", "c17e399166238f867725ba64060b355e56d4291a", "6a6b24eabd2a3047d7d5a458606e2ddd2febdbd6", "061da8a9697727d608114c2554505c3aabb181a7", "a3cab6718c9b9c8b30f4aa9ccdd4b462164b7a7b", "7caf5a5f9c91ddabd6854898e5469023a98e4200", "9d553e94b8fd8e73c86d676c9c8c86f72f5d79c6", "a6d144f6b488e96979d677ef476ed0770ec3b1e0", "ce2a573b26f7abb1b112971f608a48abaca34d5f", "75ef00209f31d0cf650cd4bee8b2c12a87b4c8f3", "39b7db5631c957f3002cdf9d5b9b9671c6da16ce", "facb099c112c9244c29880fef3232b7afd38b919", "d8e4c05237eb1f09273593b9e24f5095654e759a", "e8fa7e376e091a68ecf6fddf0d5abcdb8e61cd40", "e7190d5114a6713c66a0de27925e01bd9f4f1350", "cd6bedd6944be3f5004b696fb350b1e6dd1b06cc", "d60128abb8f2ba5787ea7dc0cbc86471a54a0122", "9fb60f6ec5578bc94c85e80e46cd1970a40da19c", "e68408e72e20da27537f9eb5dfbd8aaa6d386221", "86924b4eac0246ac0de6d4e2d6d630e4e59fe355", "fe8c3d4594f1afe316225069dcce3640c2654c37", "e1eba8184305d7906e15c5035b96cf0e4810b3d0", "d35282102bc7b7a6d33e7c63e59a9ec63e4b0e10", "873b78fef29b9aa823b23e607e8808af2aa5bba0", "23f87e21d05f81ff016bec7ff2a9921126b06dbf", "2d6d5c0fe22d9af973000026d87c91d1d06c6d00", "1b905a5e39ab01d798457a3985f5dcc119a396cc", "16f80c1a9695434ee8dd4ea0c011215499c9525f", "ebb51f8a6ca47e122a0e99ea18d4d3120667cc56", "ce94a34103eab21d79e29e2e019701f6e92f1d59", "442b2e3b256c1141a7b716086fc38d2db28eeeca", "a541611e16f1dfd52f5f43b5d2cbabf54a964cbd", "59de6e049a7b54ae401f8d30ea9ca692ca2611e6", "420871a591c75ac9851a9daeba6d29bc3c07c4e8", "623d65e890e79dae98998dbcb60cc1dc55da27b0", "3d786ac43b5fd84d8b4d6daa043ea17cb3fb19f5", "72ae415911b54d3ab56a615c778cf4a7c3f31578", "8519afff52740d5aba1ffbb9710841900b2515df", "35b335acdd561e4d4719712373e5174c54d95496", "6a1080c736e440d17394c36cf5047435ae0431b2", "ed8bec2d056a184d63e33266dd803e72b11bf7d7", "5c348f7d6d793834917ed1dbbdfb33170c5c53dd", "85893c492f43713a7069211201e0e0dba5882554", "e0bd575eed262c165093cea936cecc26c90532a6", "dfd8f8c96e18518cb0c5e452a584c409aedfcdd3", "922a7441b0c3397ec397b86a7b78318f4bcb82d0", "539c4778794cef3373bbc94783be1f5ab7b04292", "ecc30b3b7b11aeaaf087dcf402a7963cdb4e10a9", "4f4a84c883227c15c258758545099ea5a6add5de", "be225dc9d980af5a3a8e7891fe06b0a564f5d628", "b0073da89f3a9246bfcb136f20c5b90344470a0e", "e70099fe4ceda6a3531a2213b718b636f89d9c17", "df8407cc854ecb0e52442f0439d3b6dc65525f1f", "bba6162c5e2905bff1b56852ea9d01d173981375", "8fddeda75fe0c5dd68c4957fd1ff652e9d809a7b", "900e732a1c0e86bdc04d9dcbc4a2f9c117336a00", "fbd66c72e27bd24bb7d0cda7340b9e9bd413fe2f", "4b122364dc1d41bce8a7c809ab671bf55350e9b8", "e7a2a916ac6b644672a2aec60f2f1cee6ed64969", "807316329c43dbacc5fbd128e868dc8434764466", "16a1278e1921f1c095715b73cfb5cda8b4f9f86f", "403f630712d6e41e54c643c39cc71e0494c7b08a", "456e3292c75c185fb06651247784ffe3b9ca7973", "9e0a85514722b77fa64e5618d7faf8b9131ee154", "ecf9a5cf2f62cf88099c774041e60e29e1ae1c04", "e09c0492c3de393f2331c1a4c0c454c32e314d45", "f32fc1a2850e3a4c581630e380fac778a69b9bfa", "f5faeb2c33983452c3698931ec1acbbda5edaddf", "8cd3e04c415b5cae15570c38422aa70ac14b2378", "7291c58369def54a1fdf95e204f4a37246340cf2", "167b10a1554259ef03c8c597b69a8fda1fb6a0d1", "8fa5f3a39eaa969c076be61adc47af89abac182f", "5067cf53c4deef5f1de2b58d1afc19bbfb3196fa", "1c5d85d50e116671df32d84c08a809c1b782028d", "6cd2d5fd0f32acc3f255bcc8f143e847757a34b9", "b09440acc55aea651907be8ba7e8e6c1e4c8a547", "8f22067ab51313f24bde781e323d699fa1c3a810", "0117588f47c72fb1e52562e35df0deb9aade3d12", "46d89b41b47e8938fc983023095179c19cf85f9d", "890e202ada56d87b23667bdf1d4ad21d1ac1776d", "4e01108f38daa7d86f0ea4920df62e5dfe1ee13c", "4f312a9a9a355a3c9b1ae3b42da2d93c536f207e", "114e51ab1e47553c351a804d0f91f4435e129c5d", "8abc675ab76dbdf0db5ef06e36d699479ebb72b4", "6588017ae82b2ff05cd9039a5329298429585430", "7a6119f5b3154d364b3e58d8f015ac3b67c5ca20", "36dc0d685d3cf8b39f865218abb5493568d629eb", "eb7f6e2bc2ccc432ea40266da89222d138b26bf3", "fb11c9ecb7e0af0fe93fd1d0d1a41c29df22505a", "9693b7b6a2a56ef7189c1099f9b9efeb7a7537cf", "b30b22d40a5259011fd7e5914393464108b12097", "1afa846e414d5571d272fa3f83cc13e6f10623a0", "b8eb1403febd5b3e149e519e60f9f13f948ce5fe", "5382805d4150c17a7ef7ff85b33870e9c3b004f5", "26428fc31699ad8dd35607edce3852bf4f5a2cf0", "2c5c1e7f7d00c4175852e2adc6f8f48ae01327c0", "a0908eb456367508c367de0fb0e178e8a9dd2412", "04abe85d04c1bd8448d6df731c7b5d6cd0353efb", "80ffccdaf2271cce31e0dd01578791d26a91d706", "77fe296e2fda1565eecb129ce6e83b78e0b1b667", "aeedb9a6af8bbb5fd160036c3a46ecab200480ca", "766eefbb2fa602ed9718e463c142d71af0f0b368", "ced4f0d06a487b38c034af6d8368ebf2ef63ea01", "e45c45f48ce76b102b55b790af5bc17e5282af0c", "7f624914b12e6322d77ff03cc0ffd7b1bef15239", "8fbf27ed5f7e6dcd7433960a69f59f516ae9b870", "99f0ff0163435c54925ce82c2f2f20c7707ab701", "d706b51609919811496de9092cdcd10ed317d723", "8a298fd7af8deed185f04797c98f4086d7ac252c", "b53bbcefd9b321e14d2a7f538ec17953b11cc8c2", "baf0dfbfc94fd03d9f8867f59b87eceb827bdd53", "5202f952cf02e8dac9ef92799af5646d3addbcad", "e8131b1017fa8eed26ec556115673e2acd17496f", "5d9d88902639247c4f1aa14be1d93061149a5c26", "f67c0ed98eb50885d81d7f263dd8489191bbd8dc", "b148fed4d6e8601bb105a985f739feb2e1d1eb4a", "05fcbc7fbd169011ffe232fb89569750dfac70eb", "d0f5c47b62f5147e51c02c130d07020435b29b81", "54563b3a8615a503b67d78cfa454304b4e1914b4", "51a6e28201296cc2e1b5ec96e002bba22c665352", "e17706fcc8e57a840d6cef47186bbe77fec60565", "f9a123b74c26744675ce82b843633ab064b96776", "9345532ecb2340a23590238375969650aa81023d", "b3312d3b2fd2f30adfc11dd7a55ca431e88fd2db", "ff15faf4fcb87515c92eaac063eb3f7cc61cb70a", "397275e897264b7cea14df0d2c29cec97c9af5a2", "3ae53f5a0d782f4477ea18259b6a59b30e00cc5c", "812bedb54c3f6d12477aae67c8b108af82dee2ed", "dbf6f59e45ec434149358ab0909eba03a4e069ea", "585dd166c0c43621c01c7240671ee0543077e6a9", "e6db473207800a46efa478277fc2af2a3cce7df0", "4b5fc73458793c29e43eba71cf7cb0eba3e70907", "e5397d1e2c906ed3f10e8dd69bf8714091b131bf", "fd7b468731a684330d70378d5ed635bbdabdefc6", "1cffc0bdce2384202dfa166e840315ed543592ee", "1ee1446ea40f253468dfa8aa750900d2739dbe8b", "f399a9741c195427f9cf6d115bc8efe48e74ca45", "9c4ba34ba630940dc6cec23e6e323a71c74ad3a6", "d283385a0b3dfa1af0f646f9cce7ada3ba2d33da", "094f80c93b4827f0044fe6263e0c28c5d7bfa497", "85ec4907a3916c90e30edce26d6578e0b0b1c939", "487cda3988376667432201fd4e69bd6fc430fae0", "22201e1f9ddd8f4f2b398f1e38d286f168df3456", "7e66c6508aadbaff6737cf0e2ed457b864d0b311", "90801f9dc7bca460d70e763539b5631521123754", "6efd1a22e2e4404b4da6211d67989c8530aec47c", "d5fef1af051ccc76fc11d7e40170002e71553d83", "1a588ab0f687709fb47bb88f9404bb679afac191", "eaf8949f27d2d5115fc4319f4d65e3aa0c3868aa", "bf14e1ab6b745d2303c48d63557d14aa7f8cfd2b", "598ecb027fe44ad62cb71c707d49a87e15cd71fa", "1d74eb5a15bf3d33eabaff21e5a46f2a6bd66e10", "bffb451c8a8b673d8e58dc992e26526675c93eb1", "98fdb046dbc1bc5771dc5e323894350247d7e2db", "150ed7bfae099c80cf23e276c021ec060eb1bb31", "cceb4815de75bee4ec95af59925a62874fb6ba46", "dd5ea4320dec8cd6b9e3f39c7e5513c9d660c25f", "495dcaade85a40e52959db428e51bc3e84996944", "2a4567717071a785e7c0c57da5a7883df7b2da7e", "4fdd34a05161d35e4d04b9fc23c9a5acd780cefd", "3d1cab75f1f509af54c12eed11e1fd3deb8859d6", "b0264193c9b79c6d01e2c00d2f2692b0a34f6d45", "c13789d710c24858b0dc74fd6b54ceef5fedd479", "5e93e19b3cc3cf60a58ae7425ad029421ec3461b", "888db7c0275c6541de0a9f74c19c7fabbb20d75d", "6c8f5e7685931556d486f813393cc92648d0baeb", "c5c772628041b10ee526ad090fd3a8c978ba1f59", "8680c6fffffcffed5e6f6a096c8b922c9e68b3cd", "2957c73248735df2e6e2d5d2b2c295166896052b", "4355f1ed93344092a89192c93afe619b1a8f2aa7", "9dd4b733174605e071970670c86156c81d941989", "b085b15340c5c26327dc4695d96a7bf5a9815feb", "67b5e2e87e92fcb2952c7e3d5b6a46e835377450", "25f99822c412df7ab0dd1662c6c70f7d8e6f17c2", "1339e7881b3fa5635173c2168d8034952b1e37f1", "5e6ed3c82c989456657334fe3fb3c8b924ca52a0", "816f5f60d3ed30edbb0b569b6dd344feb71b4347", "13fb3dc08785a7c9912aa8c968a31b42a56f1c4c", "7cc3132797cbfe1312373b7d91bf15098ecfa661", "78244a354161d2be96e9f7d582a8863555d9415c", "d6da7a524050a51532fd20088d9a6351eb1e2b5e", "709e2f8fb28767a0d9749e09a51f44fb939c0537", "97c82b956f562cc7df0d45c9a58cd1f372666907", "e0433cbb8e1b871a9ecb2b9d356780f164ad7377", "82a3f57bc1e9e6923eb5213d12e6e46e021463b5", "f69420e99ec3c8c4ca8ff9a49bb0aa5882486de4", "5b1e01cebcbcc0b9c2be4498e5d611abf7169ca9", "58113a263bad9aca99f4caf4ccee9c2eab516f7b", "a0cb3fcb1876b635658be606004f56686944be4c", "6fdedb48973a1c4de4ddf4c04d3d56693d019723", "c99ed18e819d07533c33e2992115444075784a55", "e4a1989df990c488a3f551a94a4f48bfeea25ae5", "8893352cdca30f4a81fb826e76417197112e6713", "40512cef4f44f6ea2b660e4b78989e665a3ce7fc", "120b63fe2cb7a88e5ca8e365b87022a921f1e5ec", "0faf86a78a0fe40686afa381fec47968513c82cf", "ac53c6b2e86a4e87b922ceb79dfc01f4bfe97416", "b6c20d384fb0fa259d2a545dba6db301353276cd", "e1a9d36a371c303b316ff3d9df22ec547b81c4ba", "ba219d328df4024bd213415722676d38c54d6dd3", "600571643a857470289217e9ead19fcef1b28418", "f7bd9102c0bb22299c22fb5516a48c5c2405fab3", "e200da723da0f6fce9f5d952a25417c1a11f9212", "5c58f1dac90aa946af62a2a6b2f0c6c9c57ff9b3", "143855fc5aa3975d636a55f7acbc7d64717a5551", "892ef9030b61fc811fb9f8e3d747b05afbe4c971", "e8189bf4dbf1bab68d9e46c8bae6698457f58cc0", "4dd35fad62303109d4171aca8838e5dc70aecb74", "1092fc2803fb46184f74fbdc2002ed6e07edf975", "3eb6f8d6a2cde825d0d26626003890d418b278da", "5f7436dbb6c8e4b9f768332fc1fc73abf2aef5c2", "fcd6883bf8135f81cff10a1fcf9402e80e941446", "99327a3db1bdbe6301c068475a5b29847cd85da8", "cceb8e73e3aeb37d0c5ed505332a31413d72da35", "ad5d858b101ba0e188c90066c9e55ebc3801c731", "d0360cf32b3c85c25342e94341c2029c341094f9", "6f2a96aade407d4d5541da397d9210991740996d", "753f8c2dbaea372c3260892599a7d40210e894d4", "42a25facd956bacfb36481b286f873d308faf6ea", "2fa68e0d0ce16f952bdc3acdedf8d977df204aa3", "01a6a045ab01e2da90e0bd544987abc7bfb20f0e", "215a4a022a6f3beb0cd7364d80d7b8b5536574ba", "b35ca2bc7d615a64992118409644830e371ce048", "b9f4dc6f812b3ebf4471cc2f917b78fc1014c6aa", "dfda266a37fde719173071cbce3779f1c73aef15", "49e32ada8fcc6c90dccf88e6047acf4067842cd9", "c22b6e585efa7ad3d73823a989a77d3ea53c3034", "6ee686890529266846fd9daacd1e419ebefd2f96", "cb4bf201b3ffbc3ec211919f783b92e131570019", "4db4ba62f5492cbf86073da8b86c114068270a4f", "45afc82768cdf49570113ca207c3d67ee392c000", "c959b79300ba5f75b15693be756cd6639808c73e", "f03db9a348e8fba06f2de99bc97d0706c7966d70", "ca0210d25994301c797934cb9cdae08b1c655f87", "661f94c407fb9e637a242952fa12db288e9acab1", "f351ca039abe2909e2f692d66b543e337e67d8f7", "54de385fb708c71e8f23885de1cdf89e63a95643", "cd9f5bfa8a1fff6e61a6879f73781e8f1bfeb24b", "29b47afeb2432448ab91761695244e5000069ecb", "0e5c52de71cdec4d97cd5c98fd1f71b5653bd577", "8e097289d74c3a3b284dd3fd00ce1db599a3cc06", "48517f0ffb2350e5ae6c8fdfd4d611079e0bad2b", "5ed81d89d13482c37844f6b3428ca60428188a8a", "2a7a3f6d5e47cc79fe37069a21ad5e45e990d413", "9b9c515e0ba165fe407b233be05426decc0eb02d", "553c056db1682909132ece0a7fdb594eeb9f5f7a", "ef361cbb1b2b039a68aac63000955523b5135d42", "0177f34b7b15eb90673feffe6bdb6eccca0e2b06", "cb9d29db47a24081b0972025a38edb0c38094dcd", "a6b16c893e07bda5334ff33dd70567f38d00446e", "b06f8411d75ab9d93d77d1579fd851026895e711", "ac091a1be1aecc88e6c771b609beb80c066695c3", "0b80bb70b4af5cc08f3da763ea3786fec4796058", "6483eab6a25d0ad1590535e1a034c0d2f007a741", "5bfd0a5a5e57ca09324246da2efd301bf26ffc05", "fce3dabaa406eb902badee5c65252a2a9e71bafb", "b5105c1327813dd224ecc6d52008c83e4477642e", "605c1347f3b007b6975d0122c210ba0fa3fcb529", "6329402d186a80158f2c60aa900130fd6bcdc6de", "6e36e9231cabeddf8d48ca4f11232720a74938fe", "870f5307bc2dee1baf46c62750a1e4b90d6e3365", "226d07bca983c509a22954a7c2d065923163c3ed", "d2192587c01dd29b55b69ae5b110b930eae1eb58", "d622305ead04eae8040bed9b4d67a28044d2c9a4", "f6ca39f0ee5002fa66bef2d6f9cb9d0f12046f9e", "bd82a67478af98fb66d00e13f3b0a5e7be0f5c6f", "6bea484037d8f1bcbf76204ae9ec2af55db73061", "2924a228e0da31c317bfd61135bb3b0157b41e26", "51a620a7c74c7214d25280dae9833ca478d89ce6", "70c1506611893602365b55e66fecbfb0bedd1838", "e24690d5593524e559cccf47b968db9af8317c32", "c9d09d29935d84a64ac02000b04ad0e31952cf36", "07fc0637b3d73aadaa4c13f8199ae90fb0f6ef38", "cd445b931c3feb4ba13b307393ab136e7c5aa061", "373c7d4608cb30acdbd64df281aa2f02507368e3", "8a7de05250f662651b7b9c432fa338439839c2ec", "6be7009d9ccb9e52c0e6e2e645bf2c4a11d417cf", "e2f68f96746e71cd01329cc3aaccc149cd9be0bc", "31b69c10ee1b2ec47603643b9478fed5877d1d3d", "409eb732dcad4a2aa8b4287c5eb461ac457fc389", "bc680e7a623e57afa25a3ed662846fde10fad72e", "31fd9523d185e2874c0b6648239e4982defcc90a", "68125d6036146cc781268ec0b5c5df5dab6fbca1", "3e9f452bba27d47af55bd5efcb630bde2dbbdd52", "29830914d49dc77deefabddf6c0f56de57c2aac2", "e76a5153852480018e5bae9674e6b6182235ef55", "27272fa30326b882680cfd96a5d456b4caf9e334", "874a5f4051e464b6cd3c26ef0c378725064e0615", "04eb466680a2038b0581ca6bd7365412e3c95ccf", "fbda65f6c2a73037af6b08651a7c7b4c7985cdb2", "68f9e6e9b26e8d88d080c9c257ba04d0f6b5fbfb", "f8378f59e3a6d47870262e27064223b52608ec66", "d910ccbb8988a02d8741c19552593925aca075df", "fc48ec37bce5865f953ecfb6abec2ec15f2d5641", "e58007b71e2e9a64952ce0991577d3be42c2b081", "b77677a0c4c4f6987667ccbb3fb3b5ad02cb41b9", "df78f85cd591785718728e66ead4832eec1cc7ea", "4ee7583d3dd67aa5675cf9cfc4fd903d45ebf8b1", "d17e80bb15a28fc914d4000431fda9569538e867", "345b9b95abb90509fc4fcf9e8b23f2f060369717", "c04e8fede26e863e522e342d15a3a758978b6319"], "father_version": ["970f8e8394b7bb3f2e9db5c6bd67c2ce66fad6a8", "7d62fd47490e72779266a4fa59ad84d92ce174bc", "5ffb5d140cfe8cd9658827dd073a53fd72a3a2df", "cf192cbac6c23e70a509c2c9c3ed1e5f80bffa84", "6683cb240af5009d1803be0536a0be2d9a3d3d34", "1556dc7df9b9e16d4a77c93902a59673e60ed780", "2a42e3a05c29fe6039bafbefc682474d17b4a8e3", "aa5d835871482d1e92a8ab77dbab57e1effea86c", "7e1d8395821df54382fa7f015bbe895ba16d04d2", "b1d9370637c15304eee8b0a40fee26c39bf7f2d1", "a8e288a44d1b814ed6634fba225a5cb6148e18ca", "25b58ba1dfc6e52d16af9352db38a4a05b3a4ce1", "50088a5d9954456d6ac085230c2e386cb1cfd4ee", "7e7c920941a5c1a1f754d522ecc38ae46451249d", "2f1933d0f7b081684c5bd44e9fe8c5551f59a57d", "738786a16e580c715aa230844bd60551f585d925", "ad56ec5fdcfadbb49bdf257c7bb8fdb0f008033c", "5dfd5a92ddb34fe7918494fe4e6f2b749d944180", "8a8838950b7115937ac0a10e86cc7b94e32270f0", "0b110bca3d516f49e009bfd9131ba0b49adb375a", "b0d99c949dfbf3ea6999a61f4822676f0858ddda", "97e479d3d2c2c7866fd4cbc97d5976a99451cc69", "565b554a579704619f534bc585412a8af1cb560c", "53e66e5f7a3ef32939aa06c76d05bbd8e02480a3", "dbd18befdebfc39127b295a1a92dcb20342d08ba", "c2afcf4e5dde831948ca28da4e2646da36c7e195", "cdac7d8e38c89037694b3f7f16e776bab7dbda2a", "fc411c4506a023d4a537801454a9b91b2b2acf24", "da797a8b87b319d6e97a18d81f583bdb5cd67472", "87250eb8d356263fd2570f3857e8eddea1248edf", "de2aaed08ef250517b0360556b72b5b3fd9efd23", "ab6970c66be5e64bf2f4160ec9a721b3adf5bff3", "64274a1b0e2fde9719c66dd85bf1a2005ed3c969", "5a32541436963b966133459c6146b4de9c90a0c8", "b0e4400c0e3c55f70f28355256a2ab83a9c31184", "24d163af7f24bc49a7a6a7a30946a8a795778ee9", "90e4436a35d77fc0fbf6df4d20b980da337a2633", "7d548eec6a6aab72da420605a029cd9afa8c0be1", "07db912595f3fa5e83ec4029152c38b74a15c506", "e63bce0cbcd1085d1a0a91e0c5231edadf9bb09e", "fca936407e7a92ef9b2e22c2f292681eb3da02a8", "818d8d3147e829788484e9e7c7996221d7c4c001", "a3979b5728efa960ef497483d2dcb5deacfde2ac", "acc9410db926c2008856b6a6aaa412688a2ff755", "25f188037669d897ae0eec94b9fbf67b32c1e013", "7745caa0ac12dc7d42efd6cb87c845005f4ad465", "1024358d0ba03f83ff6708eaced2cbeb037ffeb5", "80e305dc845e17c7f11fbfbda874ec0236117e08", "ecf3437d917d13907aee4fd73184d9d6ddcf7092", "a382468a804d3842dea8b591343204086a9bd621", "a4dfa421e48d8c91be4402e5d8186340978b42be", "4bd8c1941dfe7bf6f140b32a5743f184389f95de", "bf1861e9fd9b1d9bd9368d54cbc66bd70caecf27", "14eda6cf080651db983e72c5fe8e6e3d9fe8c1bc", "2a37bf177b100ee2f6b4e7130c26e5e8142ee4e9", "0882d2e460a56d2b3f919a67ea4a760c1729faf0", "999854ae6f56177d251d309845077f180f7a8087", "b2311583d14ed0eb250335717c39f5fe5b4d2250", "91fda70650dd89ec7d81a49cbf7d327a5daa0af5", "21d91b9d9ec9085e42cda89ce5673c2ccd4f437a", "2c63a21cdd995005dfaefde969f5ea04e8c78ff1", "262ceaebf1782f536a0acf73a4e2acebce3501df", "3c7a8c9dd9fcb4a8d153ea40a61f7c96fe180f56", "42d4a3b2d4039f4ac1bbd9ec77befe4c4de2aaaa", "597977ed1cc9f807d24ec2253da9a64f86452b29", "9ae601a702a674f8cb2dec8ee2c75af5cbdb7639", "0ca43f649b76c8340eda6f1a2f4ddc9d716379a6", "e20d264b881cca51f66684e6cb1424b7a2173fc9", "53331545c5daa00cdcb70103ab5bd6d8291dbb64", "fd74fcdac7c5912478ef0b6c3354bf1818e3952a", "53c7adaab46b2671cb931b15079e0927f9141067", "507efaa5c320aed3e1656eae6f9c0a4f9ac2c26f", "600bb71c5bb68b6624f09975f9ae2c93ca130742", "3f08bb69221a62cecabe2ea86455c6d12f5f2164", "21ecaaa11052f19c65d15f75952d0cd37e2f17b3", "2185fa6b084f480b53f79cc2ddaa84fc5b26c5a8", "5f18be5fc53668348ffdf2bce61b5ddfddda6073", "19056800beea0671ec6f158a8278f99c791dbedf", "3d5824c2c42231a1c28a9b3290976d4369a8d9d8", "d07276b57570483b783f4727d1bfb2f7b2e314b0", "f6046514d9432e1c657e942ac3fafdf138ed43ad", "e714ebc22cf62abe3376b33d32757d0de9ddaa8a", "47732dc18479fa8754bc3c50c117c642ac55b33f", "7ca888385ded566e3a074761613707f4a1d967a7", "5bc6c3c8f82532322456e396dddf2d5a4a18cd7b", "59bfc9a67dc8d8a0b14c7d10cd1fea37124fd964", "917a5eaa2cbdad54f50b7a18d0f481b9ec73fa2a", "3f9096cb8258637a2c56be2ecd460e00ece0be88", "3036d9ba31636f1b3b370fa27bf2a1c9474abb93", "df356ffab2eefbe23818ff6f2543d88fcecb7ad1", "47ea6bec7ee56ccf7b6cb59f4901ed85991c2e7f", "d735c07884406890048bd3d54f3adcaf7f37cc67", "674efdb70d7e1a22444757e173972dca86202923", "1ef9547ceeb952efa7a293f31e954def448ca3a3", "fb5ffc0dba3dc06660d5c0bade8624d89cef21c8", "5b4971786a66b766265e798140adf8c381cb834e", "d15e538fcdca621a436021dfcf9f0588f3724491", "2a83802e4f9ddb895d067ca0662377c732e8ae82", "c1bb287f30c066731f82a58eb27dc0a8051b56d0", "d43f11c3076a6787412dc4cc749e1e1f0e04c841", "4dd5fc8a23c4bd7e14ea14648e5d3ff1aebe60a2", "237ce8b4b5d255d4c9611e1610557700ae5e106b", "051f4270d169f4f2dfa44dab2501fdf50f7936ff", "c489a19b872f0a9f23db71194f060a11131498ab", "8e770417fbf81e9b016818666435c92fe245c4a6", "535c683bdfb9629108a62e37614369f6d4f4377e", "d16cca9e790c947b695607ee9c655ade1ee2160b", "a8f12476ab6b6fae1b86d1731bfe1b2937480789", "abe4facd960d967b7f110a69284b688a747b3859", "5659e05f27c60c0ff99f830a8e265dc6e1423c69", "857f02500f06903876f0def291f356377d2472df", "db6cec930abf067adeb278d204298b9e663b5790", "cd29b7387ac0a084f22f5a03e3f96d364eb33ece", "3ee2b4e117a5d5bdd461c966d52101aa5d35131c", "c95659cd202ce16c70be6ab357b3c69ab7b91056", "afc22fa410c11585e3f69ea3c18cb7282f590e7b", "1182d6ce9315544d2beb675e79dc07d8e4ba1d81", "8ab3c74c4306bb9a7e823397c48b5649c9b2fd2e", "3ca3657a1d6496be491c8e4de6bee9331bdb0fee", "e5bbf3e6483ff392cbcb78cbd047dbaf43a424d1", "bd52b52fb7438ff21e5d079dd5b3fe82d1a2c327", "2cae2a6e367d519c51beb268ea8a09bfa015d431", "4f6a433257f00a7b9e3d66b4ec043dd90c3b9871", "0a5ae269e533bf2e21b1ef572f8d3fd918f3a81e", "b44a421f5cfb6b6ff17580db547e2229b2cc7c7c", "d84f448298c6b93e6aac04d5b4a7479ee9ef9299", "0500bcdcf6e4b83ca1b1b2cc7cc7b61ed8b4c6ef", "912165d07cda81ac3a5b0085dd56435e2013a52d", "b9511e239825fb1353cdf13ee07a43b60ca0f65d", "05140ebf385292e329c0b22ee32a876cc42e8dcd", "9a5fbe8ab205777fdafafec2280652e496a1df1f", "67862e3610da808e233cf5749cc0d50b45663342", "532273acdc365fee9c0057ffcb97b2f02a7ef396", "43ba1b943cf1c2fa2ced4fb82e211ed5eb210b93", "c951d96906e1392ce5d7e74d5cd9491ac203f5db", "2fbc1c8de7288a4def594ca51d11d3c1834bdcb2", "b1260a820e7bbf4392175e4690a75c0486937dc4", "44072897197518e1df11c2a87cb2ed736aee91a6", "636692e600b65704021eabcba0be17f68757b210", "7b64b502272b50d5170faa3eb1ad2b15d8a47e7e", "a38ac3218cdc403d4ae946e7cac89f52734573ef", "ebcc16494cce19d2e4f4e332e9c0b0d7eb6a16a9", "eb70a95d668e273860d7bf7f1b5db42088dfeba7", "7bc4c3d99c18617cbd7211f96a28e116e82098c1", "dae22695fd7c9d3ecd20bb39f995bd766ba37a41", "850a2e7179a9ac568bc42e785e8d67700bd62270", "552d83015e0bd7ef8b8276dcc159144b171afcc2", "d2520e0a4991213b4befd28084464031cb702d39", "b9e9ed9407755d57a55985a6b649c176fc10297f", "dfcb71595fc5d3e528457b72b517d77c2ccaf754", "0350e6d78c064b2d3650089471112d2fc211340f", "cbea5663e78feead2fd8d7769770940fd175bf7c", "7e5afc8b512ab33e1f15980cdc454bd7a2a6e987", "198f83622b2607a215bc09e0f22d5fbdd21369cf", "a013a4a750518d61c25925a74b2ee9a529401794", "a86494cfafba2bb295f8e145fb6cf0cb6f0db485", "c62c4c9566399d1560e722ef412f6657f9959554", "ba23b4a47b07818237b6c57ae5993ac3949e9f3e", "d192ee0c57a962a0d2297178aed97e92f10d5e02", "4cb3a1a05f04867d02249c0b73cd157507c74570", "e44143c08a15c056f7d7d45912d4cb3c987988eb", "c23c68d023213e1678feb83f253c205bbbecc338", "211bdbef4da05ac1333e8d389764c7bb6941ee15", "d823ed6fe5fd60a4277b702acde05393f17f7e58", "9f393021b1c970f426c59ebbc1c62451c81a16c8", "e27439a378cf84fbf57ce4816d29c4a3be77b8b1", "3f73a98bc024dff9f6f44c09fa3d696bb4088f58", "50ce4ef5a84c7ff93d93d3d92965cf0ea583413e", "12e324739e73e06421a3789ca911cb878973e42d", "f6f4c61529e64b1f37bd5bfa9d477b8564602fc2", "a8d770572be4ca7df064719489814d0faab3c68e", "376e0a84f238d0f4b7dacdaacccabb302a23e1b4", "163fdefbe81dfcbc6442506529119903ba65c9e4", "ea8581bcbc83b35244138b59bf27f8c2da88d965", "0fbf7304d1314d3187d587ac5e64795fb302193f", "afadf82cd4902c96a629d7e289635644840bf5a1", "f4caf73a3a78bf59a18c23fbc624a7d8ab19f795", "b622ffbf35151904a3c8efcef8b6e199759622e8", "7d52fb88fa204eda7680b7535cdf0fde4a75a5cd", "a7568a0a98bf711de8f415bd262cd03f838400a1", "fce72b8f8c8a8e473f4b97cfa3adb4257cc975d7", "fbd83cba2047ef6b8aaebb910f32a6cec33d3781", "1126ebc5963a35f9badc1a568ee064ec80710171", "941ef6bb9b95ce91394802d2a7e0b7cca71bbdbd", "93d594cff8082cd85aae47dc587e2aef3a200481", "2271fb11a934acfb52c59c72f4f2ef784701f82a", "55915c2f47d597383da62d5dc8cb9a92f4d3dc1b", "609e219442da85302fc4e6aa713d349b9e273b66", "8e4ca57359fef6bf44034cdceff0e98da85c95f0", "6499e22ee8a2e47a7c91df9d2d4922b0a681cffd", "758f7d535911a085baac604290c7dcbaf2bf39f4", "f7e70c12d0132e403e9bb09f56573c15a4b07d1e", "e8795f67e38021272208abc04ea5ed3e92a50917", "4d17c600c160a052064d9778cc77a7fe62c8c794", "fe4387bc4111a80b9dbe816f8cd4e6fbf2a1f7f5", "fe9ec917ae43f9434edb8a3da4235189fb1de5a5", "d1bf58f3e67ffd087c84560f07bc6b52bcde19e5", "0b333a2f8232384900338f5c26ee30a9fa853b91", "f00f981a9d9efc134b264beec73be024b992c7d4", "3708a7b7a939782a212d071a44c015bab4cc56bc", "42a801c92b32707dcdec8351e9518f2865d9db76", "2edb7335dd48c2a4bdc49a8e59c36ec604fd637b", "7c5a517765650bf21359c0bb926222b6c58e936e", "c2b2b7feb76333191b3e64687e33138fabf5b44e", "f66f2051ffc66e19d3d9fb704c9f964eeb211a7a", "aae5e23c10890294116f26273773232d51c43233", "5035881b55f37a4b4bbc2641e57893687f866a84", "65c54eb9bc6711a8ba283706c578d4e2a92eb840", "2a977e61f37ab0fe0011216d33213a61dcec29d5", "1519cb0e6e49c6a31dbd5316a70e74b04797828c", "e8ef3477b1e6819128990257214736f9795b7d5b", "67e4896eb76d8bba0eebf4ffa504e775a789703c", "6ae8b0af5526931b6500d53dc59bde00a44b8098", "40d41add3e3449ea3375e5c7021756ba2132766c", "ed286ddec21805f81fc9b9a0a8a02cc9bb506d1b", "bf57e6c58b95d4ca6bec9e86f89d4345e906bc5b", "72a14aaf0960e1d8186184ba0541bdf82bb561ac", "95c42df296e65d2b999b432957e2913c51ba4557", "4307d304b335625a95e0c6dfa1953159efd94a2a", "e2743371e60ce94006ae9fadca30bd55211321bb", "c47f585666e7f2824201c6fb272eb0fb94cce2a7", "54453a151d5385d96fff9e8619d6f3bf6dfa0a9a", "b7ab961375724a855f295bdfc1c508000cf16541", "859884dbf30da429234b6e5ca9742867d8392627", "7877a23bb93f69cb109fac40e9127d472b61f8f9", "506e9a3a6c44b823b4f6c368609928f668120c4c", "c56662c654c6e92bc06e80e276f6af105709c65c", "65cfb8bdb074b56d38e45305150ba344ca493877", "f358953132d23e28373f9838a3ee24df60b9b318", "2824f78d9137bc6118b6138370e9374c916831ac", "cf67538463c29fef939e662c1f61935a662b40c9", "7b9386ed5b896ce57d45d93e1413d905b75dde37", "2ae3254b3f45ed7377493d13b7c72fb068cb7cc3", "e91d854a9ef92c1a9acb7eead0df1f0ba78fab82", "bec035387359d77894e4ee7f8813b04288576e52", "70ae0ccdb5b45d1155a21ce2de1d146b704b5987", "c52170ba59602543099ad874a2747df1e47cea9b", "5edc751d6b1c1263a437d1daf7ef48793b2b2c9a", "50978768ef9901ddcac8a13fdc2ed9b449f15987", "00b61d88bf741bff98f1cd25bd85b4b108d2716c", "6a5dc161bc4bdc0b996da0df5a624bb0d85457cf", "694126fdee3058e0abc24adbd0a5bcda50a56836", "8561977756a3b197a7ada806eb6462e8a59111f5", "0a2d655e10a1e40efb0abc735905c7ef2050e3fa", "8b63f9d886ea0b4ffcebdd736dff425bab411309", "6f4969b8e6aed6124e90774abee15ed783c7c4b0", "21761175e6e205a14a4b8dea3927e799d16c6125", "e700ad623bc75d1c536df162429974a49992cbdf", "270e8d94e5d0735fb8cfcc46df69f77d7679c1c1", "7af91b4aac6f0a9368489f08c5e9f0360e0925e1", "ae5c1b01a739061dfe1b7664752315e0b6be96a5", "787f6d563b50b01ded4c56b92150451ce6e4f7ef", "a5e8d4b174cce5fdd1da49f65353d1d60f4b4068", "7ce750e39af994507063886cac7c407218aa05ba", "04455c0bd0d34e74ae2d6381730892e15b0b156f", "501c6c112f392e1d501ae5543573977586e5d49d", "fb7ebb60e9559fff55d6894d60ea656faa8441ef", "8c9df2df7a034ad0cf24c24778e41c7b1f644bd4", "b405d6daa341bd7d569775115ff8507003ef5d3e", "10769a1e4d1d06e34ecb7c907be5c8e10306ab4c", "e95ae22106bf356ebdfe80987115aeb933d46222", "c3153114da97280c61c4afc493ed5b6ad65abe43", "f6d210c5a33e582d1fbf3cc5da24343c32e173b9", "35024a3abd622f2905bd7253860676dec9af692e", "55078000f28c78bd9ee2fcd44cc43f2a0978ad2c", "d1c0bb14488486135ed0367cd02cde42546bf7ac", "e44f1053b0e11865e7e20d674ce529bf325cf7f8", "beb39532d69c0c1e34707f129e7267c297d50f1e", "8ed7a6075dbaa4223114363d6cf6d557a2170326", "543b49ebba1fcdcd325fcf02708053ae18fa2047", "03ef6ed44bbe5c685b0f76c1683dd4c668809644", "5dd2b541d36c69224af731e52e7f9b11e39f97d9", "00648a2d8496f393b06d4636956d85437cc58f11", "de2095af4bc2880afa757dadec60fd4f1d021a47", "0c5a38ba00163aefe02275975ba73d504c2ba8b3", "7bcc85b3ae098d7ee590d6c03274735becd3d7e0", "26d200ccfa9ff782143fabb8a2901e241e2acc67", "f27c259d398a2776969791cae8f8586f3678b356", "809d2aec6b5228d07494d1da22414bb06e5f16e5", "3bbcdcfe87a40ad2e742496f48dd017b60e47b90", "fcc76035eaea8a543a92617062d123fcc833041a", "21050b713167b9e9204f1e519d0362b64ef678b1", "e1cda8d7f5cd8fc4203c2aae8fa21ce2722c6f37", "efa36f85491daab7e678747e1e426236f7cb8daf", "4def5555e9b3abc54d37f38698ec767b3d517cf8", "9b7c6ce535cebee88c1b0ac771f9be93b354645e", "c63f663f0e02075b94f0eb73a93ced5dce892ed0", "8dc0fc45f8506c3cf7c050a4c36f73539020c174", "b535d6a44be3f8d29202ef1716bdc9f5e81005df", "addf4fbff60b54c88fdb51a486d072ec52f5386d", "0b6d1ac738ae9689e07b49c5139a0ffa6882b692", "354a40892c9097c3e4f19c9ac18fa75c978455b2", "0e1470bdf3e33f72773779190a7afa53bc6ac0b4", "05ee399884bf9b081ada955d1d663245177a897d", "efe4c497bc9db6073284f0c1c3ecf63f94adcb1f", "ceb86f5e2aea8b2c418bc69e55ee5ac8959d91d0", "3438997f1aa852d84cd130655f5619c71b047ecc", "1266984e79dffc2528556af0c49b4d6900a56a36", "93b855feabed26ef50c6f7fe37021d033f8cb86f", "6be6649c86f74ede2e7ce8afecee9ef53aa5dc22", "14dc68a135d9f253a3d3550626a3e888594f3958", "c4a151ef4784ad2667274026e9b65d4ab9695a51", "c59a3fe708e9958111e6845d2a76b87a333241d8", "f0ab75bce6fe27210f9cbd0540d67d7e93e4ff17", "af44dd19aa8506e3a261e7539bfd677823cc6dff", "97a40d036d58b9a7970bde4a74b0de3fb24f6f49", "5fb13f9b1fe95c71dddaec499d64d767c8f252d3", "334fd464c98a67f46b1162afeead7ff41e5e9381", "e06c8d637075f371ef30fe8898455ba1f8c0bc54", "238c7f0597db839112b67baba646262f98734764", "edda14a5dc6b50cb864ae83aa23e1155b3179cfd", "f1c03bb606ee6291a72239d2e7e952ace3cfa352", "3396ffbd56f5fdccb5ed0559a76ad8908cfc4517", "49beb5878d597e0c955b137de34f1ddb4a075982", "fb56544020a67abde8839b334a648da74e6bb7d5", "2361fcc17f56fd141acc2f808ebcfbe8e04c81bb", "97832a89d49b8a47d29ed93c98ffa3d8c6b9a09e", "a5c76ddbe425090f7e6180974e639909ffd4bc7a", "cad73ff70112421a61212ccbe57faa9d04ffc3ef", "6985493f4c2a7e58c2e98e83f80e0377d01b58a1", "73cea225da1a846f83138832bfd79a545350a0d0", "782f38a968d8780cb1fdf4925111041511d369e6", "48a4b602bf0302025173c641397bcbd5a0118f5a", "2c55871ee52de0fb1155195d6f4198ca26e6d4db", "a47b0a8deaa7c05eca142ec0fdf20e862e85d789", "b3134a6f447b8d0a2b5ad1935bcc158902739626", "f3e4dbbcd16e83b7800e91df4b758c75870f6f70", "d79c69d9c7e120f0c2cc7b804408d4285a1b01b1", "a1972b6f5a5369239dd7b2019e91b87b2a2cfc67", "aeded49161a8853ff96b8574717896846f689923", "f6d0b13a00e952bdd6da7dfa27536a436d22e841", "8c70e5f038290672e0a84b46db1dc3e6058a79d7", "e2ecd93c45dba8806dc0785e22394a4551bb4faf", "3c799d92c870413ba3414092fab274e1511b1f7b", "8da89a3fcd81dda42e4b0b624710589593429cc2", "2e1e2d0451512fdbd156d3a414c1c2859cba7581", "ef351db78d796fe5054a456850273c36f164ffc3", "34ce64312c6b14635efed49f12f054098a4d861d", "9dfe4b1804879094f9f1d87fe049a21286a8514b", "2201faafb85c0fb6d39bd232cc497bf581841aad", "284eec31af2aa80cf8c0011069f2fa4266497502", "0ae0bf4c9c2f757e66692978c08672b9c55542a2", "1182e61f25edbbf29a5926ee03a615954b09bd1d", "21c2dcd147885084e20370ddbf27423f61ab9b76", "decc3eb8a05711e06f784b19ec5b235adff253d8", "9600e46b665f49a45a3b0ddd7a08bfb460f75bac", "f89988da0c60a30574a53943d1a3073cf5e6c45c", "58d83792542090e96d4db7508f8b679e70aa2726", "973986bb208daacc011ff5c67d6922889aa77042", "68c03118d5ba914d8bef7c20559dfc5563bb75c9", "6b114a08a68b42cb27ecc5fd51680991bbfa3163", "cf304fb81c84e8ff62ce749d4f2d279df339255a", "c761ccfd492b29a0fe3d47769f5b5200baa666bd", "e3e00385bfe93432cce73a876c8ceb8c8cfa14b8", "581d54a90553c070c3206a867d7d01df65f668d5", "8d9044658cdd25df23a310b37f0b8b43d3a3a5aa", "b36dbaff94db1885ad17f8670fc1f9934c2b57c6", "947afd205d0744f304a459117a6c16f5e46130b0", "b46c11eba2532f20e6cf6f3b440a89882e53aca0", "19a03326dbe7b4f2af80b554a9a5631cad98ac30", "9e3b1a76ef9551e69273603cd4a236f4100a0cb3", "d694169f49d089faea7520ed144ffe4ceaafa620", "514a6381287d732e41fcab660305ebf33920a42f", "338d58833947b12d8a3dd05acc6d89827b5b5807", "6a7a5a9f124ec14c73cb31488f09771cf49739ea", "57a8cc59afcece4c00a6526940c8f306672f328b", "753ec54e27bb7baf0c51685ea6d7cfab875cf1c8", "8c95965f1d54d5aa43db598d5d441c53f044c0c6", "b9aa84001d84e78645f2c652adc806ec71133915", "fcf09722e3b6dc215b3cbb531df33d69968ea2dc", "6badd230f31d45df92ec8ba076cbc26acfc0fad7", "828c81300a9b03489e8e5b06f2e0435869b228db", "03742bfb135bd53a263699eb161b36a98f303952", "6252c98eb389f036f0b96edd8d5aa0ac96cba16d", "ff8c967b3097cddf981ef17f4290a5219422bbf1", "016536361683ff0ccd2b9f0da8362faa65cd24d4", "25554d6952a548dc1bafd1b9bfecd55e1d7a547b", "dfb39d2c2acf7cdcd2c29d06f47ca5971094c8b8", "1f55acb58d347289cebe5731c5df513c9ce678de", "1585f08eef0a43fa95534a26965b0cfd2066fe0a", "611a9c6b447bac0903aa9adde36e5e2353c843dd", "ec7925256558cb9f034a069a649ac587e5b49829", "2d49fadf8caee26b5560486824f6489364ec9bb1", "22c8c48bdf495ecb9b0a7383f8498bfa10ed904a", "d0b049db6d514d643c719e63e1153a48f0d9d985", "18afbf6525998a88ffc50146ac7eb477267c982c", "003daf071da2b6ef338a2de3174231caf3ba893e", "06e0408b613cd893631f9e1523fac99973ff3bda", "a0127a542c7ef6dbfe3ae9daeaa81906f5996f5a", "7b7447c90d759eb534c8709406193ea8a5f36e96", "12da8e4b1c2ba866015e8e87aa63972a8a707e09", "c5afe0c0bf963e846be80610e226cbdae52e821b", "85dfefdbd2fb3c34297be339f6e276ade0623ddd", "c47d9611346074c7ff7054080e8d332e4c3f8701", "ce5ecb6f9f4704407f895a4c6f68e8748d457a7a", "374ff15ef4ed5cc15841dcc9c2148e5f1fa823e7", "84e125583b437ba289a433f3be1b7d9ccbee3067", "db02cb0419ea45175878a322afe407e5a2667773", "c5db270e0342a878f5f6df06945f89a1dd9dfcab", "cc5904eda5caedc9d819903e0693056b6e1fcac4", "4f1b7c21d9d99f6b938ea648720ee666d5cfebb7", "9d79ec9b3991c1de8512c6b433b40c8615ce8ed1", "fb2143d4190f3bf7011fda5084c2dd72dbf796f1", "a63852478b4f8fd5fd02383216a47790e881cd01", "1b2e3539629352c0e549b5ba9fa5919b2218bab1", "70f92e1460000fabe660e666f44347fdd173d657", "f875487271f47622e30669795c9137bccc8bf827", "c016f0d8079d82320ecdcf47ff2a5911f06230d5", "a27c131cc6840c828f18bb6985701a8a168b554a", "3e625e83015866c01891294b8c81e72d53551d5f", "2d8f388383d0989c2cee4fcf851dc548dd6d2aae", "5d37fd7cc819ea438e31c335f5699af5f043f998", "143315f453aba563c4ded99de4383783e7e10ee1", "5052c7df1729007eb5649e717de70054450a42da", "403fdb538e41af4ad3a95b97f5731121a49370f3", "b4c2492eddc91ca3e91dd4d094b692de2bfd6127", "ab79fda47dcdc9eec7645f573f20d6e84fe4655f", "2c857a14236eb24f20eb888cdb6f89bd162ce0db", "148611682ccd14399edf6318e06239b8c0eef414", "e6741717f22b75651d4d1a7c852d00aa688e942b", "134a74da660b9df588cd246102962230d179f4ae", "39147b1f2e42ffd473df29300a0d2091b7efe6d1", "f61eea84537a0e63b0b2f9e7f521265edec5e99b", "a723a4afc07bb325cee901b181a05ef503bf390c", "e9d8afa4ddc8aaab925e12110b4bfb28937e6023", "35f7ca1c1f6f7e8a8702a8b7727f1b8ca5f22989", "03bff562fb779e4c9397d26d91293787ba1c839a", "90f6b2bd22d5827b1bfb649abd08eaf44e622831", "873b78fef29b9aa823b23e607e8808af2aa5bba0", "fe2f0b2132e654ab504c65cf294b5b941b7be8a9", "81dcf08eb70636495e91852bddc3cb9b3063ccfa", "e92765439cdaf472fb69c0173e79f101e37acd32", "16f80c1a9695434ee8dd4ea0c011215499c9525f", "fd31980b10883471abc2bedfbc6f2e5cde5e682c", "99dee9a9f66edb78e6229e3c6d4a233b8a9f578c", "13d73dde4ca225244c0b076f6a5a9dc90cea5744", "2081efa0cd00c8756fbbcd152ddca860e29ef386", "8a8276bac194f5e3bd9d5a7fea99742cc5c2abff", "dabd39c6d722c5b68011288e8d7f1b8eaff21750", "583cd256f1738b32d52196c3cd1cad816830826e", "d4efe8e5afc4f4c17fa0685ab61959efb102799c", "ee67bb3c884f003b42bd2c9372db0c138726975a", "6a1782b5fce2b55fc02beba7cbef9b6af7436779", "b4b879335b33f6590316b63f41a22e96a0ca6954", "88c3d5b1e467d03bc6b3924e1069a9f43f48de79", "54c651fc1e9c3a3ec4816e6e0fafdc2aa3ea002e", "93ab35a36faed77d8598f79f03a28545d8d96688", "0b6f1e7f2facc2711538b4dda6a89f1c9fb21884", "ee3184af9443067606933d03caacc10d1a7b8dab", "79ddfc1e634e503e354c6f5372a503b855fb50ab", "9857aa0ddd1f4683f03d65b43b0602d875ca6f5b", "7e0535f81395b8a9c1ef4c494c1d1aea8464d8c1", "e4c0d89c2ff56035f7fd8ac190c7e64e60dedc95", "a69cbec5b9c9c2217215cc0c776374c52872a1ba", "565b61722edb5ff5581091b75b9d2fb9e89dd419", "d2416576a6cd965d729bdf09a8aed6ec4a9bdc8e", "4dbcc94d675b35910d9320d186ac8ff89812d150", "c886b2ec22955d57f60f3b1a1a6ea9a9ddc7bb02", "54ff6ef8f5d2b82599ca1bf6fe98dab01ae23b94", "cc2e5173dda573b5ea1eeb43600ae88bdfd4e5f6", "900e732a1c0e86bdc04d9dcbc4a2f9c117336a00", "9c5484ca67c8a76f0e050ccd3da500208ab40a0f", "487d376c923317a183e30fa51d89de5314f802e5", "5d3897f3e98afcd8fb80d89620d45aac416334ab", "7f8068b1edf22656615118ee3b6e1026da042b83", "b1535bcc0acc8fbafad8cdd726ed4af0fe4230ff", "7b96a7362a90958c7b258bbbb8099061134dda79", "02c835f6775789d158a77151ba8c3130749b8cc6", "5d58db87932fbd0eddd8f7d1d133808ddc27293f", "ecf9a5cf2f62cf88099c774041e60e29e1ae1c04", "fdad061aae97c1f5636218c49334933210a0085c", "d05f8e51ad09cba1e3b540b460751865fc08995c", "bfa9790649ea9c532d54f78b5e2645261f6dc917", "824b41d620a90702ec7d509ea478f83a83d92a1f", "7a179bdbb6dbcb3e275aae21504cba4cc0c66323", "4395d39b69af23126b5a19d0d1593bc1a947c0b0", "2b51f99c4f3341d3af2be00357d46085a64e0e88", "c821374091b7ec66f68920e44b01a4d21dd984da", "3940a4d29f4e896e7b7a2c77d3adfdccdafcc940", "d54ab7eebe3b6c862b6702a547b87f2a66c486e1", "6915febaf23c7ba8e46920dfc7c923536029c8fc", "2e6944887f66da4268eb4c98532c05358c7c2b05", "3434a893680610d5d0edb014dead6bc67ca07abb", "367418b789f5a9b4466fd2ea770b642c264497e2", "ffabe183facf48eb8fcfd48a9c8cef674e5594c2", "4e01108f38daa7d86f0ea4920df62e5dfe1ee13c", "cecb4fa8400354227a9d1956d7b04bd8b2804d2f", "2105c70440613317d2b1298a75f7eaba8a72f499", "0b6ce667b9bb7d3e39934ac00d461ec6e740b46a", "9e9a25ee7ac65db462cecdfd50a352132e8e7018", "5d28b1a663c50bdea21df4fc5a275d4aa2b9b603", "75cb41a9dace6c4eec723c648327c5c65228a385", "eb7f6e2bc2ccc432ea40266da89222d138b26bf3", "bbae59a92a73ddf868595ba248a74b7f2420ad6f", "02064d29bded8a748e003da1a9457b9190e678c8", "58a0fd972ec289cc5d0b7996c66075caed9e10f5", "c134e781c921615ce8834dd9a100deaf05c32a83", "eb0eba713eb1b9c9b4efbc80f1cdd0f6cb4c29df", "02c61d002cfb444a2d06e8820dbd551782f7432b", "04d7e15c76d4ef2a7d6c05b7754aee599a955ea1", "98722c27ffb54bedd2ff862815b42658245a0780", "e709d95111222ed128ecc8e639e0559c4b9995ce", "8becec4726b896d9c9344574f79f81dd21ebb2c2", "c76d6d098c1fe285bc143bce0bc113672079c3fa", "77fe296e2fda1565eecb129ce6e83b78e0b1b667", "abacc4c1356f3fe1c26f8387f906464d7ca61d0e", "766eefbb2fa602ed9718e463c142d71af0f0b368", "d2b4d203cce5444c33b79d19c4e6389447223eb1", "fea4d3d9839a6b0ed7e7dfe8c32439573946ad52", "c428eb6874ea5ab77f7f9ef1312d0980f33d8c06", "c902d3b8cecb1af24187011cdd1da20c5be9b5d1", "d5eb80eb2368f34d3239abea54baedeb7ffea603", "f740c643256e111bf9aac8ab8c4dd3f3b7f0c58a", "e88ce06fe013f7ebbbd013600675fe765351652f", "7a2f0c14aecd6fc9f961fe38bca81e74b35063db", "88ae8e78c49df1a2a4d26cf44fa892a3863fe919", "9ca108c2dfd4adfc9afc152c453790ed2848cea3", "e8131b1017fa8eed26ec556115673e2acd17496f", "425a6843f5056f4aa6930e899bdbd37663f8858b", "f67c0ed98eb50885d81d7f263dd8489191bbd8dc", "17be6cdff524ce8afdb2a10f1b5a2d166e9e8bf6", "05fcbc7fbd169011ffe232fb89569750dfac70eb", "9cb3b94268f04cb3edd2ede4a6b7c9c9bef66978", "a29a30cfe7a878cd7ef68afbce84c776631248a8", "0a8a247eeab7b7bf6d1f1f13000d4c4c841cdc0d", "e17706fcc8e57a840d6cef47186bbe77fec60565", "4b9fc55b68ac1f6994add4a6055e3480808c98aa", "f1dd7e619a4367557050c9cee33e2f2be7322bdb", "42954566f05d07c8b870fd70104de82f2996b4e4", "ff15faf4fcb87515c92eaac063eb3f7cc61cb70a", "eac0783c493308a0e945753ee551b49f4d8d55dd", "76c4790f0c015cc330250c6870c485aaa34ab714", "03ff49d377ac1843f0a1335b8d85c18295fa00fc", "5a328cc36f3b6a09812f57e4820b07e09c412d3b", "f079f85b5cb97f8297b759d79e06a22614d3df73", "c4dda0d860520443c34727a38bf57d144ff63029", "b3990fdefdc7de8420fc71b231563ed59a180d14", "e5397d1e2c906ed3f10e8dd69bf8714091b131bf", "fde9baac855d67dd8d9eeaaec9e36adda66066ac", "1cffc0bdce2384202dfa166e840315ed543592ee", "1ee1446ea40f253468dfa8aa750900d2739dbe8b", "0e6ce632d25a9d6d03c48100939dd1707f25877d", "929cdfd56bde5bd50dd1951ce531c100870c4982", "34f657640aa2b92dc99c1fb3525d6ae555fd39e7", "5b4c24e1888002716d14fe542dfec9fd07b8beb9", "37231b8add522e2e7bdc13a1879689c7b301d746", "5b2ef3be0aeef40fb5d76c6aef572cc4e11ddcbb", "9075f381fa32fa35beef0d20046aad8aaedece09", "3a72036082b20e0d8992a30ca151fc75709dfe45", "b993216c7cddf7465d65fa5363bfecf9083a6a1f", "6efd1a22e2e4404b4da6211d67989c8530aec47c", "d5fef1af051ccc76fc11d7e40170002e71553d83", "1a588ab0f687709fb47bb88f9404bb679afac191", "3cae252531fe1574d57650eaa1327e8c799594a9", "8ae50414905f9b1747a035e0caa2f4954b00031f", "66f18c37d5e3c6bfa6e45706e8d152b4b30443cf", "6157cb2484b302d50e67e4203c041313bf644f43", "bffb451c8a8b673d8e58dc992e26526675c93eb1", "40ffb2601e86d902b542ed1fd8e65d4e0bc0ca4a", "b2193594e02f79b76f11e6f0c1b230edf8774417", "970348c4c69ed895ccc3dcc3c816570a8ef307c7", "e00d59e14c22b429286cf82c625481cbbfcbf1cd", "66bc5248e8aff5e58324ee3135081113eac356c3", "523ffbc62a47f3ee5e3439516f4ff0a42d611972", "c6702dc217ca5fd04bfef2337af43b78b30b1fe1", "dd3941e072a011e5376c74f14da955083da67ecf", "b0264193c9b79c6d01e2c00d2f2692b0a34f6d45", "06783c02b488617ad178293b12330ac862537e82", "ebb0d3f859824fba5749a6bb27877b540032cbbf", "ac8d5e9e7da1be5d6006d76dac3b390d31624c80", "6c8f5e7685931556d486f813393cc92648d0baeb", "1bcdb8d8a3f53085eaa3c6de4338b1b8d5a89da4", "6c3516d94540be58f7b639877250e5f790132305", "9d85658109a562c60899554226b84c15bdff9a18", "4355f1ed93344092a89192c93afe619b1a8f2aa7", "0f320ba28be23717ab7f617bc3c7714aa6d30e35", "c07d3ec5f0ba28b1daa7a3824e75b744de21f0e5", "67b5e2e87e92fcb2952c7e3d5b6a46e835377450", "bc5be7ecefd18fadfd6cd4e4eab9ea513bd18569", "37fde143106936e735c4f5c223c877f590139279", "5e6ed3c82c989456657334fe3fb3c8b924ca52a0", "09b27d2e4bb37af018df65cb356eda20739438b4", "1f6786537bf84144555a54718d92cb12d0f981aa", "7cc3132797cbfe1312373b7d91bf15098ecfa661", "78244a354161d2be96e9f7d582a8863555d9415c", "d6da7a524050a51532fd20088d9a6351eb1e2b5e", "70735210b6b6e8f3cf7c36284efd5fa4d180f7c5", "343b81bdcd55d8adb654b3be34f2093027f82ff1", "926d7eaa9e518f86d6e10b55e8091e2ec5ae04c0", "fd96d07b98435ffa993c429c2a27cfab9ed7fb66", "443d255a8e9f4a0a66d6cdbd565778e0b0643b81", "c55a89fa3f9328d257bd6641f8d0a557e836d110", "7a1cb41929f647501694a87c32326be1e8cf1450", "dcbd4758befc48cec867e76f9d499b78b373c91a", "6fdedb48973a1c4de4ddf4c04d3d56693d019723", "a852d771a7301b573fee733f044450cb722cc254", "e4a1989df990c488a3f551a94a4f48bfeea25ae5", "8893352cdca30f4a81fb826e76417197112e6713", "31fa32a8c698dd6299cce491a4a9a07ac8567a51", "0f03b36c338d67831ebdd73be692d9fa3a476844", "07b31543fab1a1659fcd6c098ac55c49f32807ff", "d2146b83916cc4e2409e60d4a0e5e411357cfaa3", "b6c20d384fb0fa259d2a545dba6db301353276cd", "7266bcfcf2d3aaafda4f43032305324412f4280e", "d2fbc7041ae7ee603d70a023369e2b99959e1a47", "95f78ae76b4f20f5882a635ec6295549bd29f5d3", "f7bd9102c0bb22299c22fb5516a48c5c2405fab3", "eef1f09d770d566fc33ddb0901995c830af39ffa", "9fd8bc4c5e859469ea74c3736146c256a26c31f6", "69cab0c1361af5aa9c45b61321f80438c7743301", "892ef9030b61fc811fb9f8e3d747b05afbe4c971", "e8189bf4dbf1bab68d9e46c8bae6698457f58cc0", "aa0bdfdab9ea4d0179ed988b82a7644d1d905c10", "1092fc2803fb46184f74fbdc2002ed6e07edf975", "34a70c1142ba8777f8db6e2a651ff5941c5b1f31", "5f7436dbb6c8e4b9f768332fc1fc73abf2aef5c2", "6cbb6c802a2b1ad56e0d4540d81ed3b3226743b3", "f58ae1cd7e8e476f9ae2a1da4d01861eb40c9cc8", "d606522b3c112efbcb89f0a570d86f20e860b2da", "e4da1f6a3232a3c9a226171a0faad7fc5d6bb664", "6655c629607116862f4862d705ecfccdedd7a790", "16aabf6c03730739126f30023aeef585e1f514ef", "2f53b1df474446c5179cbcaeab809bc6881ab66c", "e47f247bdfacf3c5a34015ced356e4fd8a0444a2", "b7089524d39ad29799218f106f6420978cef7c17", "01a6a045ab01e2da90e0bd544987abc7bfb20f0e", "feeb284c5ed17e0b922bc02f35bb8631612ef1d8", "a2d90a6f273742f7f72c4a87d6bad3fa34649623", "9f399ac9c039e7eaa8f08d6940ff51f0594cf908", "d1b146b2a5db0837c4c03999c715b886f00a368e", "99077bbe9b3a86184532194cc4092d87073a3424", "abbc9689a19894f90f576633b9800cfebba3d17b", "6ee686890529266846fd9daacd1e419ebefd2f96", "cffcb7e935857492498055c89d20ffb8804ee6a4", "049668c7f1aa706052eab527b1e17516a966808e", "45afc82768cdf49570113ca207c3d67ee392c000", "c959b79300ba5f75b15693be756cd6639808c73e", "d99b4e43ea76f79351038f9bd6831c5196949b9f", "4aa958d3a2d071762ec4ce51ea160a3eceff9b29", "c925e519a3a2338ec0ad7fd7f1900415f1ad6a97", "02ab4fac5358f331c153e500979c2e512346f17e", "3f92277da84bbe1826af81b20192fe6ef05b0962", "82e5c62b1b9c8e9a7f9bfe756251b750d1107d4b", "e2611ba71c978f22a8d540fbe7e6a04656921ce5", "a1bc83ce53e03efda16b26238dd594c5096e7135", "20a0e6a595f44612ad9bac55e9fe58a521e1e0de", "1d6fd11421f9d78c37f45a18c6431690408fa561", "2b77151e940830aba5ee3b26068611913c5c0b6c", "b222f0cfd9180fe3e48739c7b6f7cd809f6b0268", "601b48d904b820d8d7fdc919f0eee17071248406", "9bc22b4a3d0a236941b09c972adaf61233309159", "3775ab340067fbee74876a0ad4dd1807ab914e3d", "0177f34b7b15eb90673feffe6bdb6eccca0e2b06", "fa5dacf6a2f2c6553383eafca0a57c0894ef8602", "df6f1f40fe901e8bcccef4068f28e84ea729bf45", "463592665b194cee117c676e6216ed500293e13e", "ac091a1be1aecc88e6c771b609beb80c066695c3", "5bd4c35cb4d0f89a3975c22d2ccf289d9a63dac0", "6483eab6a25d0ad1590535e1a034c0d2f007a741", "5bfd0a5a5e57ca09324246da2efd301bf26ffc05", "fce3dabaa406eb902badee5c65252a2a9e71bafb", "1a109d3707e3e85f1039e2c61e77edf54e35b9ef", "605c1347f3b007b6975d0122c210ba0fa3fcb529", "7d20c5b9ef131c761b3357f38a2f2cf34bb34e13", "d76cfc0fcf028eb916debd651ed8327dbbc3f894", "ead2fc5b4f53c0e71c6d5fb7f49662ec6314a19d", "c8f130637bf7d47be88583b20c0c6c59473b3036", "fb4df84a55fa7b67a2bcb4344efe4e98de96cb35", "f192ab2e353cd70f106d09e6d0664ff835811eee", "67bce6d31306e9d63e154b695b62f041b53d7b3d", "bd82a67478af98fb66d00e13f3b0a5e7be0f5c6f", "ec0884007c05614abbee186ab8603f6f2e3e8cec", "674a26ef75a3160d5d238c448841d44c78ff378a", "7d6bf4e6999f018dd147dbea2d7db3ab4e6126e1", "3c88a4d25163d79acf4633b2c2499797fff38945", "8a790f3e37dd10cca41ee1fe0ad5b4588e3f1e18", "a8f00539f0ddf46a1315c85086ea638e3420b483", "ad902b3b2f1584c748ebc655cd6e521d073822eb", "9458cb3a188c57d37d93c86a2fbd2ea828dede17", "016f0e1c694e0f9fd530c3b9872d4bebe28ecb0c", "76f672f9f13a48f76a05b5f705086665cc0c8eef", "52647e7cdad1566f45702e1727942403c2b00318", "5d0fdba3274111d69365c1a790d27944230085b8", "f7492a6e48fc7ac27966ff9cbe678d5c32091730", "e65189d4ca4c306ba7db976d444ed9ca8a6f9fc0", "054b8aeb227d6e52fb7e807aaf7385e42d409224", "559b703533eebf65146a205a620cd6ad76a0c903", "c4b0f9a2a906fa81dc212e355a9342aac354c662", "bea4acbe9450a953ecd80af8013e0112a6a1dbcd", "dafd9901a79832c724eacaff9e2ab079e8641149", "60b629f00ca69bbaa2374bc7ae21460aaa77ef3f", "863560696582604ded12ebe404b7bc714a0970a2", "1d6503ff384ae0d44a420c8c6c94749d234c2363", "34df80da81dc78db0fd8f82ad00e43b0ce563bba", "64a25669fc2d1c068a1df368dc2880680e0ebfa5", "8ece726724f668bc80015e8371fc6feeaef1a47c", "f8378f59e3a6d47870262e27064223b52608ec66", "17db4aef4f110025a94a15b91c99607b754b5b90", "fc48ec37bce5865f953ecfb6abec2ec15f2d5641", "e58007b71e2e9a64952ce0991577d3be42c2b081", "b77677a0c4c4f6987667ccbb3fb3b5ad02cb41b9", "f796c6569dd57ebb397ef7340ef664b761202526", "4ee7583d3dd67aa5675cf9cfc4fd903d45ebf8b1", "d17e80bb15a28fc914d4000431fda9569538e867", "884c53b8093dc3cf3bace9ccd03afeeaf1e4c73f", "c04e8fede26e863e522e342d15a3a758978b6319", "a3c26dd4eb33b757ff987a32f8b970473b724b4d"], "commit": ["Fix handling of `legacydeltemplatenamespace` in IndirectParamsCalculator.", "Fix Idom gencode for modifiable templates. contentKind needs to be set on both the shim function and the default implementation.", "Give a better error message when trying a relative import.", "Fix a compiler crash when calling `checkNotNull` on something typed as `null`", "Fix jsdoc for `modifies` templates when optional params are omitted. Use the `paramsInOrder()` method, which in cl/474925505 was updated to add parameters from the associated `modifiable` template.", "Fix SoyChecks:UndefinedPrint tricorder when `...OrUndefined()` is used.", "Fix type of TemplateResult. it looks like we need to fix this as well (?) or delete eventually.", "Report errors when performing analysis", "Fix modifiable templates when some of the modifies templates omit optional parameters.", "Fix a bug where zero-arg imported functions look like template function calls.", "Fix Jsdoc type empty templates created with makeEmptyTemplateFn and add a gencode case for it.", "Fix the CompiledTemplate reference for modifiable templates when multiple classes per file are used.", "Fix Jsdoc type empty templates created with makeEmptyTemplateFn and add a gencode case for it.", "Fix Jsdoc type empty templates created with makeEmptyTemplateFn and add a gencode case for it.", "Fix a typo.", "Fix modifiable calls in wiz component validator.", "Fix validation of delcalls to basic templates.", "Fix TemplateMetadata handling of modifiable templates.", "Fix SoyTofu.getUsedIjParamsForTemplate() and SoySauce.getTransitiveIjParamsForTemplate handling of `modifiable` templates.", "Fix typo dellcall -> delcall", "Add some docs for deltemplate requirements and link to it in error messages.", "docs: Fix a typo.", "Fix externs so they can convert a Soy int to a Java Double.", "Fix deltemplate/mod template interaction.", "Fix non-string variants.", "Fix a typo", "Fix usage of LocalVariablesNodeVisitor in CL/459829105, there is no need to handle modifiesExpr specially.", "Make the error message for missing default deltemplate more that the preferred solution is to add a default deltemplate, not just adding allowemptydefault, since that will soon not work once we passlist existing usages.", "Fix the broken link for OWASP top ten.", "Fix typo for soy g3doc", "Fix anchor fragment to the CSS reference checks", "Fix expression equivalence hash code for method nodes.", "Fix type system support for methods on empty maps.", "fields named unknown_fields\" no longer cause a Java compiler error.\"", "Fix some build errors and improve formatting in examples.", "Fix a bug with nullable proto extern parameters.", "Fix Maven build.", "Make a clear error when the type of a @state initial value is an extern and can't be inferred.", "Fix english nit in Soy Sanitizer", "Fix opensource build.", "Fix opensource build after http://cl/421569697", "Fix build", "Add a missing build file to fix the opensource build after http://cl/420820448", "Fix broken build", "Throw an error for empty html elements within a velog of a html<?> template", "Fix generated JS code if proto enum is only referenced by a constant.", "Fix compiler crash when proto constructor called with positional args.", "Fixing IllegalStateException to show missing placeholderName rather that the placeholderVallue (which is always null in this case). This helps facilitate debugging.", "Fix compiler crash with null coalescing + unresolved function", "Fixing a small typo.", "Fix typo.", "Throw error when attributes are  being written adjacent", "Normalize attributes in CallNode. Fix issue where getExprList() may return duplicates or denormalized values diverge from attribute list.", "Fix a few broken links", "Fix compiler error that checks for bad map key types. Was not checking @state.", "Fix OS build.", "Fix some deps on com.google.common.html.types.", "Fix class used for OS.", "Fix srcs in plugin/java/BUILD.bazel", "Fix build deps in BUILD.bazel.", "Fix bad package dep in bazel build file.", "Add latest entries to java extern param types docs. Fix inverted error message.", "Fix issues for custom elements", "Fix extern checking when java_deps is empty.", "Fixed a markdown error causing anchor tags to be rendered instead of applied, making them unreferenceable.", "Fix doc typo.", "Fix test.", "Fix docs related to line joining", "Fix oddity with JS gencode not equal operator implementation, !(==).", "Add externs to variable scope, catch collisions. Better error messages for no-such-overload. Type checking for imported externs.", "Fix the typing of ijdata. It's supposed to either be undefined or not null as seen in  javascript/template/soy/templates.ts", "Fix corner case bug comparing non-nullable yet null strings to null literal.", "Use getTemplateMetadataForStaticCall to retrieve tag name information from delegates. The previous mechanism had a edge-case bug that would cause the soy element composition call to msg div (in the example) to have no tag because that template hadn't been visited yet.", "Fix a bug due to a non-strict comparison on variant keys", "Better stacktraces for plugin errors. Fixed a boundary condition on array copy. Also switched the class to which the stacks are trimmed to from the soy class to the plugin class.", "Fix HEAD against released kythe by not passing the new flag, --allow_unblessed_generated_files, and by relaxing generated source validation.", "Fixes a compiler bug, tested with the user-provided broken project.", "Fix rare corner case with resolving constant types.", "Fix title, clarify a couple of things", "Fix broken command in Soy codelab. []", "Fix reference to non-existing template in soy element composition docs; clarify self-closing tags syntax", "Fix length() and concat() for proto maps.", "Typo fix.", "Switch StringBUilder -> StringBuffer until jdk is fixed for [] builds.", "Fix typo in legacyDynamicTag docs", "Fix [] for short form element calls. The call nodes generated have most of the source location information to do analysis", "Fix issue where the type of a top-level imported constant is always UnknownType. Use new utility method.", "Fix typo in error message.", "Fix annoying error prone warning.", "Add a better error message to help diagnose a crash.", "Fix doc for template().", "Fix a bug in TemplateMetadata construction", "Catch SoyDataExceptions during optimization, and report an invalid value error.", "Fix compiler crash when attempting dot access on an imported proto extension.", "Update error messages to recommend non-deprecated solutions", "Document str.replaceAll. Fix unit test to catch all built-in methods.", "Report an error when a deltemplate has a kind=html<...>\"\"", "Fix the way the css exemption list is read so it works in []", "Fix typo: $bar --> $baz, plus parameter/argument terminology fix", "Fix proto init in template calls", "Use the list from [] to throw errors if css() doesn't correspond to a css class.", "Fix a bug in how jssrc handles data=all\" calls from templates with default parameters\"", "Fix SEC handling of concatenating attributes.", "Fix import syntax error in example", "Fix typo.", "Fix a bug in TemplateAnalysis.", "Fix code sample to correctly reference foo.bar.Person datatype.", "Roll-forward of cl/349596420 with fix to [] test.", "Fix how `msg` nodes are handled in TemplateAnalysis", "Reserve local template names in variable scope. This changes some error messages but is otherwise a no-op to show that there are no naming collisions.", "Fix indentation. Minor grammar change.", "More convergence handling dollar-ident and non-dollar-ident. Add missing error when using named params to call a plugin function.", "Fix compiler crash when bad proto type is used.", "Decouple function resolution from non-resolved error reporting. This is necessary in the near future as several passes may contribute to resolving functions.", "Better error messages.", "Handle key nodes and throw an error on skip nodes (supporting them would require a redesign that we can't do quite yet)", "Fix typo in []", "Fix a bug in how TemplateAnalysis works with message placeholders.", "Demonstrate a bug, in how we lay out error message highlights.", "Report an error if 2 messages have the same ID and different `hidden` attributes.", "Fix 1 []: * Constructors and methods with the same name should appear sequentially with no other code in between. Please re-order or re-name methods.   (see http://[]", "Make it an error for a VE type to conflict with a proto import symbol.", "Fix the behavior of the mod operator on floating point values in tofu and soysauce to match js behavior.", "Update comment. I tried to disallow duplicates completely but ran into presubmit errors in [].", "Fix a method declaration on SoySauce, hasTemplate should return boolean not Boolean.", "Remove error messages that are not relevant if we try to element composition a template that does not exist.", "Make duplicate proto imports an error.", "Expand on error message for del variant.", "Fix a few node copy implementations. These are latent bugs that will be exposed when VarRef can point to ImportVar.", "Improve an error message for accessing an incomplete continuation", "Print warnings even if there are no errors when a SoyFileSet entry point fails.", "Tweak an error message to be less confusing", "Delete incorrect test. The first template only is searched for refed/notrefed. In this case it looks like neither $p or $p2 are actually marked as refed at the end of the method. I'm not sure how to iterate over an empty list as I get a soy compilation error (Can't iterate over empty list\").\"", "Fix unboxAsMessage to correctly downcast the receiver.", "Fix lazy resolution by adding a DetachableSoyValueProviderProvider\" that resolves to a SoyValueProvider and calls renderAndResolve.\"", "Fix null safe data access nodes with the same field name/index incorrectly marked as resolved by TemplateAnalysis.", "Fix bug in error message.", "Fix comment typo.", "Fix a typo.", "Fix 3 ErrorProneStyle findings: * @Nullable is not a TYPE_USE annotation, so should appear before any modifiers and after Javadocs.   (see [] (2 times) * This tag is invalid.   (see []", "Fix a bug in how streaming print directives are constructed.", "Fix a broken condition in the LazyClosureCompiler", "Fix typo", "Fix TemplateNode.toSourceString for @attribute.", "Fix typo which breaks test build:", "Fix bug in SimplifyVisitor due to concurrent modification.", "Throw an error if an @attribute has a default value and is not listed as optional", "Fix a compiler crash when validating skips", "Make it an error to import template symbol foo when .foo is defined locally.", "Fix Soy codelab for Java using Maven:", "[] Fix incorrect open tag location for {delcall}", "[] pass for warning on non-exhaustive proto enum switch statement, and other error conditions. No suggested fixes.", "Make proto FQN an error in OS.", "Fix test for proto FQN removal.", "Update tests that were meant to test things other than proto FQN failures. Fix safe proto detection for proto imports.", "downgrade errors to warnings in []", "Fix IdentityMap errorprone warnings in Soy.", "Roll forward cr/331837855 with fix.", "Add some not-null preconditions to avoid cryptic errors in metadata serialization.", "Fix generics issues in test. Related to []", "Allow empty records in type resolution. Empty records are already errors in the parser. This makes it easier to use the BIND method, which requires a record param in all cases.", "Fix getters on proto 3 optional message fields.", "Rename html_element to html<?> in error messages and add an error message when a unbound template is used.", "Delete the error type, use the unknown type instead.", "Make proto FQN an error in [], warning in OS.", "Fix typo in CSS substitution example.", "Fix null-safe access for bind().", "Don't report a proto enum conflicts with global\" error for unknown types (needs to be a proto type", "Make dynamic tags an error", "Make it a compiler warning to access a proto by its FQN without importing it. Provides an easy path to making this an error, but an error that's smarter than unknown type\".\"", "#better-[]-errors: Raise a separate, more-helpful error when an element was not rendered by idom.", "Fix links in open source docs by converting absolute to relative paths.", "Make it an error for aliases to conflict with template imports, if they point to different things []", "Report error when a global reference maps to a proto enum and a global definition.", "Fix template types in default value expressions where the template type is nested in a composite type.", "Add defensive code in SoyProtoType preventing comparison of instances that were created in different type registries. This should be impossible now but might help prevent a bug in the future.", "Add missing attribute to error message (missed in []", "Add missing attribute to error message.", "For nodes with explicit placeholder names, collect the ones that get renamed in preparation for reporting an error.", "Fix MsgNode command text", "Fix a bug in python list comprehensions", "Better error message for unknown proto field.", "Better error message when missing VE proto.", "Fix type signature of Idom soy template", "Turn off special error message about non qualified extension names.", "Fix type annotation for template binding", "Improve error messaging for missing placeholder.", "Fix empty findings related to nested extensions.", "Fix bind() calls in default values in jbcsrc by allowing expression detachment. I believe this is logically consistent with handling of other default values in Soy -- functions are allowed, as long as they are 'pure'. I believe bind() is pure, as long as its children are constant/pure.", "Fix Soy proto imports for messages lacking proto package.", "Fix a typo.", "Fix issue where soy_infos generates bad proto deps code when using proto imports syntax.", "[] Fix a bug involving union types in jssrc/incrementaldom.", "Fix issue with default values in JBC: these need a RenderContext to construct properly, so defer their construction until the start of the render method (rather than doing default resolution in the constructor). Also add some integration tests for template-type defaults.", "Fix bug with bind when one of the parameters is a template type: we need to upgrade any NamedTemplateTypes in the 'bound parameters' RecordType first, before applying the bind to the template type, so that type checking considers the resolved template type.", "Fix typo", "Fix NPE in ProtoFqnPass.", "Correctly report an error when html comments and control flow aren't nested correctly.", "Coalesce and dedupe imports in Soy formatter. Change compiler so that duplicate imports are not an error (since formatter can fix). '", "Switch ParseResult's TemplateRegistry to an optional, and exit early if there were errors in the single file set passes.", "Fix an error recovery bug.", "Fix source location of no-arg proto constructor.", "Temporary fix for [] (verified w/ a local kythe run):", "Fix source locations for {elseif} nodes", "Fix the profiling support for worker", "Add a better error message for when unexpected command line arguments are found.", "Fix an off by one error in FindingsGenerator", "Fix kythe analyzer for unknown type.", "Fix expr equivalence for list comprehension", "Fix bug in Soy template types: NAMED_TEMPLATE types should not be assignable to TEMPLATE types. Also fix validation logic for default values, which starts throwing errors with this change (previously, this was bypassing type-checking altogether; this is fixed by adding a later validation pass).", "Soy conformance and 0-arg imported proto constructors. Add type checking to conformance to fix.", "Add a tricorder warning to add a suggested fix for [] component internal params.", "Fix proto extensions nested in imported messages.", "Improve an error message when an incorrect error is formatted", "Soy Tricorder: 1. add pass for proto alias -> proto imports 2. move unused alias from compiler error to Tricorder suggestion", "Error out on template literals in inferred-type parameters, and add test cases.", "Temporarily suppress missingRequires. A full fix will likely involve migrating soyjs off of goog.provide, which we are not doing right now.", "Fix TODO in proto type introspection.", "Downcast the error for unused param to a warning. These will soon be surfaced on tricorder sometime early next week.", "fix typo in soy g3doc", "Fix the soyServerKey implementation in tofu by sharing the implementation with soysauce.", "Resolve todo in SoyTypeRegistry and improve error when trying to instantiate a safe proto in Soy. Split off from []", "Fix Soy param description parsing.", "Fix 1 ErrorProneStyle finding: * @code is not a valid block tag. Should it be an inline tag instead?   (see []", "Fix a bug in HtmlAttributeNode.getStaticContent", "Fix typo.", "Fix a typo.", "1. Fix some edge cases in the get next point ignoring newlines + indentation\" helpers in SoySource + add tests.\"", "System.exit(1) and print to stderr for formatting failures. Right now when this is passed to googleformat, the error message actually overwrites the file!", "Fixing broken links", "[SoyParser] Fix log node location", "Fix VE logging in JBC SRC through ternary and null-coalescing expressions.", "Fix an issue where users critically depedn on the oldParams\" being \"this\" in dangling skip handlers.\"", "Limit snippets lengths in error messages of the AST comparer.", "Fix initial broken bazel build rules for bazel build java/src/com/google/template/soy:SoyToPySrcCompiler", "Output code snippets when a comparison error is encountered.", "Fix htmlToText Soy function to accept SafeHtml as a parameter.", "Unused @inject is an error even if calling another template with data=all. @inject and indirect @param cannot have same name.", "Fix the types on the []", "Roll forward [] with fix.", "Typo fix: capitialize -> capitalize", "Fix a py2 bug introduced by PySoy. Py3 behavior is valid and effectively unchanged by this CL.", "report errors when '<script' and '<!--' occur in script tags", "Fix up some issues I didn't catch the first time adding source locations.", "Fix a small bug in BaseSoyTemplateImpl.asNumber", "Fix breakage due to", "Fix source location for html comment nodes. Until now, it was taking (see example) all of the local up til the next node, which means that a comment between an html comment and the next node would be put into the html comment.", "tiny fix to how we generate typetoken objects", "Fix source locations up the parent ancestor line when a leaf is appended/prepended with a known source location (otherwise, invalidate the source locations up the tree line).", "Fix some mock issues created by [] Should really make this @DoNotMock.", "Fix various crashes I saw when running soyfmt in the wild.", "Fix bug in method parsing where methods with no params were getting the params for the method before it (if called in a chain, like foo.aMethod(aParam\").anotherMethod()).\"", "Fix a expontential performance issue in how we collect goog requires from variable references", "Fix the logic in LazyClosureCompiler for deciding where to look for a variable definition.", "Fix a small bug in the type checker where we failed to assign types to variant expressions.", "Improve error messages for missing / incorrect soy: injections:", "Fix a javadoc warning, the @params were out of sync with the method", "Tiny fix to list comprehensions", "Fix javadoc.", "fix a bug in the tofu/soysauce shims", "Fix bug related to ? type in Soy java builders.", "Prepare for fixing return type of Array.from.", "Add a special compiler pass to limit who can define templates using the namespace 'error'", "Fix a stale javadoc, both the @param and @return were wrong \ud83e\udd26\u200d\u2642\ufe0f", "Fix two important comment issues:", "Fix spelling typo", "Fix a crash in 'per locale' JS compilation mode where we would fail in CombineConsecutiveRawTextNodes", "Fix bug where the methods of MethodNodes were not copied properly", "Remove obsolete error messages.", "fix typo", "Fix a bug in how jbcsrc coerces doubles to strings.", "Fix a bug in how Concatenation works in the js dsl.", "When error locations span multiple lines show snippets for each line.", "Display error range when formatting errors", "Fix warning message for skipping indirect proto param.", "Remove compiler pass that reports errors on MethodNodes", "Add error message for methods that are missing a SoyPythonSourceFunction implementation", "Fix Soy jbcsrc jdk11 bug with calling static interface methods.", "Fix parser error which prevented accessing fields or list items on the result of methods.", "Improve error message when Soy java class is not loadable.", "Fix 2 ErrorProneStyle findings: * This catch block catches an exception and re-throws another, but swallows the caught exception rather than setting it as a cause. This can make debugging harder.   (see [](2 times)", "Fix a bug when CombineConsecutiveRawTextNodesPass mutates a node list while iterating over it, invalidating stored indexes. Fixed by avoiding replacing a node with itself, that was causing buggy behavior.", "Fix idom makeAttributes() to properly handle attributes with empty string value.", "Fix mergeAttributes implementation to accept IdomAttributes by doing the following", "Add a compiler pass to report specific errors on MethodNodes and remove them from the AST", "Fix 1 ErrorProneStyle finding: * This catch block catches an exception and re-throws another, but swallows the caught exception rather than setting it as a cause. This can make debugging harder. []", "Fix 1 ErrorProneStyle finding: * This catch block catches an exception and re-throws another, but swallows the caught exception rather than setting it as a cause. This can make debugging harder.   (see [] This CL looks good? Just LGTM and Approve it! This CL doesn\u2019t look good? This is what you can do: * Suggest a fix on the CL ([] * Revert this CL, by replying REVERT: <provide reason>\" * File a bug under [] if this change looks generally problematic. * Revert this CL and not get a CL that cleans up these paths in the future by replying \"BLACKLIST: <provide reason>\". This is not reversible! We recommend to blacklist the respective paths in your CL Robot configuration instead: []\"", "Fix/suppress all the lint errors in Soy's Upkeep project. []", "Add 'pass' for empty Conditional Blocks in pysrc to prevent indentation errors.", "Fix errors resulting from [] which causes goog.isObject to narrow * to the stricter Object rather than the loose\" NoObjectType", "Fix logging functions that are children of synthetic velog nodes in JS.", "Fix RawTextNode to preserve LITERAL discontinuity reason through RawTextNode#substring.", "Fix ExprEquivalence exception which seems to occur in some VE expressions.", "Quick fix for b/143100328. Tracking long-term fix in b/143239042.", "Fix list comprehension filtering in Soy Sauce.", "Comment-out filter expr logic in ExpressionCompiler for jbcsrc, since this is giving errors in [] for LineNumberTest. We decided to fix in a follow-up.", "Add new compiler error disallowing usage of Safe*Protos as param types.", "Fix 1 ErrorProneStyle finding: * @Nullable is not a type annotation, so should appear before any modifiers and after Javadocs.   (see []", "Fix document", "Add .bazel files for open source. For now, we don't need CI (can't run bazel on forge because why would you...) and I will just manually verify when pushing to open source if it works. I also don't expect us to fix these files when adding new code.", "Fix brittle test for jdk11.", "Fix compiler crash when accessing nested proto extensions", "Update error message for inconsistent deltemplate params to include the params that are inconsistent", "fix formatNum examples", "Fix isTruthy() to handle {element} and VE functions. Also change to implement instead of extend the base Renderer to prevent us from forgetting to override new methods later.", "Implements equals() and hashCode() on BaseSoyTemplateImpl so that method mock() can work. Will fix things from my LSC like []", "Fix ordering of record members -> method parameters.", "Fix for empty record errors like []", "Don't bug out when skip nodes have attributes", "Throw an error if a template with {skip} as a root gets rerendered with different parameters.", "Fix test nondeterminism.", "Fix soy templates that pass an explicit null to plugins built with SoyJavaSourceFunction.", "Fix build cleaner error (sorry!!)", "Fix []", "Provide a better error message when two soy files have the same namespace.", "Detect collisions between unscoped extensions and report a compilation error rather than throwing an exception.", "Add a better error message when a static method is passed to JavaValueFactory.callInstance method and vice versa.", "Add some missing deps to fix a strict dep violation warning.", "Fix 2 ErrorProneStyle findings: * This catch block catches an exception and re-throws another, but swallows the caught exception rather than setting it as a cause. This can make debugging harder.   (see [](2 times)", "Fix bug in soy compiler where the wrong type was being used for a default param. This was manifesting in only the get* functions for a pinquito element ([]", "Fix indentation in {deltemplate} example", "Fix a bug in how we enforce that required fields are passed to proto initializers", "Fix code style to match [] Arrow functions like ()=>foo have an implicit return statement. The compiler allows using a function that returns a string in place of one that returns void. This can lead to unexpected behaviors like depending on a return value of a function that was never supposed to return.", "Fix typo in new class comment.", "Permanently solve the problem where a Soy compilation error causes an uncaught RuntimeException and the compilation error is lost without being reported to the user.", "Fix a few RuntimeExceptions in the Soy parser caused when built-in functions are with the wrong number of parameters. Add tests to make sure warning output is helpful.", "Fix a typo.", "Fix unchecked and rawtypes warnings.", "Fix typos.", "Fix syntax for Markdown link in Soy reference.", "Fix a bug in the FormatNumDirective", "Improve the error message for when a placeholder example is added to a print node inside of an html tag in a message", "Fix a bug in how types are inferred for default parameter initializers", "Improve the source location information when tofu reports a type checking error on a parameter", "Fix a bug in how we generate code for velog nodes", "Fix some small bugs in the optimizer", "Fix a TODO now that VE logging is launched.", "Rollforward [] which was rolled back in [] because i missed a reference to soy.IjData.  This has been fixed, also a few of the golden file tests in other projects have been added to this cl.", "Fix how elements are validated with respect to velog nodes.", "Use the new createPatchInner/createPatchOuter functions to pass in the isMatchingKey function, which improves performance since we don't have to do key comparisons twice. This also fixes a long standing bug where there is a disconnect because we are doing the key comparisons twice.", "Fix generate parseinfo visitor to generate data about {element ..} templates.", "Fix how parameter defaults are generated in jbcsrc.", "fix typo", "Remove fixed entries from conformance whitelist.", "expand the try-catch block for code generation errors.", "Attempt to fix template references across af_soy_library boundaries.", "Fix a bug where an unset proto param with a default would fail while trying to dereference the jspbMessageInstance field.", "Improve error message when Soy element dependency injection fails Tested: - [] ([] click on flag - error message now contains text", "Fix a bug in the range loop code generation in jbcsrc", "Make sure the entire string in a function parameter or return type is a valid type, otherwise return an error.", "Fix a bug with nested python ternary operator associativity.", "Fix a bug related to protos and sanitized content.", "Fix a typo.", "Fix soy plugin so that it is usable outside tests.", "Report error for nonce attributes.", "Fix a compiler crash when someone attempts to initialize an @state from an @param", "Report a compiler error on an alias definition that's unused.", "Improve error messages for bad soy plugins, stating the exact expected java types. Also flip actual/expected (actual refers to the method's actual param type now, expected refers to the param type we expect it to be based on the param we're passing it).  Also space the output better.", "Fix appendHeaderVarDecl.", "* Fix ParseInt. Use of `parseInt` without `base` is strictly banned in Google.", "Fix links", "Report a more structured error when loading a plugin fails.", "Fix TODOs to correctly reference bugs.", "Fix a typo.", "Fix comment.", "Report errors for plugins that take ve or ve_data typed parameters.", "Update a few TODOs to reference a more accurate bug.", "Fix more type errors in Frameworks Soy functions.", "Fix example.", "Fix ALL (!) remaining JSCompiler type errors for idom:", "Fix more type errors in idom gencode, types, & helper APIs. Also cast all {call} parameter objects to {?} to suppress fundamental differences in the type system.", "Fix flaky //third_party/java_src/soy/opensource:verify_open_source_build_test", "idom: Raise an error if an {element} has SoyDoc params", "Fix type declaration errors to allow JSCompiler-type-checked idom templates.", "Remove an incorrect @VisibleForTesting annotation.", "Correctly report errors when plugin functions throw exceptions.", "Report an error for the following case, which was mistakenly allowed when switching over the new html matcher.", "Update the check in SoyElement pass to make use of tag matching to produce errors revolving around having one element in a Soy element. This also surfaces some tests in bad_html_validation_new that also checks for the same things and surfaces an error that wasn't thrown in the old strict html matcher.", "* Push manual (instead of auto-generated) key if call node has a key expression. * ErrorProne fix: Remove @VisibleForTesting from templateAliases, since it's referenced in GenIncrementalDomCodeVisitor", "If we are in a block and an error message occurs, add a qualifying message that it is the block that is bad.", "Fix a rare cache invalidation bug in the descriptor cache.", "Evaluate let content blocks as though they were just macro expansions. In the future, this will let us catch errors such as", "Add the capability for one ErrorReporter to copy errors to another", "Report a compile error if calling the `keys` function with an object of type `map`.", "Fix cloning for HtmlTagNodes so it works correctly once the matching tags are populated", "Ignore self-closing tags and throw an error for invalid self-closing tags.", "Prefactor existing combinations of isContentKind_ and asserts to helper functions. Also migrate a html test to js test since the extra file was causing deps errors.", "Fix a few more places constructing TemplateRegistrys", "Fix a bug and correctly check all proto init field types even in the presence of unknown field types.", "Fix a TODO by moving proto init validation code into ResolveExpressionTypesPass.", "Report proto init field does not exist\" errors on the location of the field name", "Fix an error recovery bug in the html pass.", "Raise an error for a key command and key attribute on the same node. This will simplify assumptions for the codegen.", "Modify SoyElementPass to report an error for element roots with key nodes, not key attributes.", "Fix a typo.", "Raise an error for key nodes that are not directly nested within an HTML open tag.", "Report error for Soy element roots: - With key\" attribute - That are dynamic tags\"", "Report better errors when users accidentally pass a SoySourceFunction to the flag that expects a guice module.", "Fix passing protos using SoyJavaSourceFunction when the parameter is a Message or subtype of Message and the expression is typed as a nullable proto (e.g, 'Message|null').  Previously this would fail with a message like:", "Rollforward of cl/217959128. NEW: Fix template function signature in Nova idomservice. Also ran a TGP to be safe: [] Failures are not believed to be related.", "Make it a parse error for a template to have a prop.", "Remove incomplete enumeration in error message.", "Report an error when a js implementation of a soy function is missing.", "Assert type before setting prop. Although passing in an incorrect type to a prop setter should fail to compile, this will throw a runtime error, making these cases easier to catch early on.", "Fix typo in comment and error message.", "Fix a typo.", "Change warning about printing and calling HTML in non-HTML context to error.", "Fix a typo.", "* Raise an error for stateful templates that don't have a single HTML tag element as the root * Fix test templates to conform to this.", "Fix a bug in how the BidiGlobalDir is calculated for SoyJavaScriptSourceFunctions", "Report an error on duplicate html attributes", "Fix a bug in how loggingfunctions are implemented for client side rendering", "Fix a crash when a kind=attributes template contained an attribute with an unmatch quotation mark", "Report unexpected errors through the error reporter system for both jbcsr and jssrc", "Remove check that no longer applies and fix code to make tests that it was checking for work. Enable two compilation tests and factor out html comments", "Fix a few ErrorProne warnings:", "Fix (and improve) support for protos & proto enums. Add more negative tests and a ton of positive tests for all scenarios (incl non-proto).", "Fix typo", "Rework JbcSrcValueFactory to send errors directly to an ErrorReporter instead of throwing an exception.", "Rollforward of [] Raise an error for smart quotes in attribute values. Instead, users should replace smart quotes with the HTML entity '&ldquo;' or '&rdquo;'. NEW: Fixed breaking tests ([]", "Fix a typo in a comment.", "Raise an error for smart quotes around attribute values.", "Add error tests for the jbcsrc SoyJavaSourceFunction path.", "Fix a typo.", "Use Error Prone checker for named function parameters.", "Fix class name in comments and error messages.", "Fixed fromConstant call.  .equals(..) is useless because a.intern().equals(a) will always be true.  a.intern() == a is what you want.", "Remove a TODO and fix a typo.", "Fix a bug where slightly complex expressions for logonly statements in jbcsrc would generate bad code.", "Fix a small set of parser bugs for expressions in single quoted attribute values.", "Fix bug where isConstantExpr() returns false positive for non-pure functions.", "Fix unstylish names in the codechunk dsl", "Fix map function support for empty maps.", "Fix most inconsistencies between JS, JBCSRC, TOFU, and IDOM backends for equality. This works by inserting a runtime function in JS that emits the same semantics for JBCSRC. In one case, JBCSRC was doing the wrong thing (because it treated text and string differently) if it was used statically. However, it is also fixed.", "Don't report errors about trying to compare the errortype", "Fix gencode in jssrc when dereferencing a type like map<string, int>|map<string,string>", "Fix type annotations", "Fix two bugs in the Java implementation of Soy's new map type:", "Change 'foreach' to 'for' in errors and comments.", "Change the mixed params error to point at a script to resolve it.", "Rollforward [] with no changes. The original attempt was rolled back because some code generators still assumed that they could generate requires for soy templates instead of soy namespaces. They have been fixed.", "Add the template name to the error message when we refuse to render a template in strict mode.", "Fix a typo.", "Fix a typo.", "Soy: RuntimeMapTypeTracker: fix backwards error message.", "Allow fixed strings in kind=trusted_resource_uri\".\"", "Fix the type assigned to conditional op nodes.", "Add the runtime class type to the tofu type check error message", "Remove an outdated enumeration of kind values from error message.", "Soy: Tofu runtime: correct a misleading error message.", "Fix trusted_resource_uri pattern.", "Soy: make it a compilation error to pass a value of unknown type to a template expecting a `map` value.", "Fix a bug in isAssignableFrom when the right hand side is a union.", "Fix a typo.", "Fix comment.", "Don't report compilation errors when trying to validate function calls when there are errors in the function definition.", "Fix a tiny potential threading bug.", "Fix some incorrect indentation.", "Rollfrward [] which was rolled back in [] because it caused errors in templates accessing protos with fields that aren't available to soy even though they never tried to use those fields.  The fix is to lazily allocate the FieldInterpreter.", "Fix a bug in how warnings are issued in tofu.", "Add an error for using invalid strings in select cases", "Fix a bug in how the logging frequency is calculated.", "Roll forward [] (Soy JS runtime: move $$legacyObjectMapToMap to separate file) with fix.", "Make it an error to take the negative of a non arithmetic value.", "Rollforward [] which was rolled back in cl/ because it broke an incremental dom template which passed a let with kind=text\" as a key attribute value.  The cl to introduce the autoescaper would cause such attribute values to be represented as UnsanitizedText objects.  This rollforward fixes the bug by implicitly coercing the value to a string.\"", "Fix a choice conflict warning introduced when phex=...\" support was added\"", "Add a better error message for a malformed descriptor set", "Make using foreach syntax an error unconditionally.", "Change warning about passing unused param to error.", "Fix handling of unset proto fields in the Soysauce backend.", "Make it an error to use foreach loops except in a whitelisted set of files", "Soy: Add errors when {alias} declarations conflict with built-in types or custom type namespace prefixes.", "Move reported location for errors in alias names to the alias name, not the entire declaration.", "fix a performance problem with msg bundle lookup.", "When reporting errors about empty message nodes, just remove them from the tree.", "Add typo detection for unknown type errors", "Improve error message for NO_CSS_PACKAGE.", "Fix coverage for warnings oriented tests in the CompilerIntegrationTest", "Fix typo.", "Copy Mark's script to Soy's codebase. Emit error message so that users can directly run the command to fix the indirect dependencies.", "Update help page to mention go links to Buganizer templates for bug and feature request.", "Roll forward [] (Soy: add legacyObjectMapToMap() and mapToLegacyObjectMap() conversion plugins) with fix.", "Roll forward [] (Soy: add legacyObjectMapToMap() and mapToLegacyObjectMap() conversion plugins) with fix.", "Fix the soy type for map.", "Typo detection for undefined template errors.", "[] docs: fix a missing {{#internal}}.", "fix //third_party/java_src/soy/opensource:precompiled_js_bundle_sanity_check_test.", "Fix the name: my last CL accidentally dropped the Type\" suffix during the renaming.\"", "Have JsSrc backend throw an error if logonly is true and there is no metadata setup.", "Fix parameter comments that don't match the formal parameter name", "Add a few tests for runtime errors.", "Change codegen for the null coalescing operator to fix a long standing TODO now that codechunks are fully implemented.", "Fix documentation after disallowing autoescape=strict\".\"", "fix a link", "Improve error messages for explicitly set default attributes.", "Have Idom backend throw an error if logonly is true.", "Fix a bug in closeable streaming directives where separate appendable instances would be created for the append calls and the close call. This resulted in the close call not having access to any state set in the append calls.", "Fix the order of arguments to assertEquals, they are backwards which makes for weird failure messages", "Fix a bug where jbcsrc would apply print directives in the opposite order if there were multiple streaming directives.", "Fix the tree copying routines so they can be performed with a single AST traversal.", "fix a typo, lint was whining at me about this", "Rollforward [] which was rolled back in [] because it introduce a bug where the soy compiler failed to double escape something when we clearly should have.", "Clean up the error message reported when there is a plugin module configured that doesn't exist.", "Rollforward [] which was rolled back in []  There were two issues in the initial submission.  escapeJsValue wasn't modified to support null and we were passing blessStringAsTrustedUrl an incorrect type.  These are both being addressed in the rollforward with new test coverage.", "Fix parameter comments that don't match the formal parameter name", "Provide a more detailed error message via ErrorReporter for placeholder name collisions.", "Fix a bug in StrictHtmlValidationPass that reports misleading errors.", "Soy: fix NPE when passing multiple expressions in {call data=...\"}.\"", "Fix a NPE in Velog validation, this happens when there is an unmatched end tag.", "Provide a more detailed error message via ErrorReporter for placeholder name collisions.", "Fix a source location error in CspNonceInjection.", "fix a busted moe comment", "Fix the BanInlineEventHandlers to target the correct node instead of doing a second level traversal.", "Fix the BannedCssSelector conformance rule.  It was never updated to handle the new css syntax", "Fix various bugs in PySrc runtime.", "Rollforward [] which was rolled back in [] because it caused message variable declarations to get detached from their jsdoc in cases where a placeholder required a temporary variable.  This has been fixed in []", "Fix references to the legacy css and xid commands in g3doc.", "Fix the double evaluation problem in the nullsafeaccumulator now that we can generate non-expressions in jssrc", "Reenable worker support for Soy.  I am no longer able to reproduce the failures so let's try this again (maybe it was fixed in the blaze release?)", "Fix a proto init bug in jbcsrc", "Rollforward [] which was rolled back in [] because it created duplicate dep errors in some af_soy_options rules.  These duplicates were independently addressed in []", "Fix a bug in proto init for jbcsrc.", "Fix link", "Fix a bug when accessing repeated lists of a safe(html|js|css|...) protos.", "Fix a bug in StrictHtmlValidationPass.", "Change the way we pop optional tags in StrictHtmlValidationPass. This should improve the error message for mismatch optional tags, and also introduce more strict validation for the content model (for example, report an error for <div><li></div> since <li> is not allowed to be closed by </div>).", "Report an error for using the legacy css/xid syntax", "Fix a bug in AddHtmlCommentsForDebugPass that adds edges from text to html.", "Fix a quadratic performance problem in the CombineConsecutiveRawTextNodesVisitor", "Simplify the error reporting classes.", "Report errors if html comments are used in incrementaldom, since the incrementaldom library doesn't support comments.", "Fix a typo.", "Fix some issues around handling null values in jbcsrc.", "Rollforward [] which was rolled back in [] because it caused stack overflow errors in templates which contained long javascript string literals with lots of escape sequences.  From what i can tell the issue was already present, but the previous cl made it slightly easier to trigger by inducing more backtracking in the regular expression evaluation. The fix is to make some of the repetitions 'possesive' which disables backtracking and thus disables recursion.", "report an error if you mix both styles of declaring parameters in a soy template.", "Rollforward changelist 159523963 with fix.", "Rollforward changelist 159273275 with fix.", "Fix a bug in the DesugarHtmlNodesPass where we could change the semantics of an html tag in desugaring.", "Improve the source locations in autoescaper error messages by taking advantage of the new RawTextNode apis for calculating raw text substrings (which preserve source locations).", "Fix a test broken by []", "Fix places in soy where we implement equals without also implementing hashCode().", "Add a regression test for an old bug where the autoescaper failed with no such element exception", "Fix a minor bug in the new autoescaper set up for html rewriting.  After visiting a quoted attribute we need to transition back to the 'tag body' state.", "Rollforward [] which was rolled back in [] because people were writing <script ... /></script>.  All such templates have been fixed.", "Roll forward [] with a fix for self closing tags. The previous implementation would output a synthetic close tag node for self closing tags.  The new implementation relies on the 'isSelfClosing()' bit on HtmlOpenTagNode, but the previous attempt ignored that bit in the code generator.  This is fixed in the rollforward.", "Soy: Format SoyErrors in SoyUtils.java to standard error message formatting", "Fix a bug where if a script/style tag was defined inside of a foreach loop we would inject multiple (3) nonces", "Fixes incorrectly-ordered arguments to calls to assertEquals ([] This change has been automatically generated by an Error Prone check that detects incorrect argument ordering on calls to assertEquals-style methods. See []", "Fixes incorrectly-ordered arguments to calls to assertEquals ([] This change has been automatically generated by an Error Prone check that detects incorrect argument ordering on calls to assertEquals-style methods. See []", "Soy parser: Clean up error messages", "Soy: Bad type substitutions report error instead of crashing", "Soy: Better error message for EOF condition", "Soy: Impose formatting rules on Soy error messages.", "Fix a bug in html identifier validation.  '<' is not allowed", "Soy cleanup: Move ErrorReporterImpl to soy.error", "Fix a bug where we failed to validate the contents of {param nodes inside of {msg tags.", "Fix a bug in the autoescaper.", "Rollforward [] which was rolled back because it surprisingly fixed two bugs that were hiding violations.  The rollforward whitelists these violations.", "Fixes a bug in StrictHtmlValidationPass.", "Instead of assertion, we should report an error if both branches are non-empty.", "Soy parser: Return null for tags with parse errors", "Report an error if users do some problematic comparisons in Soy.", "Report errors from extractMsgs()", "Soy: Comment fix", "Fix a bug in StrictHtmlValidationPass that do not handle multiple control flows correctly when optional tags are presented.", "Soy cleanup: Fix to the case where function exists but is not a jsfunction", "Fix a bug in StrictHtmlValidationPass:", "xliff: Better error when using unsupported plural/select", "[StrictHtmlValidationPass]: Fix several bugs and do some refactoring.", "Fixes a bug in StrictHtmlValidationPass: if openStack is non-empty but only contain optional tags, we reported an error directly without checking.", "Soy parser: Fix outdated comments for ParamDecl() and PrintTag()", "Fix a bug that does not check stack/queue after popping optional tags.", "Fix two bugs in how the AST rewrites work", "Fix a bug where joined whitespace in 'after attribute name' wasn't accounted for properly which would cause errors when print nodes were used as attributes.", "Fix 2 very small bugs", "Fix 3 more small bugs in the html parser", "Fix a bug where we would throw an IllegalStateExeception when trying to parse attribute values improperly split across conditional blocks.", "Fix a few small bugs in the html parser discovered while trying to roll it out", "Soy JS codegen: fix latent (unreported) goog.require bug.", "Fix a bug where we failed to handle unknown types in proto init expressions prop[erly in the jbcsrc backend", "Fix a bug where errors reported on soydoc params would try to use a null sourcelocation", "Fix https://github.com/google/closure-templates/issues/128", "Make it an error to use the v1Expression function without explicitly adding deprecatedV1=true\" to the template.\"", "Make all Soy v1 expressions a hard error. V1 expressions that can't be parsed (such as JavaScript expressions) must be wrapped in a v1Expression() function call and only in templates marked with deprecatedV1=true\" and allowv1syntax = 1 in the BUILD rule.\"", "Fix bidiDirAttr to consistently require the bidi namespace.", "Fix fall through\" comments in switches\"", "Remove SoyJsSrcOptions from the IncrementalDomSrc apis.  It is error prone.", "Fix the JsSrcSubject to be a little more reasonable.", "Rollforward []  which was rolled back in []  because it revealed a preexisting breakage in a project which was trying to enforce a particular namesapce structure.  The original cl caused additional files to be analyzed which violated the structure.  The errant project has been fixed.", "Fix some bugs in how we generate goog.requires for our jsdoc.", "Make it an error to use Soy v1 syntax: &&, ||, and double quotes", "Fix 2 missingRequire bugs", "soyutils: Fix invalid comparison of char (string) with numbers", "Soy: {call}s with duplicate {param}s fail with proper errors", "Fix maven warning on ${version} in POM.", "Generate a goog.require for proto enums when used in Soy templates. Since proto enums are referenced in types in the generated JS files, a user can run into a forward declared error in templates without this, such as:", "Object shouldn't be tested for equality with itself. This was identified using Error Prone check ([] We intend to make this a compilation error in []'s Java compiler, so it is necessary to fix existing occurrences first to avoid breaking builds.", "Soy: CheckEscapingSanityVisitor: use the error reporter.", "Soy compiler generates an error if a non-list is passed into length()", "Fix tests that will break with the errorprone SelfEquals check to use EqualsTester", "Soy compiler generates an error if a non-list is passed into length()", "soy: fix `mvn test` after a `mvn install`", "Fixed b/23290608, where innocuous outputs were encoded inconsistently as either #zSoyz\" or \"about:invalid#zSoyz\". Changed \"#zSoyz#\" to \"about:invalid#zSoyz\" to prevent the value from resolving to a document. See [] for further rationale.\"", "Fix an unboxing operation in jbcsrc that dropped type information for sanitized content strings.", "MOE change to bring github upt-to-date with 124576004.  Includes a lot of work on the DOM and Java byte-code backends, integration of pull requests, exposes Safe HTML type integration, and miscellaneous bug fixes.", "Report expression parsing errors for v2 expressions", "Throw detailed MSS exceptions on Soy compiler errors. This makes MSS pageloads report Soy errors with the same list & formatting as JS errors. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110720959", "Fix an IllegalStateException thrown from the ForNode constructor when the command text could not be parsed ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110709538", "Fixed typo in link. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110506322", "Rollforward [] which was rolled back in [] because it started reporting errors from extractMsgs() and pruneTranslatedMsgs() when previously they had all been ignored.  This is 'fixed' by continuing to not report errors from those methods, though this should be eventually resolved.", "Don't strip whitespace when generating Incremental DOM text calls. The original bug was due to a misunderstanding on my part on whitespace collapsing. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110430590", "Introduce SoyError and SoyCompilationException for reporting structured error data.", "Fix parsing error for when template tags are split across multiple lines", "Fix a bad error message when parsing an unrecognized html tag.  The error message is still bad, but at least now we aren't crashing.", "Improve the error message for when deltemplates aren't fully qualified. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110180842", "Rename SoyError to SoyErrorKind in preparation for introducing a new SoyError type for public error reporting.", "Fix error reporting for bad foreach type", "Fix a bug where blessStringAsTrustedResourceUrlForLegacy would disable all escaping.", "Add information for deltemplates to @TemplateMetadata and add a generic library for writing an Annotation to ClassWriter, doing it by hand has turned out to be quite error prone. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106982070", "Fix js expression logic to properly wrap expressions with parens.", "Fix content kind not being restored after visiting a let/param node, causing subsequent code generation to be incorrect.", "Fix filepath to SimpleUsageForGoogle.java in soy_gettingstarted.md ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104962649", "Rollforward [] which was rolled back in [] because it broke [] due to a mismatched type issue. Added a fix and a test.", "Soy jbcsrc: Fix a few bugs related to unboxing conversions.", "Adding check to report errors for Incremental DOM code gen if a V1 template is found. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=102790544", "Roll forward [] with fix for Tofu function adaptation.", "Fix more incorrect float coercions in line with []", "Fix a bug in jbcsrc where math on 'number' values would eagerly coerce to float when in fact it should remain ambiguous.  This triggered an issue when these float values were passed to the range() operator which only accepts ints.", "Fix a few small bugs in jbcsrc 1. Handle {switch}s with no children or with just a single {default} child. 2. Add support for proto3 messsage, the key difference is that 'has' methods don't exist for non-message fields in proto3. 3. handle min/max for doubles correctly ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=101733643", "Roll-forward 101255365 with fix and test.", "Remove the no soydoc => v1\" inference rule and only allow incorrect soydoc @param tags if the template has the deprecatedV1=\"true\" attribute.\"", "Add more descriptive error messaging to the global error node in Python. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=100627034", "Get some better error messages out of the type parser.", "Fix a bug in js codegen where templates with only optional params would not get the 'ensure data is defined' logic generated even though it would be referenced in a data=all\" expression. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=100577529\"", "Fix some stale docs in SyntaxVersion and delete V2_1!  Which no longer exists! ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=100045050", "Add Did you mean ...?\" error messages to Soy when accessing template parameters and properties on a protocol buffer.\"", "Fix typo in SanitizedContent javadoc ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=99856491", "Make the CSS command error checking stricter by only allowing valid CSS class names in the CSS command, also removing support for deprecated space delimited syntax for specifying multiple classes in one {css } tag. Also remove the version inference that allowed old templates to use invalid CSS commands by making them errors in all templates. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=99848686", "Fixing parent node not being correct after collapsing an open tag. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=98964128", "Fix null safe unboxing operations for reference types.  The issues is that when doing a null-safe unboxing operation we would fail to remove 'null' from the SoyType associated with the expression.  the .asNonNullable() helper method does this by default.", "Potential fix for Soy incompatibility with AppEngine and Java 8.", "Soy Jbcsrc: Fix null handling of proto fields.", "Soy: fix SimpleUsageForGoogle. It's been broken for a while. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=98228179", "Soy jbcsrc: fix a fundamental error in the jbcsrc msg implementation", "Soy jbcsrc: fix a few misc todos in jbcsrc", "Fix the types assigned to soy division and negation.", "Fix a bug in SoySauce where strict rendering would fail if it needed to detach. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97589157", "Soy jbcsrc: fix code generation for non-trivial for loops", "Add more information to the error message about puting {msg}s in a disallowed context.", "Soy jbcsrc: accumulate unexpected compilation errors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96406641", "Fix {switch}'ing on santized content objects.", "Soy jbcsrc: fix the soytype associated with function return types ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96317987", "Fix a bug in VarRefNode.clone(), the substitute type was not getting copied over. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96164418", "Fix clone for LocalVar.", "Rollforward [] with a fix for the remaining callers of SoyTemplateInfo constructors, for some reason these callsites weren't indexed in [].", "Fix call-site escaping in html nospace context.", "Report unexpected compiler errors along with soy source locations to aid in debugging jbcsrc bugs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95768379", "Fix low hanging warnings in soy ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95751323", "Fix the final 2 integration tests in jbcsrc by ensuring that kind=text\" blocks are represented at runtime by SanitizedContent objects.\"", "Fix source location filenames for exprnodes ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95541568", "Fix the soy type checker for arithmetic operations.", "Use ErrorReporter to aggregate errors during contextual autoescaping.", "Soy jbcsrc: fix 2 small type conversion bugs 1. call SoyValue.numberValue() instead of floatValue() when converting boxed soy values to floats 2. call SoyValue.floatValue() instead of SoyValue.longValue() when unboxing floats. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94928699", "Soy jbcsrc: Fix an NPE in a failing integration test", "Add @suppress {extraRequire} for goog.require()s that may not be used, in generated JS code. This allows projects to turn on extraRequire as an error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94131954", "Soy: clear the error reporter between Tofu compilations. Add test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93947030", "Soy: fix CSP nonce injection into inline event handlers and style attributes.", "Rollforward [] which was rolled back in []  The additional cases in which the new flow analysis runs triggered a latent bug in how negative contraints are calculated.  Also, this is being rolled forward without the change to computeConstraintUnion which appears to have introduced a bug assigning a type to a dead expression.", "Soy: convert CheckDelegatesVisitor to use error reporter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91991277", "Soy conformance: use standard error reporting infrastructure.", "Stop using GeneratorAdapter directly and instead use a custom object for method writing that delegates to GeneratorAdapter for a safe subset of methods. The issue is that GeneratorAdapter subclasses LocalVariableSorter which renumbers local variables.  We don't need or want this feature.  So far it has been fine, but the weirdness shows up in error messages.  Since our error messages are generally printing chunks of bytecode (e.g. a single expression not an entire methods), it means that the local variable indices that show up do not at all correspond to the ones that we have assigned. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91426478", "Fix a bug that only occurs when there are multiple local variables that need detach logic in a single expression.", "Soy: move all error-handling stuff to new error package.", "Make the exploding error reporter explodes with a useful error message ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90537763", "Soy: fix soy_js and af_soy_library. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90443585", "Soy: thread error reporter through AST visitors.", "Fix soon-to-be compile error (after @CRV is added to FluentIterable). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89370571", "Fix Soy message escaping.", "Rollforward 87563748 which was rolled back in 87616866 becaue it revealed a bug in the soy tofu proto implementation (fixed in []", "Soy: make errors more strongly typed.", "fix #19461361 Use LinkedHashMap to make keySet() and entrySet() determinstic in Java7 / Java8 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87174864", "Soy: Initial support for pretty printing errors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86697663", "Fix ExprNode classes that don't copy type when cloned.", "Soy: Parsing should return errors, not throw them.", "Fix object to String handling in type_safe_add and ensure the tests are using Python 3 style unicode string. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83872912", "Fixed the _find_modules at python runtime when there is compiled python file (*.pyc) on the sys.path.", "Fix Soy unspecified iteration order issues.", "Fix GenerateSoyUtilsEscapingDirectiveCode task reference (again). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77271454", "Fix typo in [] link. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77124519", "Fix setting of uLocale keyword.", "Fix a bug in the Soy calling types checker: When a template is called with data=all\"", "Fix ant taskdef reference.", "Fix BUILD file to use the correct proto_library proxy pattern for alternate api_versions as documented in []", "Fix long-line lint errors introduced by [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70799670", "Soy error reporting: remove VisibilityException and use SoySyntaxException instead.", "Fix error in moe_config.json", "Replace StringBuilder with Appendable, where appropriate. Include the line number in MaybeWhitespace parse error message. Use Guava 10.0.1 instead of Guava 9.", "Fix soyutils.js so it can be compiled cleanly with strict settings in the Closure Compiler.", "Fix soyutils.js so that it compiles with strict settings in the Closure Compiler. Fixes for explicit Guice binding support in Soy.", "Make it possible to get the original parse error message without the stuff added by toString(). This is helpful for external tools to display error messages in a more structured format.", "Fixed bug: soydata.js does not work without closure.  Combined soydata.js into soyutils.js and soyutils_usegoog.js so only one JS file is required. http://code.google.com/p/closure-templates/issues/detail?id=47", "Improved java performance significantly, fixed bugs in main methods, added optional contextual autoescaping to prevent XSS, added map and list expression literals, keys() function for dealing with maps, and a host of other improvements and bugfixes.", "Fix Ant build rules for bundling jars (forgot new dep).", "Fixed issue 21 (duplicate LICENSE and NOTICE files in Soy jar.)", "Fix line numbers in Closure Templates compiler error messages so that they're with respect to the Soy file instead of with respect to the template.", "20100422 update of Closure Templates. + Remove dependencies on non-open-source code (Issues 12, 14). + Fix some JSDoc errors, including indicating that template functions have optional params (Issue 10). + Fix parse-info generation for templates with no parameters (Issue 13), plus improvements in generated Java file. + Switch to old @AssistedInject annotation for better performance (will keep using old annotation until new annotation is fixed). + Some new message features, including a null object for SoyMsgBundle. + Better error messages in some cases (Issue 6). + Correctly handle JS reserved words used as template data keys.", "Small update. Includes fix of {INPUT_FILE_NAME} for Windows."], "metric": [["1", "2", "15", "4", "2", "2", "49", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "1", "0", "0", "1", "0", "0", "2"], ["2", "3", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "12", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "43", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "0", "5"], ["2", "3", "16", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "4", "33", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "3"], ["1", "2", "11", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["2", "2", "3", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "1"], ["2", "2", "9", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "28", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "2"], ["1", "6", "45", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3"], ["5", "9", "25", "7", "1", "1", "52", "0", "1", "1", "2", "0", "0", "0", "1", "2", "0", "0", "0", "0", "5", "0", "0", "7"], ["3", "4", "17", "4", "1", "1", "30", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "1", "1", "1", "2", "1", "1", "1", "34", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "7", "30", "19", "0", "0", "0", "0", "1", "5", "3", "18", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5"], ["3", "6", "9", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "16", "22", "40", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "1", "7"], ["1", "1", "4", "1", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "20", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "14", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "30", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "13", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "263", "0", "0", "0", "0", "0", "1", "1", "34", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "39", "0", "-5"], ["1", "2", "14", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "3", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "15", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "11", "16", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "12", "64", "36", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "7"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "11", "3", "0", "0", "0", "0", "1", "1", "17", "16", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "9", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "10", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "13", "67", "63", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "13", "6", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "3"], ["13", "43", "252", "54", "0", "0", "0", "0", "1", "1", "19", "24", "0", "0", "0", "0", "0", "0", "1", "0", "12", "14", "0", "17"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "14", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "2", "2", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "4", "12", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "20", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "25", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "7", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "19", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["5", "6", "5", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "5"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "11", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["5", "10", "51", "5", "2", "6", "16", "4", "2", "2", "2", "0", "0", "0", "2", "0", "0", "4", "0", "0", "5", "5", "0", "5"], ["6", "14", "71", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "5", "0", "2"], ["1", "2", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "8", "27", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "7", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "22", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "1"], ["1", "3", "17", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "118", "123", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "7", "24", "33", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "32", "17", "2", "3", "34", "3", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "1", "1", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "7", "20", "3", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["1", "14", "165", "38", "1", "7", "107", "17", "1", "2", "2", "0", "0", "0", "1", "4", "1", "7", "0", "0", "1", "6", "0", "9"], ["8", "19", "72", "30", "3", "5", "9", "9", "1", "1", "1", "0", "0", "0", "3", "0", "0", "5", "0", "0", "8", "7", "1", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "12", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "10", "22", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "2"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "9", "60", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "3", "0", "4"], ["2", "3", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "4", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "12", "6", "1", "2", "42", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "14", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["4", "11", "65", "23", "1", "4", "3", "94", "1", "1", "0", "4", "0", "0", "1", "0", "1", "1", "0", "0", "4", "4", "1", "4"], ["1", "2", "3", "3", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "9", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["4", "5", "24", "2", "1", "2", "6", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "4", "1", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["2", "8", "21", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "8", "29", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "7"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "5", "18", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "3", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "0", "18", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "16", "149", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "4", "5", "1", "8"], ["1", "1", "1", "1", "1", "3", "28", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["16", "57", "145", "187", "2", "5", "15", "4", "0", "0", "0", "0", "0", "0", "2", "3", "1", "0", "0", "0", "16", "17", "12", "16"], ["1", "1", "1", "1", "1", "1", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "2", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "12", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "7", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "10", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "8", "8", "7", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3"], ["1", "3", "2", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "31", "33", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "7", "45", "33", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "4"], ["6", "14", "26", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "5"], ["2", "3", "37", "2", "1", "1", "12", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "3", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "4", "19", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2"], ["19", "86", "78", "171", "1", "2", "1", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "1", "18", "1", "7", "39"], ["2", "3", "9", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "5", "16", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "1", "0", "3"], ["1", "2", "2", "1", "0", "0", "0", "0", "2", "2", "16", "16", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "2", "3", "5", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["6", "14", "51", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "2", "1", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "263", "282", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "11", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "22", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "7", "10", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["1", "4", "13", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "19", "47", "17", "1", "12", "35", "2", "1", "1", "1", "0", "0", "0", "1", "2", "0", "8", "0", "0", "5", "3", "3", "7"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "2", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "7", "99", "138", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "17", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["1", "2", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "3", "11", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3"], ["2", "6", "10", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "7", "47", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "9", "36", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "4"], ["2", "13", "27", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "3"], ["2", "5", "46", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "5", "0", "3"], ["2", "7", "120", "99", "0", "0", "0", "0", "1", "15", "18", "19", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "1", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "13", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "0", "1", "2", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "1", "0", "0"], ["4", "4", "55", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "2", "0", "3"], ["2", "3", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "18", "8", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["6", "12", "29", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "3", "0", "2"], ["1", "2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "0", "1", "1", "1", "0", "2", "3", "13", "11", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "12", "0", "0", "0", "0", "2", "2", "0", "8", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "7", "49", "13", "2", "2", "0", "4", "0", "0", "1", "3", "0", "7", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "6", "21", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "2", "2", "2"], ["4", "10", "33", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3"], ["3", "5", "18", "2", "2", "4", "36", "17", "1", "3", "12", "3", "0", "0", "2", "1", "0", "1", "0", "0", "3", "1", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "5", "1", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "17", "53", "60", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "14", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "10", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "7", "7", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["8", "29", "140", "54", "2", "3", "43", "25", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "8", "3", "0", "24"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "92", "40", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "7", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "83", "74", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2", "2", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "23", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "19", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "8", "8", "28", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "5", "0", "0", "4"], ["5", "11", "17", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "3", "0", "6"], ["1", "3", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "5", "1", "0", "0", "0", "0", "1", "2", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "14", "60", "10", "0", "0", "0", "0", "2", "12", "19", "15", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "0", "4"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "1", "15", "46", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "12", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "37", "0", "1", "2", "119", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "3", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "3", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "13", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["2", "2", "38", "2", "1", "3", "53", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "2", "1", "0", "2"], ["3", "3", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "3", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "3", "35", "0", "0", "0", "0", "0", "1", "2", "14", "2", "0", "0", "0", "0", "0", "0", "0", "0", "3", "7", "0", "-2"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "9", "10", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "16", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "0", "4", "0", "0", "0", "0", "1", "10", "7", "84", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "3", "2", "10", "2", "4", "4", "4", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "0", "0", "3"], ["1", "3", "54", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1"], ["1", "3", "13", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "3", "14", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["8", "10", "0", "88", "3", "4", "1", "6", "0", "0", "0", "0", "0", "0", "3", "0", "0", "4", "0", "1", "7", "0", "3", "8"], ["1", "7", "21", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["8", "16", "36", "24", "3", "3", "4", "4", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "8", "2", "0", "17"], ["0", "0", "0", "0", "1", "1", "3", "1", "1", "1", "12", "12", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "3", "2", "0", "0", "0", "0", "2", "2", "0", "87", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "8", "4", "1", "2", "36", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "5", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["9", "14", "93", "4", "2", "5", "14", "5", "1", "1", "1", "1", "0", "0", "2", "0", "0", "4", "1", "0", "8", "3", "0", "11"], ["1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "4", "0", "0", "0", "0", "16", "28", "15", "14", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "5", "0", "1", "1", "48", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "22", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "1", "1", "4", "47", "1", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "3", "1", "1", "0", "0", "0", "0", "1", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "10", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "19", "19", "1500", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "15", "14", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "3", "1", "5", "7", "1", "1", "1", "9", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "5", "63", "4", "1", "3", "7", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "3", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "10", "104", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["1", "3", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "17", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "7", "5", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "7", "8", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "2", "6"], ["1", "6", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "18", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "11", "35", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "7"], ["2", "6", "28", "0", "0", "0", "0", "0", "1", "1", "1", "17", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "6", "0", "0", "0", "0", "3", "4", "15", "12", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "14", "155", "113", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "4", "0", "12"], ["2", "6", "20", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["8", "15", "44", "15", "0", "0", "0", "0", "2", "3", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "8", "5", "0", "10"], ["3", "4", "0", "0", "0", "0", "0", "0", "4", "7", "20", "15", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "9", "43", "23", "1", "1", "0", "36", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "1", "1", "1", "7"], ["2", "10", "28", "14", "0", "0", "0", "0", "1", "2", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "7"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "1", "1", "3", "2", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "4", "33", "19", "1", "3", "52", "1", "3", "3", "3", "3", "0", "0", "1", "4", "0", "1", "0", "0", "1", "1", "0", "2"], ["1", "2", "2", "3", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["2", "6", "9", "9", "3", "13", "51", "48", "6", "20", "3999", "1017", "0", "0", "3", "0", "0", "9", "0", "0", "2", "0", "0", "5"], ["4", "11", "76", "82", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "3", "4", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "12", "51", "54", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "8", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "13", "31", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "1", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "6", "15", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "5", "34", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "19", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "14", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "11", "5", "1", "3", "61", "8", "0", "0", "0", "0", "0", "0", "1", "2", "0", "3", "0", "0", "1", "0", "0", "2"], ["2", "2", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "1", "3", "0", "25", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "0", "0", "1", "0", "0", "1"], ["2", "5", "39", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "2"], ["8", "20", "81", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "9", "0", "11"], ["2", "11", "220", "68", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "1", "6"], ["2", "5", "10", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "2", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "8", "32", "52", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "12", "33", "59", "74", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "5", "42", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "4"], ["9", "12", "0", "0", "3", "3", "1", "1", "3", "8", "65", "13", "0", "0", "3", "0", "0", "2", "0", "0", "9", "0", "0", "5"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "11", "2", "0", "0", "0", "0", "2", "2", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "6", "1", "3", "4", "20", "13", "1", "1", "1", "0", "0", "0", "3", "0", "0", "3", "0", "0", "1", "0", "0", "2"], ["4", "8", "15", "11", "4", "19", "53", "38", "6", "47", "24", "2", "0", "0", "4", "0", "0", "11", "0", "0", "4", "0", "0", "4"], ["0", "0", "0", "0", "1", "4", "15", "9", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "0", "0", "0", "0"], ["2", "3", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "1", "12", "2", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["1", "2", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "10", "95", "33", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "3", "0", "4"], ["1", "1", "3", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "49", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "10", "66", "31", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "14"], ["2", "10", "32", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "5", "22", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["3", "5", "84", "33", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "7", "2", "5"], ["2", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["1", "1", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "14", "1", "1", "1", "30", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "42", "245", "108", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "6", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "8", "70", "120", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "4", "3"], ["1", "2", "11", "7", "0", "0", "0", "0", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "3", "9", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1"], ["2", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["2", "2", "38", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "3", "0", "1"], ["2", "3", "68", "0", "0", "0", "0", "0", "2", "2", "6", "2", "0", "0", "0", "0", "0", "0", "1", "0", "1", "4", "0", "1"], ["4", "5", "36", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "1", "0", "0", "0", "0", "3", "7", "32", "26", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["15", "50", "137", "184", "4", "13", "36", "14", "1", "2", "0", "16", "0", "0", "4", "4", "1", "6", "0", "1", "14", "4", "8", "16"], ["1", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "20", "85", "35", "1", "5", "53", "6", "2", "24", "100", "0", "0", "0", "1", "5", "1", "4", "0", "0", "2", "4", "0", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "2", "4", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "2", "2", "1", "1", "0", "14", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["6", "17", "141", "21", "3", "5", "12", "7", "0", "0", "0", "0", "0", "0", "3", "0", "0", "6", "1", "0", "5", "6", "1", "5"], ["7", "22", "85", "49", "6", "16", "33", "10", "0", "0", "0", "0", "0", "0", "6", "0", "0", "8", "0", "0", "7", "3", "1", "14"], ["4", "9", "165", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "15", "0", "3"], ["2", "7", "6", "27", "1", "6", "20", "20", "1", "4", "8", "6", "0", "0", "1", "0", "0", "2", "0", "0", "2", "0", "2", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "11", "49", "10", "1", "2", "0", "22", "0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "4", "2", "0", "4"], ["2", "4", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "0"], ["4", "8", "8", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "8"], ["14", "52", "222", "42", "9", "19", "55", "290", "0", "0", "0", "0", "0", "2", "7", "0", "27", "12", "0", "0", "14", "5", "0", "29"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["15", "50", "373", "243", "10", "24", "85", "44", "0", "0", "0", "0", "0", "0", "10", "3", "0", "13", "1", "1", "13", "17", "14", "27"], ["1", "4", "17", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "17", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "9", "83", "4", "6", "17", "282", "7", "0", "0", "0", "0", "2", "0", "4", "30", "3", "-3", "0", "0", "3", "6", "0", "5"], ["1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["11", "17", "15", "21", "5", "15", "22", "25", "0", "0", "0", "0", "0", "0", "5", "0", "0", "12", "0", "0", "11", "0", "0", "16"], ["3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "4", "59", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "5", "9", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "1", "2", "15", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["11", "23", "34", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "11", "9", "9", "12"], ["4", "4", "23", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["3", "8", "34", "2", "0", "0", "0", "0", "3", "3", "111", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "0", "1"], ["1", "3", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "4", "20", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["6", "12", "39", "12", "2", "5", "26", "6", "0", "0", "0", "0", "0", "0", "2", "2", "0", "3", "0", "0", "6", "2", "0", "6"], ["4", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "1"], ["1", "3", "8", "3", "0", "0", "0", "0", "3", "37", "171", "143", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "1", "19", "2", "4", "0", "4", "2", "2", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "2", "0", "2", "1"], ["2", "3", "17", "12", "1", "4", "9", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "72", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "5", "1", "2", "3", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["3", "10", "34", "6", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "1", "0", "6"], ["1", "4", "4", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "2", "2", "4", "10", "9", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "4", "0", "0", "0", "0", "2", "6", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["15", "24", "45", "57", "1", "5", "230", "185", "0", "0", "0", "0", "0", "0", "1", "10", "0", "15", "0", "1", "14", "17", "12", "-3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "69", "68", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["8", "36", "356", "357", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "5", "45", "23", "13"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "44", "0", "1", "6", "12", "12", "1", "2", "1", "11", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "2", "2", "1", "1", "1", "1", "1", "3", "18", "11", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["3", "7", "14", "8", "1", "1", "0", "1", "1", "10", "59", "17", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "6"], ["9", "18", "158", "40", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "8", "5", "0", "13"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "16", "31", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "2", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "46", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "18", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "8", "89", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "4", "1", "2"], ["6", "8", "35", "33", "0", "0", "0", "0", "1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "6", "3", "4", "2"], ["1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "18", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["3", "8", "31", "4", "3", "11", "13", "33", "0", "0", "0", "0", "0", "0", "3", "0", "2", "6", "0", "0", "3", "2", "0", "1"], ["1", "3", "14", "4", "1", "1", "2", "19", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1", "0", "0", "1", "0", "0", "2"], ["3", "8", "49", "42", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "1", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "9", "191", "2", "4", "4", "136", "2", "3", "6", "12714", "8", "2", "0", "2", "8", "0", "2", "2", "0", "3", "18", "0", "3"], ["5", "9", "191", "2", "4", "4", "136", "2", "3", "6", "12714", "8", "2", "0", "2", "8", "0", "2", "2", "0", "3", "18", "0", "3"], ["1", "3", "11", "3", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "10", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "13", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["11", "27", "40", "45", "5", "19", "31", "31", "0", "0", "0", "0", "0", "0", "5", "0", "0", "12", "0", "0", "11", "9", "0", "15"], ["3", "11", "17", "82", "2", "13", "34", "91", "0", "0", "0", "0", "0", "0", "2", "0", "0", "9", "0", "0", "3", "0", "2", "5"], ["1", "1", "0", "0", "2", "2", "3", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "2", "4", "3", "1", "1", "2", "2", "3", "3", "9", "7", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["4", "5", "15", "8", "2", "3", "42", "24", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "4", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "6", "19", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["3", "5", "24", "2", "2", "4", "4", "4", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "3", "1", "0", "2"], ["3", "7", "68", "18", "1", "1", "24", "2", "1", "2", "12", "1552", "0", "0", "1", "3", "0", "-1", "0", "0", "3", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "3", "2", "1", "8", "40", "9", "0", "0", "0", "0", "0", "0", "1", "2", "1", "5", "0", "0", "1", "0", "0", "2"], ["8", "18", "92", "64", "3", "8", "8", "5", "0", "0", "0", "0", "0", "0", "3", "0", "0", "5", "0", "0", "8", "3", "3", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["14", "40", "189", "105", "1", "9", "38", "20", "0", "0", "0", "0", "0", "0", "1", "23", "0", "-14", "1", "0", "13", "11", "6", "16"], ["3", "6", "24", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "1", "3"], ["11", "60", "341", "116", "1", "1", "31", "0", "3", "3", "3", "3", "1", "0", "0", "1", "0", "0", "1", "0", "10", "15", "0", "25"], ["2", "3", "5", "3", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "2", "0", "0", "2"], ["4", "7", "14", "5", "1", "3", "6", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "4", "0", "0", "3"], ["2", "9", "27", "4", "0", "0", "0", "0", "1", "3", "8", "3", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "10", "25", "9", "1", "3", "35", "29", "1", "1", "1", "1", "0", "0", "1", "0", "0", "2", "0", "0", "5", "1", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "9", "14", "0", "0", "0", "0", "1", "1", "3", "4", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "12", "5", "1", "7", "60", "33", "1", "42", "50", "47", "0", "0", "1", "1", "1", "3", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "5", "12", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "10", "41", "40", "5", "9", "65", "96", "1", "1", "1", "1", "0", "0", "5", "0", "3", "7", "0", "0", "4", "2", "1", "7"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "7", "28", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "11", "45", "39", "5", "9", "65", "96", "0", "0", "0", "0", "0", "0", "5", "0", "3", "7", "0", "0", "4", "2", "1", "8"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "14", "37", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "2", "0", "5"], ["5", "18", "37", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "8"], ["5", "18", "37", "20", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "8"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "10", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "20", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "2", "24", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["3", "12", "68", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "1", "7"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "3", "0", "1", "1", "27", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["8", "17", "157", "93", "3", "8", "38", "7", "1", "1", "1", "1", "0", "0", "3", "3", "0", "4", "1", "1", "6", "4", "3", "6"], ["10", "19", "108", "222", "24", "88", "261", "225", "0", "0", "0", "0", "0", "0", "24", "0", "0", "60", "0", "4", "6", "10", "17", "8"], ["2", "7", "21", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["8", "24", "148", "69", "2", "4", "61", "1", "2", "2", "2", "2", "0", "0", "2", "6", "0", "1", "0", "0", "8", "32", "0", "-18"], ["6", "51", "58", "638", "2", "17", "304", "317", "0", "0", "0", "0", "1", "0", "1", "13", "10", "10", "0", "2", "4", "1", "32", "16"], ["1", "3", "19", "4", "1", "2", "19", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "3", "14", "3", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "1"], ["1", "3", "14", "3", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "1"], ["1", "7", "43", "24", "2", "2", "13", "0", "1", "2", "3", "1", "0", "0", "2", "1", "0", "1", "0", "0", "1", "2", "0", "6"], ["2", "14", "46", "21", "0", "0", "0", "0", "1", "3", "2", "17", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "5"], ["0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["6", "6", "28", "6", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "6", "5", "0", "3"], ["2", "2", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "0", "1", "2", "12", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "22", "65", "27", "4", "6", "22", "11", "0", "0", "0", "0", "0", "0", "4", "2", "0", "3", "0", "0", "2", "2", "0", "15"], ["19", "46", "363", "1005", "5", "11", "12", "419", "1", "1", "0", "127", "0", "1", "4", "1", "29", "5", "1", "8", "10", "31", "88", "8"], ["1", "4", "10", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "36", "169", "2", "3", "23", "259", "1", "2", "5", "1", "0", "1", "1", "1", "13", "1", "0", "0", "3", "1", "9", "8"], ["0", "0", "0", "0", "1", "2", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "6", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "0", "0", "0", "0"], ["2", "4", "17", "20", "1", "1", "3", "3", "1", "2", "1", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "4", "9", "7", "1", "1", "13", "0", "1", "1", "1", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "3", "0", "0", "0", "0", "0", "1", "6", "11", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["29", "61", "185", "121", "10", "19", "29", "29", "2", "6", "17", "7", "0", "0", "10", "0", "0", "15", "0", "0", "29", "0", "0", "9"], ["1", "6", "22", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["5", "7", "16", "9", "2", "5", "5", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "5", "2", "0", "2"], ["1", "3", "56", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "9", "0", "1"], ["1", "2", "8", "9", "3", "3", "27", "2", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["6", "20", "41", "61", "1", "4", "11", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "2", "4", "1", "1", "9"], ["2", "2", "19", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "5", "20", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["3", "8", "5", "11", "0", "0", "0", "0", "1", "3", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "2", "3"], ["3", "11", "68", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "0", "5"], ["3", "18", "67", "88", "2", "2", "1", "3", "1", "3", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "3", "0", "9"], ["1", "1", "0", "1", "0", "0", "0", "0", "1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "6", "103", "44", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "4"], ["1", "3", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "15", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "3"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "78", "117", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "3", "4"], ["1", "3", "14", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "10", "13", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "4", "3", "2", "5", "21", "4", "0", "0", "0", "0", "0", "0", "2", "2", "0", "1", "0", "0", "2", "0", "0", "3"], ["1", "3", "7", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "6", "38", "69", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "4"], ["1", "15", "50", "17", "0", "0", "0", "0", "1", "4", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "12"], ["1", "8", "31", "21", "1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "6"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "60", "94", "0", "0", "0", "0", "1", "32", "3658", "3707", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "4"], ["7", "23", "43", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", "1", "2", "10"], ["2", "3", "13", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["2", "5", "27", "18", "3", "4", "30", "5", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "2", "0", "0", "3"], ["5", "13", "20", "103", "3", "3", "2", "8", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "5", "0", "5", "6"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "9", "39", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "3", "0", "5"], ["0", "0", "0", "0", "2", "4", "272", "80", "0", "0", "0", "0", "0", "0", "2", "23", "5", "7", "0", "0", "0", "0", "0", "0"], ["1", "13", "252", "195", "1", "3", "63", "17", "1", "2", "14", "1", "0", "0", "1", "3", "1", "0", "0", "0", "1", "12", "0", "3"], ["1", "13", "252", "195", "1", "3", "63", "17", "0", "0", "0", "0", "0", "0", "1", "3", "1", "0", "0", "0", "1", "12", "0", "3"], ["4", "6", "35", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "2", "0", "2"], ["5", "10", "37", "21", "1", "4", "27", "8", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "5", "2", "0", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "5", "14", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "10", "3", "0", "0", "0", "0", "1", "11", "27", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "35", "24", "1", "2", "0", "74", "1", "2", "2", "1", "0", "0", "1", "0", "3", "0", "0", "0", "2", "0", "0", "8"], ["2", "8", "35", "3", "2", "15", "25", "26", "0", "0", "0", "0", "0", "0", "2", "0", "0", "13", "0", "0", "2", "2", "0", "1"], ["0", "0", "0", "0", "2", "4", "10", "6", "1", "4", "4", "4", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["2", "8", "35", "3", "2", "15", "25", "26", "0", "0", "0", "0", "0", "0", "2", "0", "0", "13", "0", "0", "2", "2", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "6", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "2", "4", "10", "8", "3", "3", "3", "3", "0", "0", "2", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["2", "4", "12", "90", "2", "5", "32", "0", "1", "1", "1", "1", "0", "0", "2", "1", "0", "1", "0", "0", "2", "0", "2", "1"], ["166", "619", "4062", "1883", "46", "166", "1653", "775", "12", "520", "4958", "5445", "5", "2", "39", "66", "11", "74", "19", "7", "140", "283", "97", "249"], ["11", "28", "202", "139", "5", "15", "90", "67", "1", "4", "11", "24", "0", "0", "5", "4", "3", "13", "2", "0", "9", "14", "10", "8"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "4", "1", "3", "3", "12", "5", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["14", "52", "224", "234", "2", "5", "30", "33", "2", "3", "1", "12", "0", "0", "2", "0", "0", "5", "2", "1", "11", "15", "9", "29"], ["1", "6", "9", "16", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "6"], ["14", "52", "226", "234", "2", "5", "30", "33", "1", "2", "0", "11", "0", "0", "2", "0", "0", "5", "2", "1", "11", "15", "9", "29"], ["2", "4", "5", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["64", "131", "437", "384", "3", "10", "13", "13", "4", "8", "29", "29", "0", "0", "3", "3", "3", "1", "0", "0", "64", "5", "0", "9"], ["1", "4", "13", "5", "1", "1", "18", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "0", "2", "1", "1", "33", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "7", "183", "26", "1", "1", "86", "0", "0", "0", "0", "0", "1", "0", "0", "8", "0", "0", "1", "0", "2", "11", "0", "2"], ["3", "3", "11", "7", "0", "0", "0", "0", "1", "4", "15", "17", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2"], ["4", "23", "48", "24", "0", "0", "0", "0", "1", "17", "34", "30", "0", "0", "0", "0", "0", "0", "0", "0", "4", "4", "2", "16"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "20", "45", "2", "7", "51", "4", "1", "2", "15", "26", "0", "0", "2", "2", "0", "1", "0", "0", "2", "0", "0", "3"], ["2", "5", "19", "45", "2", "7", "44", "4", "2", "3", "15", "26", "0", "0", "2", "2", "0", "1", "0", "0", "2", "0", "0", "3"], ["1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["26", "98", "263", "324", "8", "27", "98", "38", "1", "1", "1", "0", "0", "0", "8", "9", "3", "5", "0", "0", "26", "12", "7", "56"], ["2", "3", "7", "6", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3"], ["1", "4", "19", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "4", "10", "3", "2", "3", "17", "1", "0", "0", "0", "0", "0", "0", "2", "3", "0", "1", "0", "0", "2", "0", "0", "3"], ["10", "32", "81", "34", "3", "9", "56", "2", "0", "0", "0", "0", "0", "0", "3", "2", "0", "2", "1", "0", "9", "7", "1", "11"], ["1", "9", "23", "37", "2", "4", "5", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "1", "0", "1", "3"], ["1", "2", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["5", "11", "106", "49", "1", "7", "21", "30", "2", "10", "43", "66", "0", "0", "1", "0", "0", "8", "1", "0", "4", "6", "0", "4"], ["2", "3", "55", "56", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "5", "2"], ["1", "2", "0", "2", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "1", "0", "0", "0"], ["5", "8", "19", "5", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "5", "1", "0", "3"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "7", "9", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "0", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "3", "0", "0", "0", "0", "1", "2", "18", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["11", "29", "244", "82", "6", "8", "67", "3", "1", "1", "0", "0", "0", "0", "6", "4", "0", "2", "0", "0", "11", "4", "0", "16"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "8", "117", "70", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "32", "1", "-25"], ["7", "13", "82", "40", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", "1", "1", "9"], ["3", "5", "18", "4", "2", "5", "11", "7", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "0", "0", "4"], ["1", "1", "1", "1", "1", "2", "81", "0", "1", "1", "6", "0", "0", "0", "1", "8", "0", "-2", "0", "0", "1", "0", "0", "1"], ["1", "8", "39", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2"], ["1", "1", "2", "1", "1", "1", "2", "1", "1", "4", "4", "4", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "30", "5", "0", "0", "0", "0", "2", "4", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "3"], ["1", "2", "1", "2", "1", "1", "10", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "3", "2", "2", "3", "17", "1", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["19", "43", "66", "57", "2", "6", "67", "17", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "19", "2", "4", "20"], ["6", "42", "28", "157", "2", "8", "6", "31", "0", "0", "0", "0", "0", "0", "2", "0", "0", "8", "0", "0", "6", "0", "1", "35"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "6", "74", "6", "1", "1", "1", "1", "1", "2", "6", "4", "0", "0", "1", "0", "0", "1", "1", "0", "3", "6", "0", "1"], ["3", "11", "56", "55", "1", "2", "2", "2", "1", "2", "3", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3", "1", "3", "4"], ["5", "7", "13", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "4", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "19", "46", "44", "3", "7", "44", "28", "0", "0", "0", "0", "0", "0", "3", "1", "0", "6", "0", "0", "4", "4", "3", "11"], ["2", "8", "47", "14", "1", "3", "19", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "2", "1", "0", "1"], ["2", "3", "6", "2", "2", "5", "21", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2", "0", "0", "2", "0", "0", "1"], ["6", "9", "38", "32", "2", "2", "10", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1", "0", "0", "6", "1", "0", "5"], ["1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "16", "2", "1", "10", "13", "11", "0", "0", "0", "0", "0", "0", "1", "0", "0", "9", "0", "0", "1", "0", "0", "2"], ["4", "33", "272", "73", "2", "6", "143", "6", "0", "0", "0", "0", "1", "0", "1", "9", "0", "2", "1", "0", "3", "26", "2", "26"], ["1", "8", "40", "43", "1", "15", "13", "44", "0", "0", "0", "0", "0", "0", "1", "0", "0", "14", "0", "0", "1", "0", "0", "3"], ["2", "3", "4", "11", "2", "5", "44", "31", "1", "2", "4", "2", "1", "0", "1", "5", "4", "1", "0", "0", "2", "0", "0", "1"], ["17", "88", "300", "105", "4", "9", "7", "11", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3", "1", "0", "16", "46", "0", "48"], ["1", "3", "8", "10", "1", "2", "15", "0", "1", "1", "3", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["110", "150", "172", "191", "58", "63", "101", "150", "3", "4", "8", "5", "0", "1", "57", "0", "1", "0", "0", "0", "110", "0", "0", "1"], ["2", "2", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "5", "13", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["76", "285", "765", "318", "43", "176", "482", "251", "2", "5", "5", "14", "0", "0", "43", "3", "2", "97", "0", "0", "76", "34", "0", "121"], ["1", "2", "11", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "1"], ["12", "32", "156", "22", "0", "0", "0", "0", "2", "2", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "12", "10", "0", "9"], ["66", "132", "193", "247", "5", "8", "128", "21", "1", "1", "2", "2", "1", "0", "4", "11", "0", "8", "0", "1", "65", "0", "18", "77"], ["20", "61", "187", "128", "0", "0", "0", "0", "2", "14", "59", "34", "0", "0", "0", "0", "0", "0", "1", "0", "19", "3", "0", "19"], ["4", "17", "28", "27", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "4", "0", "0", "7"], ["7", "16", "98", "21", "3", "7", "83", "5", "2", "2", "2", "2", "1", "0", "2", "1", "0", "3", "1", "0", "6", "4", "0", "6"], ["4", "7", "17", "7", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "4", "1", "0", "6"], ["10", "35", "305", "74", "53", "197", "442", "308", "3", "36", "215", "91", "1", "0", "52", "3", "0", "156", "6", "0", "4", "16", "0", "12"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "12", "3327", "3231", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "7", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "7", "8", "1", "9", "19", "12", "1", "3", "4", "4", "0", "0", "1", "1", "0", "5", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "8", "38", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "12", "6", "1", "3", "15", "2", "0", "0", "2", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["3", "6", "22", "20", "1", "3", "6", "5", "13", "45", "146", "397", "0", "0", "1", "0", "0", "2", "0", "1", "2", "1", "1", "2"], ["412", "425", "6", "6", "98", "106", "9", "13", "19", "47", "23", "25", "1", "1", "96", "0", "0", "2", "1", "1", "410", "0", "0", "2"], ["8", "29", "45", "22", "1", "2", "37", "1", "14", "32", "137", "44", "0", "0", "1", "2", "0", "1", "0", "0", "8", "1", "0", "15"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "7", "23", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "5", "17", "4", "0", "0", "0", "0", "11", "21", "345", "23", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1", "0", "2"], ["3", "3", "18", "1", "0", "0", "0", "0", "8", "10", "52", "4", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2"], ["35", "73", "282", "197", "0", "0", "0", "0", "46", "154", "924", "933", "0", "0", "0", "0", "0", "0", "1", "1", "33", "19", "2", "19"], ["291", "917", "19843", "5489", "0", "0", "0", "0", "655", "3278", "76050", "10789", "0", "0", "0", "0", "0", "0", "106", "8", "177", "1620", "604", "-151"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "2", "0", "0", "0", "0", "5", "1", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "7", "27", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["49", "115", "1270", "352", "0", "0", "0", "0", "10", "27", "42", "15", "0", "0", "0", "0", "0", "0", "4", "1", "44", "56", "14", "25"], ["9", "29", "114", "6", "0", "0", "0", "0", "2", "4", "21", "2", "0", "0", "0", "0", "0", "0", "1", "0", "8", "10", "0", "7"]]}