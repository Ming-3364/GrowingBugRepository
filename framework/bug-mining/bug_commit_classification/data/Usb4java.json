{"number": ["fa52d0d5483a9d9cbcd23a8be69b785e358b6024", "5249c172f98b7307169116523c42ec43ccc4b32a", "bddf0cde58d348b5853b1046375229c304026f47", "f0d2b91b1e2f10dd8ef34b39ecf62f02309f3365", "b0ef2ea31366754d40c013b2182b00c08bbf06b3", "ee67671559ff4841e0e6537d251a1427a852cc56", "15055c7c0e0589391c72f9397fcd49ee15f39335", "b2b95dae3989d27d92f46ae5d098fd79530c4130", "ff28955cd47086afb2c0eb338787440dce3744c8", "bf4bb8601b1d60e53fd1032230dd9939e463ade4", "3f7a7bf548726515d87242f2919d20db6515e2b2", "b4ee76c6142f0a60071275069ef8b7d5fe36ca71", "eff738df9896594a0d4105b14259bd4b3f5f52af", "7c63c7e787f74e33737ac39cb79397c8d909d986", "b6198180ab33fa8b994f4262f327515988b02eb9", "b3151576448d5fb2c44970531b7971cb153b8164", "15c9170e8e24d42f0f6af0c6764da8bd845237a9", "03efe3683a062c63cd04c13edd6f6c95ea2ddf22", "51254e97c90a0d30c4ae0b9e22d288706feeb2e3", "e4432eb85f30b1613b5685529ea508b2ed66a43b", "e21e5e1e5d07c05c4a49766241a3b75e178aa6a1", "e843d73b60e1c0af505bbfe89eb05e5d2ec935d4", "1cb11d479b653c28589af4eea5f3cef254b6c712", "5a0979590e6ba0601f1e36c6a3c721775c06e6be", "8eec66545d2e3e933d9732f67cdb9397ee2f3f36", "989d98f9a488e3ec54d24ee0e5c170366dd21578", "355a819a63b0167a825dab89e1e6b2ffb1fd134e", "67e09e25ae7bba2a57fd89dd91c653d417fe3d11", "db11db2facfb1d79d4af806b05036a05c85601d8", "f2836772a0c79b906e1b5060dce15ff10b80ab9a", "98903208ec658c67ef0f90a7b845123d0e992bb0", "a66013a393626730b53b51260ac2308b6038471d", "440d88c2c51f7e2084ad1f7ab05a7718c3f9f1b8", "0851eb7a32977844cb979d913da01c01e3cd0c1a", "86ec4b9c6b699c6f55b83bef7f2453c4722657b8", "2bb24448a15b2e096c92e2b86d5915712e9435bc", "c9d4b1c53b044a80b371a91806f80d4dd62863bd", "c998b4f5418142eb4a6f0b8041708d04537b7016", "352d860383beae8d7e108bb4e8c7b984c0510b7d", "d46497eaa35b3ada0129ee068fcfcb8d6f86a762", "4bd5b6a76d94a65f104d36185d07c70b00c7b0ea", "15c1cf252ec9d646747a03ba72fbc9fb34df1039", "b7ff0b6cba77df17736cec0e60636d00b8d04a18", "faa739dcbd72f2b16bb33ff9f4ab9221aedd5d24", "266ab299cc7c780f62d2b8cd237200194c8ac465", "95ee591d46c54ed52b30f154895b223103e816b1", "b3e261f0508c5cda92db8a684975015b95056124", "8967434994b27ecdc051e8e8f43f5bd0fcf5cbbd", "a4d3ab69da28a453d34fff351780ecaf23d02f42", "0ba3d8869fadfbc52af520d22efbab0fab100b38", "275bc37a77903c2635feb49a408bb818ff7aefe2", "d26a0e0d626c7ff226a3e80fb96f0872ae4a0079", "09cf25cfae0f3beca19220d0fe5e8d19d5f389c8", "c1c32c3faf5924e937d909cdc9e62ebc6fadd40e", "dbd2a4cf55c4284fcf665ff3f729eefd872ea23a", "1efc33b0f246d72ad3ccad115f6752a6723d2ba2", "8c140fd20112386add1730a129b90f6efa0f74ec", "1794bbe71d840454035f85c78b51ffa59410b508", "bcfca40d56647165532c7b51ea786571f190459b", "69cecdb21a43652e9e68aafc35f3f160ad70ff86", "6d2afe79aca595b6bc6ba19207b199f4f18bae1f", "2d5ecef390b93f396a234610b426668754a5f3b0", "a4d5de493b60085f5b4495418ce42fa1fe577075", "2ac3763b7816a7be79a10f218ca474301832832a", "01fa6c971f81adb4f0af4466a262d374e1fe2c70", "2c5ea3c7a451cf4c0e4612be05ed67bdf6ae86e6", "5cfed718f4d36e0eb8876b17ad3204e0a2b19484", "2043e74cccfe4bd719bd428e4817ec320200eb21", "400db6f2aeb46d26dc2759bd80a7a0ee13718dd0", "daf9a61b2897ffe62a8a34208cf50bcf7657856e", "bd49c03c57f8056f0b32205d6bf61aa8f9ea1d5a", "d261d3537f62543fb608ab22232568f7f44953d6", "120cab4949c813996f541a5b86bc22fd279595e0", "a972abb9f1372ed73a5a358a1f08ec49d3d88aba", "24b8889f89d4bb8cbb9438cdc715fcee8ee37855", "55b1fe16599b2a63660d6a09ab5220071517cfcc", "abc5dce0c8beac1795daa938a9bbdf63e0e9435b", "1324fb502faa752739e0b1dca057de4cf93c13ae", "d39247c664a3a53ac70661f144bab6b3c645d770", "6748760ef62659ad269a0d5c28c22fff5a710379", "aefbdab72dd2363e223be26d3cadba375e2fd65d", "5e4f3e5587a10dfe9f36c6285f7a7de3a7229617", "8cf68c59700cfa1f97cd1152433d2fcd76385684", "53d87c7d3cd84255b687b530c43d19379c7d1072", "547cb306109d495d81b20c1059485c5c9970a77f", "a5e833c8b24ea69dd7b741d2d3fe4f4ccd855922", "614e493e5f95672464e51ca3c3c601b6b6521f86", "abb24060dd40332b2eb7c7a2c854d53290af8cde", "10bd83cc88f8a15d6d9cd8ef04cf774c2dc585ea", "04107e05052e23771d148cbe4869f3d4e2910800", "62f79e31ae6039b93a6dc4b48217e43e8cf93dfe", "02ebe76c658850ea82d7c1ee2b0c4c86b4ec03f2", "e7948fc19129ede443339b76b26426eb7126dce1", "7affcc18642609f416fcf4cb967dac9336b4b49a", "71a98a2de655ca84aedfcf82bfbd97142958867c", "7bb845f6b33b2d7a3c93a84dc62867d86d2ab661", "b7abe0bc09cc970481f57c44fede5a269b2ef730", "622f9004ea24385723b963d10220ce01af6ff05b", "a9e6d6f9db0767c930a9fa194d3dd777206dfc83", "dd5b7f5b6db03668b4aab19543f079b80ccd7495", "a61e0be5ebfc61112592cb952e60daeb09d4db9d", "82e64dcfa997c9b034194f9b5a6216b8f6cc41b6", "35320a0a938b9e3aa9fd17707ed7ba8cce002a97", "073778946036fd402e08d16eb0f7362f81dac038", "33a215b319b36da0e85c0130ac6eea58347a5988", "812d153828484b9a83ed1bf7d3f7d80ce8a3a357", "9864bb3235470809da3c4b4cd23cf3845ce1f5cf", "f49b05c57a80af8df261e8d57f6b5e6f83285c50", "ddeaedb273fad257313894b3d09ead2e084f671b", "bc675e4e747277991676956e9ec8a6418652f65a", "c176d10c7777266d968975d3390179bf44b1b6fe", "3ca70baf17cfc5aa2cd4d2c2d548c5dadd338273", "c073024c3a4f000cb56a00f3b1f9afc900fe4f17", "7646f7b4d55c7518ed4b8bbd905fac9081416e67", "7851dfb34e389ab3da4fb5fb4c2682304cd47989", "a63b58f912b0677a4314924196e50df7b3b5db85", "a7a74928f410c7bdbdd61cff7533d8a1d4aa4575", "87c581cc50cd23239fcc26b9cda7a9acdc836a9b", "464536122586dcc962b5d6441cb397f69caee2cd"], "father_version": ["73d4a1a44fe39229dbcb402158427e57a7448580", "5f3cad266a625cecd40d85427aea3f3952a40e9d", "f0d2b91b1e2f10dd8ef34b39ecf62f02309f3365", "054abf6503b2867383fd97c44544fde705b310d7", "a68a6f33c3ec48c271636e785726e6621c9ba806", "996f4ba7fca2b068127052e3775e370926b50485", "b2b95dae3989d27d92f46ae5d098fd79530c4130", "47534f98bc959a4b77499b5979c60af6326c6790", "4711217eb3365fe1339d21fe3c96881586588ef6", "129f8e3569126006616ebf2ad6185e7fa681c8a3", "a276da4f848c1476a6060fa5a01597d9bb0d8d3d", "3537834e94bb192d1461be53138b99dd5d9d213e", "6a5da7a00495eecd8ae5089e840452fa34226f34", "a276f7c92a1f565e76c9c89b67936b6d23db73aa", "b3151576448d5fb2c44970531b7971cb153b8164", "918ac83548a7437ac761eced45729d760f86db64", "ce7437ece0bf738c1f46788a508ff779baccff50", "2baeb360f86b274a35fdcba41c7f6ca695acd464", "11d359c39e2a7ba52160ca4953d1a1a386d95a19", "51390bf2d0a517e967a480885744449a32874424", "e843d73b60e1c0af505bbfe89eb05e5d2ec935d4", "1cb11d479b653c28589af4eea5f3cef254b6c712", "f40723a54be0371914b5b9ff7e143b1ad6390857", "a81ce1e517f6b4d9595f371dc476e3afeb0f87bf", "b05594758be5912c4a8cbee807084f03a5b4abda", "7e17f96de850d571a0cd57c8b7a4a7cd7eba6c38", "967101de8a5a222dbdf41c0365e965b07fa05971", "b166d2ef0d5dfc1738743a585cee4227b53bb218", "13d6ddc7c1025b007f4782027d291f69442b449b", "ce5294c22d2f3693c208369635d117c97cb9cefd", "28f693b463185db34e020e807e864c1f929f612e", "85111765e905c272be3e4e5840c5593f3eb711e7", "1877f8f41cf68ea9058c10dc3272f6038219667e", "c8d6f4ce494c2152b713631dcedf5b4deeb28f4c", "2bb24448a15b2e096c92e2b86d5915712e9435bc", "974d277459e8ed43fc2f286b12268554f1ef60ca", "9a608c7edcb921250650873cd88b549ef87c701d", "5369719bf3d16aeb264ac2c3f026125b53d4b5fb", "d46497eaa35b3ada0129ee068fcfcb8d6f86a762", "db56a990694e4fb4f63e95f09dc2ac3265b46363", "08f724de7a12beefb7baf965e986fe9f9d097977", "0fa54ff8d870e21bd797c5e8c7f92e2a645f5182", "d9f4ac089ce0cfc0993b56bd19e20dbc891110d2", "451b081d3fbf580af2166f01c91f77190ca729e5", "0f6031ab889e5e62977d2155b484e468cef87536", "b3e261f0508c5cda92db8a684975015b95056124", "8967434994b27ecdc051e8e8f43f5bd0fcf5cbbd", "5b58cb0302f3c3c684712b7b28adf1dd0e5b1dd8", "0ba3d8869fadfbc52af520d22efbab0fab100b38", "ea680a9be79dbdb11aba17dce9feba8e16a481b4", "a47e3cd3c30f90c6f097468b36b2a4b502a989ae", "09cf25cfae0f3beca19220d0fe5e8d19d5f389c8", "cac32974581bde1f8131ee846296ca829de5f9d9", "1b93df20ca6a09699a49ee64353d49c2e99a2f29", "68125967a4f4b21ff52f09d68ba849f2567262a2", "00670bb48d352ccb423134f053d9d1d1ea4cdd2f", "66017bfa88c715ff8a91645ab7fee2c5cb6f5354", "bcfca40d56647165532c7b51ea786571f190459b", "69cecdb21a43652e9e68aafc35f3f160ad70ff86", "6d2afe79aca595b6bc6ba19207b199f4f18bae1f", "2d5ecef390b93f396a234610b426668754a5f3b0", "36f14cf52daeb2a9378a3c44e137bfb8ba4fcd4d", "b97aa732204825642d297a7e71a82452d60de9a8", "01fa6c971f81adb4f0af4466a262d374e1fe2c70", "2c5ea3c7a451cf4c0e4612be05ed67bdf6ae86e6", "278733f0cb0dd84aac9972c5c751963cd77ce14f", "4e9cd12c292e59ad2640b7279285ce4a6d77a3f4", "2a4ecdb159e632e974b8ab728d50b69b22c970c2", "daf9a61b2897ffe62a8a34208cf50bcf7657856e", "ef031271855a60459be82a3fc3a799f15bbe7561", "804fda34d221acb4ec1e616722c6fe6856810279", "b745492d72706ce7dc8ce5118a938b2e52acb197", "66048cb795f8a20e042a161a67a1b408e07086f9", "88eb7eac491d037f40656e3b6afa743e7df0cc84", "20d86df89cd8f17b4db9b0d02df7bdab49fd3ace", "718e9af5aff22fb9812aa4354c0ab4f326ce7cab", "1324fb502faa752739e0b1dca057de4cf93c13ae", "48115f4907e26287343bb2c85666d19cff660436", "5a73cdd188cd66615df1f8268417661fe3e53458", "d23233d53b50e4aa93cd2095ec7227a14bdffd02", "e0fa45670805303fc2e8a40f3a208557a65b5c06", "8e8832c991eb03b231e3cfc26644f832f53c7923", "4a75492cb589674bb4ef7ba95e3fdc56f1b560f9", "547cb306109d495d81b20c1059485c5c9970a77f", "17137e1a7d54739b0c1d7b4d38a4a823de4aad70", "dfb8104520c3a61e18d1ec2fa58080218cf60079", "a659d6b059e2df15852e4a2414d226b5ab8bf4e3", "91f3b13f6280c8db745da287eff0a28dd634c407", "ab5c148f37551086f56070f5f6ed676961246df0", "abd4dcd617487124e5478d752556d40e7ec4b13c", "c2fb86f1d8a44b9b83cf1b28903c1921e533c4bb", "bfa70e1b736a715e66ed64fef095f31439aa4248", "7affcc18642609f416fcf4cb967dac9336b4b49a", "ffbdf885ed5ce86fe113badf108d1bac683a906f", "1cd737fa553dd02258d81a328caf8a3b7448810b", "b7abe0bc09cc970481f57c44fede5a269b2ef730", "376c6fa7b1c32db7bf2d72744059fb17da746dd1", "6b627678d13b22f9b5f90fb1ef5702a97936d0c6", "41d9b5cfb31816fac5813d6ca1f0e6c9fc96ca51", "3b7601b84f0d8a69263cf9caed001e3c1bede0fd", "d2877ad4e9049deeccdf7826c906bed65c595cae", "35320a0a938b9e3aa9fd17707ed7ba8cce002a97", "032f1b7d1376ef1ffea5070ade40bc3a426a8d84", "76fbd9f5ab4b123583f01fef2168a8c717c18170", "812d153828484b9a83ed1bf7d3f7d80ce8a3a357", "9864bb3235470809da3c4b4cd23cf3845ce1f5cf", "7b4194c2850689a647cef0640e3c6f5a35816c02", "8563bd97d550a8b63e0ed5f4d565d912c3700130", "43e2ea8398e7fc09685e35aed8241ee1c443a721", "c176d10c7777266d968975d3390179bf44b1b6fe", "3ca70baf17cfc5aa2cd4d2c2d548c5dadd338273", "c073024c3a4f000cb56a00f3b1f9afc900fe4f17", "855ea18c430e0ceeaa690d96d3d97aa7d6663884", "df0e917f7aa237bf2e70fbb635fbe1cfcf7695c5", "46f33afb04f2c4841220c6916f72489949f3d7d6", "81a1b5b018d609f3999829aab1043a67c9abd0d8", "82ed9691629a5f8cc59c9c0cbdf4e73767ae8e24", "464536122586dcc962b5d6441cb397f69caee2cd", "4b3111145c12cacb853c5abd165ec0d46bea51b2"], "commit": ["Fix wrong group name", "Fix javadoc links", "Fix typo", "NOT FOUND error is also ok in unit test", "Fix typos", "Fix logic bug preventing many unit tests to run on test systems", "Fix warning in assembly", "Fix site generation", "Fix NPE when USB tests are disabled", "Fix unit test. Obviously libusb has changed the returned error code", "Fix udev info in FAQ", "Fix download link of javax extension", "Fix link", "Fix hotplug enumeration event.", "Add LibUsbException for easier error code handling", "Fix documentation", "Fix some wrong format strings", "Fix equals test", "Fix hashCode test", "Add unit test for DeviceListIterator and fix next() method.", "Fix some more style violations reported by Sonar", "Fix some style guide violations", "Fix javadoc syntax", "Fix bitwise OR of signed byte values", "Fix conditional execution of unit tests", "Fix website link and correct formatting of copyright lines", "Fix links", "Fix passing of the special value HOTPLUG_MATCH_ANY, it needs to be an int so as to not hide one of the short/byte values.", "Fix MATCH_ANY passing to native function.", "Fix sign-extension of short/byte arguments when passing to libusb, which expects int (???). Update Linux 64bit build to new code and support glibc >=2.14.", "Fix Windows support, which needs shared builds (separate DLL), while everyone else is static.", "Remove TODO (all being done!). Remove Eclipse cproject, was committed by mistake.", "Add link to BufferUtils to allocate direct IntBuffers. Fix formatting in DescriptorUtils.", "Fix tests to react correctly to NULL passed to free() functions.", "Fix trailing white-spaces in tests too.", "Fix formatting properly and remove trailing white-spaces.", "Restore memcpy-wrapper (with small #ifdef fix). Fix some spacing and style to minimize the differences to upstream as much as possible for later reintegration. Rename ssEndpointCompanionDescriptor Java variable to ssEndpointCompanionDescriptorPointer. Fix all -Wconversion warnings. Constify new structures as needed. Use NewDirectReadOnlyBuffer as needed. Add missing function declarations.", "Fix case of classes.", "Fix some javadocs.", "Fix dump", "Fix unit tests", "Fix handle leak warnings", "Fix autogen.sh failure on Linux systems.", "Fix typo. Update libs with new fix.", "Wcast-qual was useuful to discover those errors in extra(): the returned ByteBuffer is fully writable, but the backing memory isn't really intended to be written to (and you never should modify the descriptors in memory). So fixed by getting a read-only ByteBuffer and passing that back to Java instead.", "Remove memcpy wrap stuff to support old, broken systems... memcpy is never used here, only libusb uses it and there they don't support it in any particular way, so I don't believe there should be a workaround for this that forces memcpy to be slower on all x86_64 linux systems. Enable silent building and C99 support. Enable lots of warnings and don't enable Werror, as there are warnings in libusb.h. Fix all warnings. Add const to exceptions. Make it possible to pass null to setDevHandle and setBuffer in Transfer now.", "Fix tests: use direct int buffers where needed, it's Implicit and not Explicit, the class 5 is known. Setting devHandle or buffer to NULL in Transfer is not supported (doesn't make sense at all...).", "Fix descriptor dumps. Forgot to shift the masked values, other minor changes.", "Destroying the default context twice, even if it is refcounted, results in a segfault. Fix submitted to libusbx as pull request #116. Also fix this inside the Java wrapper, by adding our own refcount (similar to what was in original usb4java, but allowing multiple calls with the default context), and making the access to said variable thread-safe. Once libusbx fixes this, the above code can be removed.", "Fixed test to also use the pointer instead of the Context hashCode.", "Right now if you add different PollfdListeners to different contexts, only the last one will be remembered, and subsequent callbacks, even from other contexts, will always use that last one. This is obviously unexpected and incorrect, yet cannot be fixed by just adding more data on the C side: you'd have to remember the callback object at the very least, which you could in the user_data field, but you'd have to make it a global reference. Yet, there would be no easy way to later correctly delete that global reference, since to unset the pollfdNotifiers you just pass NULL to the same function again, and you don't get back any data on what was there before. The easiest way to fix this was thus to change to a HashMap, Concurrent since access can be from random threads. The key was chosen to be the Context.hashCode(), as Integer lookup and comparison is fast, and the hashCode depends directly on the contextPointer stored in the Context (which identifies it). This works for sure on 32bit systems, but I'm still concerned about 64bit systems, where a long would probably make more sense, I need to think about it some more.", "Fix NULL deref in InterfaceDescriptor too.", "Fix NULL dereferences. Using the result of unwrap*() directly can lead to dereferencing NULL, for example if called on an already freed object. InterfaceDescriptor still to do.", "Add new transfer_data structure (Java and other objects). Update transfer functions accordingly. Check all variable names for consistency. Fix memory leak on failed getDeviceDescriptor. Use result == LIBUSB_SUCCESS instead of just !result, it is much clearer what the integer that you get as result actually means that way.", "Version.java: add nano(). *.java: Fix code and comment formatting to be equal everywhere and conform to what I could see as being the expected usb4java standard. *.java: Remove Apache-Commons dependency for extremely simple HashCode/Equals involving only the pointer variable, instead use the Eclipse-generated methods.", "Add resetDevice() to also reset the Java Device object after unref, as it really shouldn't be used anymore since you don't know if the refcount reached zero and it was deallocated. Every new reference means the refcount gets increased AND a new reference indeed exits, so this always works, unless you let references go out of scope or overwrite them, which is clearly incorrect in any case. Also add missing checks for setDeviceHandle() in Transfer.", "Fix spacing.", "Fix handleEventsTimeoutCompleted and handleEventsCompleted, they require access to a variable representing an integer, that gets set from somewhere outside, like a transfer callback. The only way to do this in Java is by direct buffers, which IntBuffers can be if allocated correctly, as explained in the JavaDoc.", "Fix signature comments.", "Fix memory leak: if you malloc, you must also free, JNI never touches manually allocated memory. Also, I don't see why there is any need to deviate from using a pointer to using a ByteBuffer here, it will not make memory management automatic, and just makes the DeviceDescriptor different\" for no apparent reason. So changed back to pointer.\"", "Don't create new scopes in macros, it only makes sense if you have frequent name collisions, and worsens performance. Change DIRECT_BUFFER to not call the isDirect() method (expensive!), but instead to check the return value of getDirectBufferAddress, which is always used anyway. It also detects cases where the JVM doesn't support direct buffers and other error conditions this way.", "Fix signature comments.", "Fix LongBuffer vs IntBuffer usage for getNextTimeout: it has to work with long. Fix method signatures. Add TODO wrt wrong usage of completed flag.", "Replace mentions of struct libusb_context with the typedef libusb_context, as is expected by the API. Also fix init/exit to not handle the default context in any special way: the default context is reference counted, and it is thus NOT an error to call init on it multiple times, or exit for that matter afterwards.", "Fix typo.", "Set size to zero on reset. Else getting the size is incorrect, and later when checking in get() it would pass the check and you'd access a NULL ptr.", "Fix autotools run.", "Fix site.xml", "Fix reading of active config descriptor value when device is in unconfigured state", "Fix mac os x detection", "Fix test coverage of DescriptorUtils", "Fix 32 bit linux build. It wasn't statically linked to libusb", "Add --add-stdcall-alias linker option to fix build on native windows", "Fix unit tests", "Fix dump of usage type and synch type in endpoint descriptors.", "Fix wrong error messages and wrong return value", "Fix code duplication", "Fix code duplication", "Fix wrong extra data pointer in descriptors", "Fix unit tests", "Fix stupid equals error", "Fix device scanning", "Fix wrong exception throwing", "Fix subscription/unsubscription links", "Update version number to future 1.0.0 version and fix libusb version numbers in description texts", "Remove SUCCESS from test error names because this seems to be different in some libusb versions", "Fix wrong key type", "Add Interrupt IO Error Conditions Test", "Add bulk IO error conditions tests", "Fix typo in changelog", "Fix wrong logic in isBusy", "Improve error handling during native lib loading so javax.usb no longer hides the important exceptions.", "Change loading of native libraries. They are now included in the classpath and extracted to a temporary directory during runtime. Looks like I also fixed the loading problems of libusb.dylib on MacOS X by changing the dependency path from @executable_path to @loader_path. So no java.library.path and DYLD_LIBRARY_PATH needed anymore. Just add usb4java as a dependency and that#s it.", "Fix warnings", "JNI loading errors are now all logged so they are also visible when using the high level API and so ALL four error messages are displayed and not just the last one.", "Downgraded to older minimum autoconf to support Mac OS X. Fixed library paths and ids in dylibs so they work when copied to *.app/Contents/MacOS", "Fixed typo.", "Fixed SCM information. Added Issue tracking information.", "Switched to version 0.3.1. FIxed missing support for custom buffer offsets and lengths.", "Corrected java types. Fixed Mac OS X problem with sending empty control messages.", "Fixed wrong size in interface descriptor. Splitted function calls for easier debugging.", "New pre-compiled binaries for windows and linux. De-coupled version number from libusb. Fixed cleaning of C files. UPgraded configure.ac to newer format.", "Fixed checkstyle issues", "Fixed checkstyle issues.", "Fixed some findbugs issues.", "Fixed some checkstyle issues.", "Improved error handling. Changed visibility of all classes except UsbServicesImpl to package private.", "Fixed wait/notify. Fixed wrong format sting in LibUsbException", "Fixed checkstyle problems.", "Fixed string descriptor output length.", "Fixed dump indentation.", "Improved dump output. FIxed endless loop in tree dump.", "Fixed some javadocs. Added toString() methods to dump all USB information. Added a Dump command line program.", "Added site (Not finished yet). Fixed some bugs find by checkstyle.", "Fixed typo.", "Fixed warnings. Changed some formatting to have exact the same output as the Java Dump program.", "Fixed warnings.", "Fixed warnings.", "Fixed C build."], "metric": [["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "8", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "4", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "9", "5", "6", "7", "15", "6", "5", "2", "2", "2", "1", "0", "0", "7", "1", "1", "0", "0", "0", "3", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "5", "21", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "10", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "-1"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "6", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["0", "0", "0", "0", "1", "2", "3", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "0", "1", "1", "69", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "17", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "6"], ["12", "27", "34", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "12", "0", "0", "10"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "14", "41", "156", "71", "1", "1", "0", "7", "0", "0", "14", "1", "0", "27", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "9", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "4", "0", "0", "0", "0", "2", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "10", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "64", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "16", "54", "51", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "2", "3", "9", "2", "0", "0", "0", "0", "0", "0", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "16", "25", "2", "2", "0", "0", "0", "0", "0", "0", "16", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["24", "222", "46", "46", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "24", "0", "0", "11"], ["1", "2", "2", "2", "0", "0", "0", "0", "19", "57", "79", "71", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "17", "22", "22", "4", "22", "27", "27", "8", "25", "68", "68", "0", "0", "4", "28", "8", "-13", "0", "0", "5", "18", "0", "-4"], ["2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "8", "8", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "8", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "24", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "5", "21", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "8", "1", "0", "0", "0", "0", "15", "83", "102", "105", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "3", "10", "19", "10", "0", "0", "0", "0", "0", "0", "3", "0", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "4", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "2", "2", "0", "0", "0", "0", "1", "3", "18", "10", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "6", "39", "14", "1", "9", "9", "9", "1", "3", "12", "9", "0", "0", "1", "0", "0", "5", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "12", "61", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "9", "52", "207", "77", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "24", "77", "44", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["14", "77", "399", "226", "0", "0", "0", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "14", "2", "0", "54"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "4", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "1", "2", "17", "18", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "6", "5", "1", "1", "1", "1", "4", "4", "24", "20", "0", "0", "1", "0", "0", "1", "0", "0", "2", "1", "1", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "11", "22", "46", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "1", "2", "2", "1", "1", "7", "5", "5", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "24", "34", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "8", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "15", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "78", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "6", "6", "1", "4", "8", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "36", "58", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["3", "5", "34", "49", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "1", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "11", "102", "62", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "6", "3", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "5", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "74", "0", "0", "0", "0", "0", "1", "0", "0", "10", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "871", "0", "0", "0", "0", "0", "2", "0", "0", "33", "0", "-1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "15", "46", "27", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "2", "0", "8"], ["4", "5", "202", "32", "0", "0", "0", "0", "20", "13", "6", "144", "0", "0", "0", "0", "0", "0", "3", "0", "1", "13", "2", "-2"], ["4", "7", "8", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["1", "3", "20", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "9", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "12", "29", "19", "0", "0", "0", "0", "2", "2", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "7", "15", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "11", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "7", "3", "15", "12", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["5", "35", "11", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "9"], ["3", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["2", "6", "29", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "6"], ["7", "35", "43", "27", "0", "0", "0", "0", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "7", "0", "0", "14"], ["20", "36", "75", "55", "0", "0", "0", "0", "1", "1", "4", "18", "0", "0", "0", "0", "0", "0", "0", "0", "20", "0", "0", "14"], ["3", "6", "22", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "5"], ["36", "170", "311", "335", "0", "0", "0", "0", "2", "2", "7", "5", "0", "0", "0", "0", "0", "0", "2", "0", "34", "29", "4", "123"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "6", "11", "9", "0", "0", "0", "0", "5", "5", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["10", "21", "363", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "8", "15", "0", "0"], ["11", "72", "115", "88", "0", "0", "0", "0", "21", "7", "300", "0", "0", "0", "0", "0", "0", "0", "1", "0", "10", "3", "0", "39"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "6", "7", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "8", "14", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "7", "21", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}