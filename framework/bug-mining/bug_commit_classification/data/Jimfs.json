{"number": ["7962d7e77a756b4712f3ca382491b63e3856232b", "45a0fa10e045b404507320d8bb1b46d89b72bd65", "ee785ea6868e7f75eb8362e93ecebd8944c98cd5", "a5effce75781022e2e0151146e17fdbfe97ea76a", "199f3dc6b4bdf2fd7e03bad728f4aeef1e549827", "a9b336e3f1ef089951e02e469f164d15ae939315", "93a6c6782a9fdf1365face2461876b8644b2a404", "989957df7e7fce1f025818e4ccd5a416636dcd51", "4fce17b2ff7e96cbd450c8ffc0d3560415779ce3", "e8a24aa250bd49d1744753929e49e1cd10f816cf", "7c8701a9c0dac74faa5e577fcdc776b9598c12cc", "c72d08eef418f01a7dd1f2d1aedac047f05e7a4e", "24a71cc920572bcf3f7cf9bd739843460098dd17", "fadc3e2368d36141db4a67e7a7dea2ba64a999c8", "b6de435b987c92e142ac51ef35ba7ff93a6af64d", "0535c651b2b9682e06436c17cb91e6c19feeef9a", "3299e69f75cf524e6d101d88e8c202c1b24bf25a", "89aca081f3440200793b5970247403644a7acb34", "007f0afc3c2d1376cdb5218c330b4ea8f5325582", "3992dc14d0e7964fad0100afc8452a286fb1a9e1", "534cb8c8fcae36063971587dcfc62220327ad89f", "ed4db0a7d4f4b0fc92d44f8eca3b18a9abb21762", "ae00e148e3f7ba389776262cae035b074ce783ff", "0d3c7456c886d509c4dec69dd064837d56fa8739", "5dba02b1294a93bf7a6f45906a77e3468a67a265", "a05f025470dd79e55ee60e3a614b4c94f23f9715", "1f346011d0cce960ef723d784641fc23d1bfaaf8", "378dffb33f14d4a43692613215630967976909bd", "e43c4d3c14c2bdf7ecee4674d8a3965b9d9139a7", "2b304c6c9b9acc86874156be1063efc46787f4d6", "b606ba43840fa358621f7a9432c99a9ae596e33d", "b383494b75ec653d0422b276d98cee79200f6dfd", "34e29161986574ab26b8eacf98dc7ae05a62c47a", "ab016332f2b737c2ac6cc3ec15002008e230c71d", "4408ba97e7d36cdd5a3edda0aecbe0921ce14ae4", "299c6447428357b79b55029038cc0839b7929eb2", "2718cab2cf413bb656d84a1e67894e642215d497", "79781fa27a5667c9a5a88efce0bc09fa736e7917", "a78183e6610ccba9a85eb29f6e52cf348b2b70e4", "4cde503d0989cfa69bf915623a8babb4a6414ba6", "e1b3a5daf15b4572936b55aac387138436d3eda2", "a6c8e58bf263d684221319a5b8cc6dfebfc3fdf2", "a92d2ce2d7005e567cf5494a3aa7653889869f9b", "400002af3d4658c38ebf38c977da6f29127a0e1a", "b52f603acf215f043df6ad52466bc6e2e2725498", "f4b5dc146d321d3a0f95928707236080050dae90", "593059b5ad8b0e93df14af92b0959fd2750bf665", "ad823c9a02f050eb9164c6263c29fe099a740c4c", "9771a1c5a49138e56c161a79c8f2e01e9c0a84cc"], "father_version": ["61076c60d3c0e185d991d684a151491ab0fd5489", "2294abc6c985e4efa8ce33ac5d2024e4578dfca9", "cf5393429c675f5fd287ec116fc70c8f9445fb1c", "437e670c316f18d4a8b3571450ded3b71446a42d", "2705e66295e030618d0e6fea89cec2e342468bcf", "93a6c6782a9fdf1365face2461876b8644b2a404", "989957df7e7fce1f025818e4ccd5a416636dcd51", "4fce17b2ff7e96cbd450c8ffc0d3560415779ce3", "c2582a6be4d35b1b9a50801e4d803574018294ab", "2687caae410377e7d1a63c5eb34b8cf9700c6e2e", "138d1d9e86e4c84879a3b29f689c73e55e1861a2", "376109fe6e77d5c78dadcf0481347ce5813ccdcf", "94ef329706347150b7fec23f45dc37fab6b254fa", "a89928c001b2c98db356d5d226bd45dd1e369c64", "268c95feebf10c42823eb754004e88cb6e46e855", "3299e69f75cf524e6d101d88e8c202c1b24bf25a", "89aca081f3440200793b5970247403644a7acb34", "fdc12fe9e0edb4cb952a371df1f43e67d2f8f459", "813a8cf4c2347e2c26f285cff70d46d6116d71c7", "f8576afe1417e4414d5cd71f1a3723b3903646f0", "380fa8d899fafebbf09884d3d48c766c2c66964d", "b02c60ef5bd131394ea0d34a70fea94d1d785c7a", "3f475ca637ae6d738bd2e062cd6ca712cae0500e", "d63729b61e7575a89d6939f547e795957960e678", "a05f025470dd79e55ee60e3a614b4c94f23f9715", "9530349ee035020a8748021b006dfa85e136cc78", "378dffb33f14d4a43692613215630967976909bd", "5e78b27e7565161faeed5df214c6448d99dece18", "b5c378fa829cc42970841de3774181aa6822de09", "68a70f4dcce1122311ef42fdee317e03e494cd75", "db092219a7c431a6ddc7198c62390fde37262ffc", "34e29161986574ab26b8eacf98dc7ae05a62c47a", "bf9c938a99723877552a04c2aac155882c176b8c", "3abd95a268ae109c9a132377030d0911d2f0fb37", "62c0db7a7d057f4ace1a57fc002eba194e522bce", "06ad4e462c430896e064f1a9675786c6ea9ab9a2", "ac6b5b238adc92355d3d2bd7bdfbe0d2e8a880e3", "4e3d4db6a9169d0d168ab1628bad459252e5223a", "81c21f4152ff23a0548da1e35bb31750a3154ad6", "fc3177fb4fb8a7537399529a1d586d966a4d91ee", "6a11585a2a80443f3c5110db6f934e91819de6c5", "a92d2ce2d7005e567cf5494a3aa7653889869f9b", "ff39b13075130de549a3ce79d8f172763c7f904c", "cc0438e73af1b6db600874dd382ef8410a1a6af5", "ce2a209e50a8c2a5c62bb12de128ca3a1e17f121", "041f075dc8828523e98a4b555b94a9938fbf08e8", "b5e6da057beaf6e03c06e05138cf95431ceec211", "7f3eae6b24113cc05c463326f4a01ceb122b745d", "728c75755ef7a50f4c00b41628f3b2c5581b19e9"], "commit": ["Add suppressions for existing violations of LenientFormatStringValidation to support making it an ERROR.", "Fix runtime dependency on auto-common for auto-service annotation processor.", "Fix three bugs with `FileChannel.transferFrom`:", "Remove stray letter and fix indentation.", "Add travis config for guava-beta-checker and fix deploy_snapshot.sh for jimfs to actually work with the JDKs we're building with on travis.", "Fix JimfsPath.resolve(Name) to work correctly when the path is the empty path. Unlike JimfsPath.resolve(String) or resolve(Path), it was incorrectly including its (empty string) name in the resolved path. This only showed up when iterating the files in the working directory via its DirectoryStream; the Paths you would get would look like /foo.txt\" instead of just \"foo.txt\".\"", "Fix 1 ErrorProneStyle finding: * Constructors and methods with the same name should appear sequentially with no other code in between. Please re-order or re-name methods.", "fix Handler.getHostAddress() performance issue", "Fix 6 ErrorProneStyle findings: * Constructors and methods with the same name should appear sequentially with no other code in between. Please re-order or re-name methods. * Use grouping parenthesis to make the operator precedence explicit", "Run Error Prone as a plugin.", "Fix exception message - add missing closing parenthesis", "Fix internal build breakage from making assertThat(SortedSet) @GoogleInternal.", "Fix an issue with Files.newOutputStream for Jimfs where it wouldn't truncate the file if the TRUNCATE_EXISTING option was explicitly provided and the WRITE option wasn't.", "Suppress errors for streams that contain closeable resources (#63)", "Fix the outdated link of google's java style guide", "Fix comparison in JimfsPath that will always return false (as ArrayDeque is not a List) to simply compare the collections' elements.", "Ignore errors that prevent Jimfs.newFileSystem from working in an environment where ServiceLoader doesn't work correctly to load the SystemJimfsFileSystemProvider.", "Fix a potential issue where a JimfsFileSystem would not be removed from the static cache if SystemJimfsFileSystemProvider isn't found in the installed providers list but can be loaded from its ClassLoader by ServiceLoader. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118472638", "Small formatting fix. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117853112", "Fix flakiness in JimfsAsynchronousFileChannelTest.", "Make scripts executable and fix Travis config to use container-based architecture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98049848", "Fix cases where return value of method in java.nio.file.Path is not used.", "Fix another case in PollingWatchServiceTest where it's possible to see either one or two events depending on when exactly a poll occurs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73325083", "Attempt to fix up some test flakiness.", "Fix a minor style guide violation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70269830", "Fix java 8 compilation failure.", "Fix JimfsFileStore.getUsableSpace() to return unallocated space, not total. It's not clear from the Javadoc what exactly it should return, but checking the behavior of the real file system it does appear that usable space should be at most the unallocated space in the store. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63807322", "Add tests for moving and copying files from one JimfsFileSystem to another (moves/copies to FileSystems with different FileSystemProviders are handled by the Files class itself). Also fix an issue where attributes other than basic attributes were being copied from one file to a file on a different file system when COPY_ATTRIBUTES was specified--there's no guarantee that the other file system will support all the file attribute views the source file system does. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63161492", "Fix flakiness in PollingWatchServiceTest by checking for either possible outcome when a file is both modified and deleted. Sometimes polling happens between the modification and the delete. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61386432", "Fix a couple lines that were too long and remove useless package-info.java", "Fix JimfsPath compareTo impl to throw CCE as documented, plus minor other Path stuff.", "Add tests for HeapDisk and fix a small bug.", "Add tests for DirectoryEntryMap and fix a bug.", "Fix some lint warnings (line length, modifier order).", "Small javadoc fix.", "Fix moving a symbolic link to move the link, not its target, once again. Add a test for that.", "Provide a hopefully helpful error message for using Normalization.CASE_FOLD_UNICODE without ICU4J on classpath.", "Fix a bug in table resizing.", "Fix lookup of a root directory that doesn't exist to always throw NoSuchFileException.", "Bump version to 0.8-SNAPSHOT; fix benchmarks build.", "Fix an issue with lookups ending in .\" or \"..\".\"", "Fix out of place import", "Fix a couple exceptions to use the original path string.", "Fix some imports that got put in the wrong place", "Fix a failed find and replace.", "Fix a bug in SecureDirectoryStream implementation and move FileChannel impls to file package.", "Add WatchService implementation that polls watched directories for changes at a fixed rate.", "Fix a test that was failing on Windows.", "Fix a bug with creating PathMatchers and add some tests."], "metric": [["1", "1", "2", "1", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "22", "41", "2", "7", "52", "17", "0", "0", "0", "0", "0", "0", "2", "9", "6", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "41", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "5", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["6", "17", "132", "132", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "9"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "44", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "10", "11", "1", "3", "16", "5", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "2"], ["0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "3", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "8", "51", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "2"], ["1", "3", "11", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "8", "59", "143", "0", "0", "0", "0", "0", "0", "1", "2", "0", "7", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "3", "5", "5", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "30", "22", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "18", "41", "19", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "4", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "17", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["4", "6", "31", "18", "1", "3", "75", "5", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1", "1", "0", "3", "0", "2", "3"], ["0", "0", "0", "0", "1", "1", "10", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "4", "8", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "4"], ["2", "8", "28", "39", "1", "3", "11", "66", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "2", "0", "2", "3"], ["1", "3", "1", "10", "3", "3", "208", "2", "0", "0", "0", "0", "1", "0", "2", "11", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "1", "1", "134", "0", "0", "0", "0", "0", "1", "0", "0", "7", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "15", "15", "2", "4", "5", "4", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "3", "0", "0", "15"], ["1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "2", "1", "1", "1", "23", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "3", "2", "5", "75", "3", "0", "0", "0", "0", "0", "0", "2", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "8", "0", "0", "0", "0", "0", "3", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "3", "23", "6", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "4", "9", "10", "2", "4", "10", "9", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "27", "62", "55", "3", "5", "24", "9", "0", "0", "0", "0", "0", "0", "3", "1", "0", "0", "0", "0", "7", "4", "2", "17"], ["7", "14", "572", "10", "1", "1", "204", "0", "0", "0", "0", "0", "1", "0", "0", "10", "0", "-1", "4", "0", "3", "43", "0", "2"], ["0", "0", "0", "0", "2", "2", "9", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "2", "4", "53", "0", "0", "0", "0", "0", "0", "0", "2", "4", "0", "0", "0", "0", "1", "0", "0", "1"]]}