{"number": ["b2554223ccae1d92b191eb10ba4a4866c88310f0", "08b78933566800caf4fe95e3e666ce6a26cad64a", "ad77056d77e72b15c8cdda310bf29311163e11d4", "d83603377bc1a8bbc36333d105d1a9eab60afd9b", "ab0ae07c587a5ba7dca6079f255a3b4fcf0d0582", "0b0d6975c7b9c777edaea251bbd992b6de602c14", "1bdef93a3ad1728769643e58e36cf0c43032d399", "02cb1cd32b7fa41a7d921563e3da58417885c615", "bcc9fe45e39fa2d743616cf822c7f6dcbbff6e88", "c4854d5cf594e2cc03f3a3413d1576180617b843", "f7abab4bb3a6dadeebc1427f2ed44ae0a62040b9", "738d317387783de3b2bf357d9417d10156c09b27", "350659cc07a601c488c5bda68d4ecf5da4f982ee", "2872237b01cc9d43630ba3b9c483dd10227e2cae", "df622abf7ceb0984026fabfbcb04d2e6b05f370b", "a81072df067e4ab811ab01bda34e4b2722a66988", "363f568b6de8c093d6669b45d29c804783c9f39e", "2712230640393acdd00f70640c44ae739d4103ec", "9c7fe49c7a817715296646b8e3014edfd76975ba", "a795fcc1b8eae06fe32463057f60883e16a160f8", "6eaf556c8b1449e97e19a6c4401cedfea0911753", "59640fa0df841cd6725e7b227e11d4f19a2aaf64", "8b2a048a713a3d2f06ceb39b90649257791dc090", "50e7c7e02cd28b3dc5ac99a0e32bc397915f46df", "5caa5493958d40f597b4419c5027c61ce13ceaf7", "2c8c7fed126376167126df0da740b3cff0c26469", "1ae63eb443ec00a4899aae13fa391880db406b6b", "0781568a6cc7b3ccf59fa6851e96ab1636e745c2", "0405856c980352cdab83cf1e546a3cb30144689e", "98f977662f3c16c511e65eac7536b9f8d875c0d2", "7e6a6cf83f26aa053bca3d6fef3a360c62dfedda", "ee1c02fc7788d52f2dc094a8b05fcf8318bb3837", "77abaf34d69d3e44099848d5c1e1d032211b9130", "16e0e9508eec633193026f393d33f53ba8f86b8e", "e586f654a95a5c8191e1be3ac6da5a2165d6b5bf", "2ebc207348b2c9d41d0c308ccd860f15a08bbad2", "f6325c90e32fc3d2331adc5f6075b6ce465055df", "c26e1c0d6de4152e87efdce058df827bab241d73", "f123130d30cb9f5c828faf1d97dbafe1d7b92662", "5fd16c90c1226df1a56c79d3a6f7c3ac58dc9c0d", "51ba928a1b641afb2f525b28787aaa5ba3bc29cc", "97bed3ffbdfc6b4e338ff9357955f4bb6ddb3ff3", "84e0ce89ba6afa8cbe7ded6e7baa49353167a11f", "363c593aa7c115bae39805bb2f233e45692abd87", "af26c7247984f7753c1a84ead9186584f7ef8d51", "ffb154d0304e7c226e1495e5bf0344ff9313a29c", "db66b74249c0c8da50f64f864701ea17eaa3675b", "ab52436c91af36b1e8c9b30267261d1111d0a449", "969dff1892e25b929dac9bc457481f86af873c8b", "32b4a1204568f46e00a84d00f97f0ab5cb43558f", "57b98ea6cb9939d928b7e27c32a9d21919bef86d", "76a721005f8faf4998c90a59acecebd174ec76aa", "928554a9b200f6236973f0389ae940b762fddfe4", "02b6ecb02854fedbb44b0ab8208a3e2bd0d08982", "e965ef3c879d3b43e198cc5ee71df727d7789d0b", "4efb7e02871a22b10d3e0e7d7ac1e424f0521646", "0a5b39b0ac8fb2d63134c333924c3901de2446b8", "2a554e93c40e19a714d0c931bec9d53058063ccd", "84fb9551ea00afbced71d6e197b246874672db38", "35c8645dc57b0ef269a354d8e9d52097cd724319", "6006bb78560d118b5ce493acaf7f1f56019a3d24", "6c83617f18609289969f07f3d616b8672a5de9a3", "581922ab06e1b80de878e04bbb9110a5fff45746", "5d34655f68131119cf04327391b76686656ff30a", "f253439461269ad469064698bec92647e5728573", "c1225dcf8f34c975a066d27db0d43482a35f325b", "0b1b6bb54a03643674548e370ecf366f722f5224", "8c596b2a20e1ebc396ee4c396f165a01ab2d0de4", "6f1c6ccdd049e62bf30c44b8f6ca782356825eed", "f8cc1718a33a868e9951f7d3d6b4f74d8b1a1548", "6a2b57138e2a717474295cafad8d6d4559d36510", "bfcf5fcefd0e4306cf6721ce245d763124c91f91", "06f72cfe538717a19e6a5e0509d32b753248ac2a", "b958fd0ef08b0aa7dbbe2056f6138c96d0d0d657", "7e042165a6d136b3c93e99f744c6e09626be67c3", "fa918f7a4dce12245708d0fbcb1853afc38ff685", "3f5ce3f73cbf6fe1548a4718c0c01b9b888ab3f9", "02c0b3fc2a5c90e30e1a8720bf03198b447984e4", "234fbabf8fc7d4209ada2aa17fd5558f0496a29a", "f6cb899ce0787848eb86b32c82b741110774b6ed", "b8297a7b0806528560cb5d48fbb5c88382aefe98", "63fb234bb9e9997e2a8e684761ad79822487f5d2", "aa2b4c568a6030280295d0fa1c08f2d22679dca6", "c285193b47a1d0a6695c74cec61920119c03bc56", "f52b308298a3b8fa497131c3c671e3030f8b42c7", "6c407791348e8a04c3f84efde724dec3d9b16816", "713c06cce9ccabd3acae303b047c874a3e7f0bd8", "7546aca48d98281a0a6cb64a2cc12b74f270d32e", "c3ae940a4fe937e31d86349d5561c20a66f32b3c", "2b12d5cc63506f1a88d7f0a82519c89bdbcc5cdc", "d82f0610c2a87562362144d537cff5f16352f1ab", "2b0881e4d126c94b7833c34e237f4988dd65489e", "036e9a8276198faa34a884c0ac3c58491c1c210c", "d1e25e68d3cde1b7d1c0b90f07dc0e2421b61f08", "5cd74aaba0062c8c57ba33ad80b5fee64bb3789a", "46e146db975181c3de2e0ebec8e25d9fa610c08d", "d973fba3ee066ae4f9e17d6141f77d1771a6653d", "9b55062ddd3cc9d81517e24bbcd8db5d514cae37", "5de381279030adb0d69a50427b7260141747fae6", "cafe3912aa093d778c8ae418e85dec20bbfc5f50", "43d61da39c84dce0bdb920eca2abf529b91f9e01", "3ea20221e024991d5dd1e1383d3dc0c8e9f714f8", "1bcf6927a3cbbb2bd49bc3583bf0584b88bc1728", "d53fe4bbf9a439887a079bf3c1d1686d1b7ee815", "1a30c07469f896097c1311e039ca3066873f5db9", "02c489e4fbddf702c7932b55caab83e6d8cba9ce", "9ba15fed06d4d22013a1d4c885a4181a505fdbb4", "a36310535c69e68b25d74b49ee9f9442abebd954", "7445e44ba8acbbfc09116fec71d59066cdae8721", "9867f9c2142355ae958f9eeb8fb96811082c8812", "fdbdc63cc56fd2e8d8e45180261be21696f89a8d", "a59c18dba735563ebaf1792c4e787552e72374f1", "1dd0a91aa5824ebd63d1f0a038d3c9dedbe56bd1", "ba0cff043c4412778856a45381dd35e02e30235c", "0f59e8cb872c1e8b5215b9fdfdd4a3a053d39072", "3d494420fcc4fd4e4fdf3e688375b4a5df04b99b", "2fb23e39b22898ea861a36c69a4bef548710e3a4", "058364445da9e3299bc16b302d7b31545be7d30a", "22d4cca355954428d94979d1ed28b8128560c238", "22de684ae3c7de50d59e1e3ec9a9ba4700483c1e", "12857901e511f32395cbe2722f55af93b81f01aa", "3f84edfe2d9951bd95ce8f16a17320318ef42f9c", "6b3086dc7ca0b0f9d664fb7cc1f4664e4a4df640", "5eb2249a012815c1bf69f33b9bedd98273c3d46a", "63572396cc4006bf2f12667c9b3b0c7f23e6caf5", "7715581cb3521f0d6ba48f957e8daa492383fba3", "cb610bf7038cafd462cece603aae46595065f46c", "394c8edb29a36f108605babf7fce0d517e603bdc", "d08bba96c4a647e2fd7588a7ea36c77b09ab2047", "08125e9287e577e167ca1186eeff9e14c51250c4", "94d0a151d43b4f32fdcc6a598ba9edc3ca7c254f", "4b8795e9dc0724bc74de1870ea609d1dbeff809c", "76be88e8140f77a25824f5deb67bb13b8e5dabc6", "0c69c36ff97fa83887e75ba567745a5919d4b6ed", "4daa205dc4fe1d339f91155dde65f3941cbd144c", "f83bda3587fb8f1df33b6f3ada44d9de8bd93f6c", "a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76", "628ec00157c3ebcee8eb01537fed11663a45129b", "269f2f69279d2cc4c3859e9dd0c08cb5f24bcc86", "647b24f7f1b56174c141f6e7bb91dd8dcf117373", "c35ebc2ce88fa26e1e36fd1eb806c2206ea98f00", "a5b2b1fc374c9d5945fa3d9b101b591dc88710ab", "d57f8ece5508afc66c4768396c54b412dc9f2cc2", "d1d7ef3de7f3aadc177f311c8ceb06887180a5b1", "a78c488ea5768d23815b95adad11f11fd35f61af", "016d079f89d9840f882827c338fba39399151b7e", "80ed818d809b816b7b9a6809b5432f89d1bdfb16", "b6c35cd58a1e64c6895b73fa15771f0eb366af0b", "8859456e7c13e83341641fafc8e6f79651161b0f", "bb63dc1a4fc5d5cec7692090856809bab75b4f8c", "0e896db46024dc7596302f8622276d1c7df02c6b", "31d8fbf9934778160de52837ef311f0d26efbbf8", "1c2a6ad36b2c6a709b8a7ea2c344473ec48db97e", "1047e98e4081bd874488a99b3e5d6975e38626f8", "e8120035bb4b7472bf855ad33e8fda38c94fbbbc", "ebe9f053ab2431f8f22f6d892cffadef4b10479c", "35023b810b1b769daa2ca191ddb4cfcea33f077f", "3338a48b6abb9a0641dc3c2c169bb59b9960dc15", "32a8f2490a92a12dca4f4c6c51ceccec1f7135bb", "be1bbda4ec75f1dd0da42698722386540d36f453", "72460885d36e9a09ff351c0976cb85d6639487c0", "e1197a962b656e5128cfa01319e42db19c8ffc4b", "a9228269b4d6e7b74a6354f179babe723c00f387", "2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6", "33736ecd7a00d7fa3292bee6c1329b8edee670cc", "2d454682438a7ed743365daca07e93e7226d4a55", "013039198244a5cd106de0a6e20e66839117ef49", "4352fa034ab6dd0c7ce117a07620426ddb00a50d", "7839f29c2559fa100851777a79774e85f0dadeaf", "4d5804923d55353b214b8e2a45a6416a75665a4d", "359c5c3ec4083dea3dd5060ffc4087d73ff98777", "3f42514570201fb9943a7ba49b33b309e52ca561", "8f196358f5a494f974a741b5a982f96f03171223", "ad6584a0561687394054936e86ae544ea1d57584", "978ed86a76b3c47e8247f6691586b994bcf13dbc", "45d86df69be98dc64a455e397ae6c492f803771e", "94c2d2c6c53cef4785413575ca445a048414641e", "389cb718a70cd11fdf9c336209246ebcfe944755", "cd12655357bce1ff37a9609d4c6d493fb59c0e0e", "2823a381af4bde3c616c6542a6e2933d931ba76e", "88ee52dec9920c95e2f0ed3c43e625872c5d1fd4", "1c9b92a5d8699e93df11c222566f797919db3f97", "21a19670ce07439d616a7a38a9907560eaa6a25d", "c2bee817056d21696eb269287edeb110da90ff24", "ee9a8f34f061cd15c091943903fdf8c6e173523a", "fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1", "9ee53e90374a2253624b2d97860d928fde6c81c0", "f74ee672186bffc687b2accb911344a7021e7ecf", "91a844c19e6d52877c65b8870d8ffc86acb0d80b", "c0b196bf9319cda967fa33972d31e2da862966ec", "be10b4c6b7a4909ec4eff8a2377a1f1b2d4aa63e", "fbbb52dcc92e964b95f389684e87b363f6499173", "6b7e7187bd074d3f2df9b04e17fa01e7592f295c", "b405e0417151915b98c3d2033adb9770336a7bbb", "7e5464ef25b98ea8f1988040d3623b93129ff1f4", "d77a85ab9ec33d45bfaecc08daffcc015a2c1c8b", "56a879c866f7039321331d1f4305619adba527cb", "fb66c4219616e45fd19a8ccb5e93130d77ef96a3", "efa4e9f24a309c38c1356fd43eb76fcbca8d975a", "e390a0f7070733c9aa7e16f40e56e5a229dfcd97", "ee443bce9731bb8da1eb60202f68de4c4c298698", "6585c73bd39373a7ec3613f0bd77e376b118db5f", "5221c15e183cb7029a305766d137d909f77e8941", "b7a02b02d81c830d148355c90bc309bcd66fb592", "d5737a60194ed44bfd8ae7948f9ca7806785d2dd", "c94f4506c70ea41068ed9c5a00ddf6711eb7357f", "425d099754a30565152d166d13ec1e951ff19410", "e6ce1886f5f8f700cea00bafefd093ccbbe8addf", "ca183a6e9948c680544b47d77ff51002978e3b6f", "d4ec8b091b2210ec196922b8b103722a61157d46", "920731718b6f3505cdfeefeabd789539603de18a", "1e5fc1daab8364f1d16614e9013135a115e66e2c", "cc17f1438ed7beb10c042ddbe60fb3d8a3265147", "45ca7f66156b947c7b9c45a71ad48be9a0bcda08", "65814e62fc11868188217108f158719d35696134", "23cf2d4f4944389bd0d9a9dc9ac9a1bcbce5584f", "8468bab932287b8faf6e31ef2795958745e0eb60", "fc46e1a98e70d22e5674a4aa42ede2fdede6a25a", "16f8b0fdf6f1993f6d5d714d86fd455065301474", "3bdf721ed546315c59098407798b722d20b959b2", "4d93ce63450f6e58c44b0a8ef2143593fc08df86", "ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d", "30b582e14ad7f9ab64450720be5fce0c9f998312", "dfdf3e381ab0d0b9ec10eb18291912058c34dfa7", "1c6ff880b9a83a833c6fc5fb4fc0e3a15bfb1f80", "845fc0e940e320cd177ed4a4f3543c58d6b19283", "d523a889a863fae79aec6018e3d8ce4a9ce6c04c", "e0359ad38f79c9e8f9a7321e2336eacb3fa0c6d2", "94a685598d98e782471954e2e7b6bdb8220d259a", "982f83e9d87049ccfcc2775c4b446c6a6f22d22d", "e08af4754cbc8dc41405fb11ed22d50139b3b231", "b02627d4f5706bf29788387e8d96a7a1bcc38f1f", "103af50f397108411009d5304dfbde64a3be4a42", "2ef22666df8b6f32425edb45e56ec60c9ab5b7ba", "09ab5f9e6a1d81bb6d4d196b009492f959ca5ceb", "ee446ca42d2918e8bfee95df2415b6178721347a", "ac4cdbe137274fd83a7e8e7100653f261618eb94", "97adab5a1c13e595fb833f3364c60ef972e3fe0d", "2a031c02780b7742090aea2830b421b84867e2ff", "2ee4f18ea8cd06d0adf45e0c7c771a7806c8195a", "190e95c007d434c2c2ceae18fa3efc7d4887c0d2", "71548951a4e4ff431148937b207f18bee8e0e732", "150d2a9b62030f48b5cf770e42be1b12c61d983f", "b1fa81fa03f91a788c2de2d56cd1f7befdd7cedb", "14a46855e12b03fe991b005579745fdb65b0bd91", "b5a75ed3c72d772e7dc9f771a63b3e7226695919", "47e69ef440c3408c33e2984bfe9dc89063db2fea", "3e1d177375983d4551965d69a3a45ad292f45b68", "3748e4a0979e6332ab9f0a3601ab5b8e595b7a12", "9ad34379f67d4012a7c2fe664feca9cc9fb4a4bb", "2e8f7f9e9a7f3dbbebf76d3b64b0e668d1eb62ca", "6fdc146542400c29d89f38bc262787daeed47d76", "b5ec94a953eb64b773e56658f50e728f47519288", "b59f1e454c102147125c5d94b20dfdb23896569c", "6add9f6ce1a5e1bdacacc4389364670eb451de48", "87aea1b0c3c1c8689468c8e7d89d128f15e8030a", "0254c2a26d2b045cc64e54ec5e3eeaa2beab3a10", "6a8523c14a687aaf95495316e8baa2d84a14fee2", "48f3a91c90caa2da910410c0c1350887870551e7", "2cd3f72da00e059a8ed2828809ab6b5924af4daf", "f03bdb8b8f6b59b130a296e224649a056d706246", "8fbdc4e13b06c59f7433611657e541cc84a501e2", "02d505cd72ebdfe2ccfce560969797c4b00f2bc2", "e93f2605e80278056e815b273c66f98c798b6b58", "0cb8b860dc71a16dcc08658d4abc8e0cfe6f605e", "91425c3875e4b4fa99a8716c89bca3d3b79e887f", "ad8ed237dbae0d3723a6ed8cb1bcc83474444d4e", "30384a5f1104afabb0d9117348cad3eaced9b024", "0afda9a8b63f15e19da864934bc442036922e61c", "97a3e6f9fb27c9814adb69b7b1abd30293c13828", "26c2aadc356a655e73a74e18a3739dff0740e3c0", "b92f5400bc2e9c23010c72cf15f8e5305fd9bf53", "19d7f36ef2d1c4fa4be721d3c0e3b7c195baf814", "484f75f87f526b692f74afdef0e34d2bc6937f0c", "3a6d3b711e963d85c4cd989984f28d2d27449f59", "c1c95304b30913d7aeecc549acb677c5925fc8a4", "61584c4284d223bb4d0af1ab56f3c19bdbe7329e", "759662bf0bdea0666dc10341efef685da7f2392c", "f4822fb44a4f63ea00e590cea0166558f2bbe017", "50581d1c21373c293922b39c71f45908abe5f6f0", "eb4051392fe903931d4a799685a01c87ca1c007b", "59a6042697af2cceb2e3dc7b70246b841903eae6", "ccb15e4bd9a08f7b95dc8ced01da4a9a87847f07", "d31578ae6b4154c6480d5b8703bb0ecdfecbbff9", "516e2ab11feba3634edf380c65df98fadc56a231", "5b257347fc51038043060a2f8dbc16c3973a5ab4", "b1ebb1b5ba3870e994138e64f92039460f6abecf", "8bda412e4e6c779d522d5d5c0717fdb13a0d67a5", "ca16de968d423a2a12f18304db22e078cefac622", "387abc0bdcacfa59436f0c0829d882ecefaea370", "36e6d8dcbe30e0cd8abc59ee418005df8c10371e", "c60b665f7e517bde72af85dd9f8d1f2921229cae", "9c65cc2310209db707ae0ee8f9fd0fd15306d5e5", "87dfe5b5942ed30f5be1520cf78a617d78f8078f", "1bedfac8dde869f92aa3267aa357395b87544b27", "f04bba8fa0d0c926f80225b03fe9280748cc2210", "ce2c7b058abb5ea05f70c6c9852ac41e6bdf5bcf", "b7ed1bb493f234280de624c8ed75218d8878848b", "9fcc807a61d72679ef4cb4da969906951aa19225", "5008e3ac4443554af21e140a60c69c71e992aa64", "bb8078905455ea65ac756579db37bfc8be303949", "9b8947055d5f009d2fb8a4ce058f18ddef3fce1e", "afe0471c1f27c02c633585e6b16e295050ef80fa", "648fbae3ec813a1d7d31112cbdcac79dc3ee0a59", "8dfd5cc8cd87005b04fc012b316781f49cf17437", "0ce76d73a4661688ab4e873ad6f0d8708a4b1710", "9bf6585ff7d92828390833edfc5fbf9cf7e3a14b", "53708f069a9b99b7a015de922981d6d32fbb3d6d", "eabdb30d4d8a73a5f4e6aa03eec60f82352b56e4", "87b88f5915a18b285a5c0735ffb5c1060497d537", "42b0c483d86e6ec4822a81b988debc3bb3b82735", "df26ed9d3bb4bf40c9ba2feb4ddfaea58d61a6c8", "72d11dd102eeebf081aa5363469d28b25f9b1384", "06898069ffc810f4dd71ef9aa8b63e2b67cacb8f", "4c01fd73cad04a7f247d4c01eb84667ce11cf18a", "b8db6a95791244d49583aba0905ef24ceb7f2398", "e2db859f61c1e89f1dbb29f9cbd3c6be7f9be3de", "86cb3bb7d9b662398dc2b71433a9f6c6a6392b5c", "8c4c71cf6b0d4fcaee49ac6f95acca6ffa78536e", "deb08076db79504e904b68cb027e171fb985f942", "a6e0e787c546a1d5e82861b5c851ca09e3bbfd06", "1490c5b97d5274225b54194a6aaf7b633f99fa6c", "27fc50d55d438a77efae0eb27d6b5f4a13bd1d5d", "d6becac7d442cc5d2e62ee74d81133e27148a90a", "5789ef4a98bc194ec8f89af5502688683cdfb848", "918dff83586de17fabe005b72f317d84b27fa890", "8eef998e7f7cd9e37c4e4d1dfac6e72d88b1f688", "9a3c1894123322a90e5d2e002d7ae417349bfeed", "7bf3e3c905c73fac24613b495b2d42dd84eb837f", "e731d19e9286db34e12c13e73e060e3bfe879837", "7a2341b1a587cd97432c505e05be5351d4fc357a", "20837728bc128b51b14a72ec95084b351af7578d", "3b4bd86c621668cf5c73cd811176c69cd216308c", "2c2c6102cd88d513aae990db670b03187a7956af", "185d2a2e0c718d592a712592f0d1320632d5ab75", "76f1457621aa397c424eaa095744974e1ac85c11", "163c48aafee02f9e918a6e7385f5b3312e8edfb6", "c5c488efea1d9c7b51b160b3e201c66e0668301f", "df98fcd16ab0f74e5ba31af67cf98bd319a58e43", "49f67c0f62bc1748dd32e1d86616085231e974e7", "7629584cf0c7bfd74af98dfe2aded4c2cd75f8e2", "05a6c5e6cd6b36d1a4b1696a902771c12f01edcf", "e8405bcee522774b14ea22143555537da90aa3fd", "349f6f2b0f9414e12b6095ed41c597b1b6f5a809", "f530b2542e7a93416b392f598c90b018d0f38991", "5cc91437f7a1fc3c4fdcc4b3014ea008ada60570", "7e6659ce3641a8747059ad871780490a79d1b020", "51411871ee58f696f3a0806ba2ce06932f6469d1", "7c533acbed7ce9c051e847a290dd2060915e91aa", "f5b13b310cd846921d385335842ee6aa0583331e", "06c3fee840e82aa6d347a11a637ee40c74970570", "67044a649b3cdf5f22eecf71831972a7232cac86", "8b23745a39662aff9175ac67b8fa3a551f42dea0", "2b93168004c7ad3ae4393933de2ee19e81787656", "6c052959343d41856f1597949058bff48ba3e2f7", "fca4c109329858f10625c395f17d92b75065dac2", "9b0be9f935b4b2310da7dff92067760728829d7c", "0197f9d60dc57722f990a3c00fd9a99b9640c0f2", "124bce61b6a707522f00130a7c2411fd52b5f64d", "f44e9cc731fd4512a6b208597188c6dda577fedf", "867fba4c758815f00cf3d5cebb0c2ae29fb5a77a", "51515b5fc17310594f91a0f10d4536949859efe6", "6c0feb5d0da0876a4d131106312e0664045bff1b", "5741fb895ce5a930d575eaf27703ff3af10c4646", "3e2530f00dec577319ba4b1605972977e90f6652", "b35883d5f393ddc6b5222193868f03790e8fd926", "49c877e0e4ed5ac2f9c36dfc309a2842b35191e8", "cbd5ee08569b94ad4de5b8b0e549d71b384fb253", "ea4f65b1875cba4977d3ab579223dc6dd37621ba", "c7f32168a61b6e14cb4402f2cbed9977f11dfa91", "5d57569fd5a844896b25825548355ed168d10f1e", "f35089ad75e0f2539a5ff1313e7a1643ab7bc39c", "d0c4b8bfd97912e9ba6a364e26abe54c52a89ba8", "7bef622fa31945e0f862ba2ddd9e47ddcda42f70", "5ec23f92522a9683a2f29c443209655602d5bdeb", "42f16e6d65dc96934e34361a8883dd65eeb72718", "8b68d333d0c662821657475ab950e279072b567a", "68b1be86adca20a040e487eee2acba015643f629", "27f8a58ed9075879d22844647bff806dd4ed9b5c", "6b0e91bc1928f62f61660adff0ffb5438f10968d", "9119a6353335397a8f5849899900e937dcdc05d3", "5c64e9f6fd28479a9aa56a6613aa81e54f10748d", "9a3861be25ab810338456bcb4f606b6a0115fd95", "f33d23ef116bf6450998cefd7ad8def6b3f41874", "b8cf1e5f607a5aaf09c904703a269ea7979781ad", "e039bac2eb31ddf9c736883bd0b2ca65688a6276", "9bb62020927911172430dc3d94ee61796d519236", "235d068516b98fcbf9c6f1a05bcbd9d3e97a71d5", "4727ee28b6ef402d4fbdf1baafe9d0457520ce51", "e20bd184e590dc1e95e24b2644d579fb7124bb4d", "f1ba2b5176e0d9962c5dbb328308b75fbea4a8ca", "4c90ac0b6a8f8ed3b98a58bf9e4f446dace45d52"], "father_version": ["25d7233fe32821994fd5b30a7e6209a0631c0a61", "ad77056d77e72b15c8cdda310bf29311163e11d4", "c118f2638502495392a33cbfc3f413fff86c4d93", "ab0ae07c587a5ba7dca6079f255a3b4fcf0d0582", "d291cdd942553d38d349abe5011a5ac3a99dc5d1", "0b17cb8a0308652fbe047b19a7ec0216fa25ef6c", "02cb1cd32b7fa41a7d921563e3da58417885c615", "708a28781aad47295c0ad1861903bc30a0b7ae9c", "6d503098ff9704ca6d2865844f269116f523047a", "02c46875940ff75bb393ddb2758fbe8fedc43d64", "dea06c1087bf61738fd9e92d81a4c315b2eb5d02", "350659cc07a601c488c5bda68d4ecf5da4f982ee", "1dbfbce4886f34629b6ddc6f467d342a3ffdb23e", "9dc98cb7c710be0f4552e7d40d1cb29553b330cf", "826a97fced733fe8ea60de4ed0837a6f50ed406e", "5ea05c3edef1401f3481685b11f38010f6fe76ed", "2712230640393acdd00f70640c44ae739d4103ec", "e399b21ab8ae0b937466dde5b6abcdf5f144876b", "07d13be147fd605654d8cf9e9915a41bda99103d", "413d0d5dba4a9eacdaaec5ee70147ea80aff05d5", "59640fa0df841cd6725e7b227e11d4f19a2aaf64", "383d3774367a8276db8c495ad632133fab227894", "b256703850009a3363f6514c5d4288dede40816f", "5caa5493958d40f597b4419c5027c61ce13ceaf7", "02a2e3c5d977ba1439f35a4f32aa2a6f4adf99a5", "180ed4ead46db35c3498c17184ca9062b099c1c8", "0781568a6cc7b3ccf59fa6851e96ab1636e745c2", "dd873be40013bffbe07552367326bd2b60eaa807", "6c6eb523325ab87008092d986e5b1b1236e26411", "4312765380ed5775ad2b8226ceb057fc21b9904c", "ee1c02fc7788d52f2dc094a8b05fcf8318bb3837", "a689de7884ea27ff7ffa4e51a510f44348ea2752", "83c9a329f40334816615b952b88e6374d50b6833", "e586f654a95a5c8191e1be3ac6da5a2165d6b5bf", "2ebc207348b2c9d41d0c308ccd860f15a08bbad2", "de20ce15cd7bd7def59e71aa04fb37728ec0744f", "c26e1c0d6de4152e87efdce058df827bab241d73", "02d9253846ff3920df555caac3ae76ddff9aa08a", "5fd16c90c1226df1a56c79d3a6f7c3ac58dc9c0d", "67a5327dc0c74da36711df64a42f1c0652bb1d7a", "97bed3ffbdfc6b4e338ff9357955f4bb6ddb3ff3", "84e0ce89ba6afa8cbe7ded6e7baa49353167a11f", "671a36ed86bfcab213928161e03e8c7cc0f92fd4", "af26c7247984f7753c1a84ead9186584f7ef8d51", "ffb154d0304e7c226e1495e5bf0344ff9313a29c", "db66b74249c0c8da50f64f864701ea17eaa3675b", "ab52436c91af36b1e8c9b30267261d1111d0a449", "c03bbe80f9f45ae82444281d77e881afc9303980", "c5b35af17b5df720529029c322a9fa64a486f93c", "57b98ea6cb9939d928b7e27c32a9d21919bef86d", "e543c75d808e6945be3ada5c8a54f5b92f2a4ef4", "c2e24e2af07f40dfb551df1e1b1a57dfe54a17c5", "0e6f70518d080e6d65ca385b16566610ac0ea001", "dc837e402c57b6136d15f482cca11a0f674ecb91", "4609178acb7ca1ef634ed59ed58c5b92c1601037", "0a5b39b0ac8fb2d63134c333924c3901de2446b8", "5a69da0b6a3f087decf2a671205b584c92c79c7f", "a985135a59f7491364ab9ee16462179c34930c50", "35c8645dc57b0ef269a354d8e9d52097cd724319", "6006bb78560d118b5ce493acaf7f1f56019a3d24", "dd16f0fc31f1b6dd107f9b97fb763a696c18d0a1", "ffb0ed52ccde6e8350b07af9ea222536d2932c63", "37c098d55911f55d77a5a72dfafd9b0976bcf257", "6f717b8384fd360d7cd31cc9e68172701c3c509c", "47fcfb19fccdb262b8624cc2217341948d420063", "0b1b6bb54a03643674548e370ecf366f722f5224", "ece6a9fce38df306991a4568764ba8fb86ced022", "17e28c96db13e63247c44126c28a57dd69affb96", "159e13370d0c4ad062bf5966960448577d36f245", "6a2b57138e2a717474295cafad8d6d4559d36510", "553a475a2c64cf1058619db32739ae0370aec30b", "a0552a16d813ead98fe73737fb001db336650251", "68bd25a6a5b1fd4038937570687453672340654a", "7e042165a6d136b3c93e99f744c6e09626be67c3", "184630d9e4ee9d2b0305647329a3664783f81927", "44c65c164d303cdfa24bf71cc4382a6c6a8aa355", "fe67d047ff6b9c1b866585d0f913e83c20685295", "869ff91bf27d0357d783eef5ba18ff812f0d2c0d", "f6cb899ce0787848eb86b32c82b741110774b6ed", "04a522082558bbb1e342175798ac6a4c8ad9a201", "5298761dd96a84f05eb6d7a3fe535e396806a74a", "288945506177cba92ae7594749879dae1137596a", "7ca9173c22bc62844ce3f48f15a1316438e2d7bf", "cc4e153e34aab8e05878164d87dd44c328c3eda5", "f905d59ac9c3c1ad57c755a1abb29c4fb2d6b7fa", "6cef9dbd52319ffda0223b8d9bd5b33e81ce4e9c", "99c1047b23af62d17b41bda03947a54f581b21c8", "05070de40064945f83e11d464e43027a7592b366", "c463a625f0f6313196072a5faf62522722b39943", "ff3384c101bcfd686eb0b2e9892d8e6d758d1ea7", "4f75f2f58578915b42b6bb907c2779127cf03707", "2668c4682eae445534b869216ed019c032b11fd1", "549095acfe61a5050181bcb7fe8996767a4bd827", "5cd74aaba0062c8c57ba33ad80b5fee64bb3789a", "859e6a18ff6eb6333136f3c59e586dbdc8b4f849", "fc17191f9213131d1d7d3d372caf984feaed84a9", "9b55062ddd3cc9d81517e24bbcd8db5d514cae37", "2e620fa57440c97815ede15da244631b006c5446", "3afe00c4b4b013861ed66a6d4af68c2d6084f0f4", "d7354eceabdefbf5b1a14bc648786aa8535e4ff6", "6665817e8289a637ae39cc22d6df8a5145e95a36", "1bcf6927a3cbbb2bd49bc3583bf0584b88bc1728", "a0266bc0b14c9051608d20223bdf4c521c1f89e2", "86e8569877f5c82d8beed61d1f6ce2184b0153c7", "25b0a46ada0f8a5a1c3b3dad109ff2b0b3bb12f4", "fb04caeeadfea0ba966bcfe633aa5ec3f8046cbf", "0b33461e35fa3a769ce23a9812a80acdc281f62c", "0910c1e69ee2b0587f898cb292d4e9f8d9338e28", "9be698db4a8fa560cfae23795d629b018ad009cf", "f11bf2d26ccd07e72805b789b33d855e223b1ed7", "a59c18dba735563ebaf1792c4e787552e72374f1", "6c9726f5611c276cd51561c73633a5dc4288838e", "ce7daa94fa8f8eebc6cf40422c56f58d93b24446", "0604fc7487cd2108d6c29643c578bdece8f27df3", "d7d9d2a7a1cc8df3c4be496bf0398d97b5c4c5ac", "c040e3797e30f4b52df1a10637259b2e08f1c0de", "4ea2c2a7d0ae4d62ab39f74b1c9186f605d2de87", "3f02dd5fe0748fb8ab9b3f3682b96b6c8e6d7815", "fd493c07219a8acb13102ab34407d99f7ee32dee", "12857901e511f32395cbe2722f55af93b81f01aa", "9c2457597fbfe89783f4a9065bab40ad149521a1", "cce0fcd64cb47d6a62d2bfea076bdb42eb2c44b3", "1aa8696b21f3fcf060c5fd8c5d50144e3e0577cd", "63572396cc4006bf2f12667c9b3b0c7f23e6caf5", "cb610bf7038cafd462cece603aae46595065f46c", "50b3d3d70b3fcb1423650beedb0d175cd1b87a3b", "0983219ee941fb261d5729c0eadd7c2803f905a8", "0983219ee941fb261d5729c0eadd7c2803f905a8", "08125e9287e577e167ca1186eeff9e14c51250c4", "0ec824f958a3d6a5203efc583486d477512f5322", "842f351c4b2b3b0a90d9f3bcf164d8fd19aede6c", "7b9fb9df9521ac6c5b60662bda6a22baf2aea058", "26d0006317e4056343cbb490adcc055addb0c002", "f39b8fdfc5b8d2c1502ac4bfc9601b633284ee07", "f9a3d2db00d29aa3de03da606b1eaeb640947731", "a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76", "20dd9afe0aa02f92cb642bc0c88f920799e6a7c5", "4754a22f265ad638d5484d12219515bd663272d0", "f5349cd25c1338473c3cc11f18f389fef3882753", "c35ebc2ce88fa26e1e36fd1eb806c2206ea98f00", "c7ae433fc9d5bb20115d693743fd2535fd707c4f", "57aad211bb85221191216a442812fe1fa5b8bcbb", "c013facb2aa0af03206fd1af2d8314f6a414ec98", "bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6", "509e35403c4c18b873e83beb30bc49e6d7b41aa1", "154c0bd33d54d809e40f03987d650c9cf6dca62d", "b6c35cd58a1e64c6895b73fa15771f0eb366af0b", "8859456e7c13e83341641fafc8e6f79651161b0f", "29ce12be89584ca1ad671408ecbe0f6c343f9382", "a2aab02c5c021ab09233b8abcc83b3deeab8f005", "31d8fbf9934778160de52837ef311f0d26efbbf8", "95295fd11d11ed8b9943a4604d9f562c2b95d958", "638f61464929e2dd61a0f716c5213f1f9172b45b", "e8120035bb4b7472bf855ad33e8fda38c94fbbbc", "ebe9f053ab2431f8f22f6d892cffadef4b10479c", "35023b810b1b769daa2ca191ddb4cfcea33f077f", "3338a48b6abb9a0641dc3c2c169bb59b9960dc15", "32a8f2490a92a12dca4f4c6c51ceccec1f7135bb", "a4c16e8b45261e23e1c35d5fdce9b57357b16d1f", "c5848c0b57ad0f3f09acadff4be80c19d0c7d95f", "9b268e4467753f31eb6dfeb4001e76e32b01f5a3", "a9228269b4d6e7b74a6354f179babe723c00f387", "ba5acdf7cf1eef418cfdb463991ff76e7f3ded28", "401a6a43b41a75ae4a227f141ab7a75b2e37f3a1", "b0aeeda0b5639a0553f0444e85926e4119cf16e0", "2bb4771a1835b8a145c857b63bb41ae56e5e6767", "4352fa034ab6dd0c7ce117a07620426ddb00a50d", "7839f29c2559fa100851777a79774e85f0dadeaf", "3d3a9fa2eba286d8408ea933a28a0dcce6d7f7d1", "51829aa27bf05c2c84b6ca90225c61c55c675056", "ce48fa81e56d21490eab540e3f51d7e8dce0b784", "8f196358f5a494f974a741b5a982f96f03171223", "9f8b438b370a688cd393983abf29aa00344795a4", "978ed86a76b3c47e8247f6691586b994bcf13dbc", "45d86df69be98dc64a455e397ae6c492f803771e", "94c2d2c6c53cef4785413575ca445a048414641e", "882330dad166a44b2498c7c13dcab61d853cecdd", "1db3e7924216995afc2e042515938b5c93a7416a", "8557c775d526e603fa6f2de0fa4f3d840459083e", "d51292d5a4a788b1275eb9ad55cf612e68640bbf", "1c9b92a5d8699e93df11c222566f797919db3f97", "21a19670ce07439d616a7a38a9907560eaa6a25d", "04cdfd9c98f6291d57d295767863f0226a6f97b3", "ee9a8f34f061cd15c091943903fdf8c6e173523a", "fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1", "9ee53e90374a2253624b2d97860d928fde6c81c0", "9afcdd8a24ee225e21c461144b524b3fc55c4033", "91a844c19e6d52877c65b8870d8ffc86acb0d80b", "c0b196bf9319cda967fa33972d31e2da862966ec", "be10b4c6b7a4909ec4eff8a2377a1f1b2d4aa63e", "fbbb52dcc92e964b95f389684e87b363f6499173", "6b7e7187bd074d3f2df9b04e17fa01e7592f295c", "8c92236afd1f02f7ac574bb3df8d92c301067240", "7e5464ef25b98ea8f1988040d3623b93129ff1f4", "d77a85ab9ec33d45bfaecc08daffcc015a2c1c8b", "56a879c866f7039321331d1f4305619adba527cb", "fb66c4219616e45fd19a8ccb5e93130d77ef96a3", "05bf8e59221197d8e1b8b04bace4ff5cc34e7336", "e390a0f7070733c9aa7e16f40e56e5a229dfcd97", "ab8f0c607e2c708c2c0bc5a48afc97967aca4ad1", "6585c73bd39373a7ec3613f0bd77e376b118db5f", "b71955639ab617e0a4115b1439c8b9982227a018", "b7a02b02d81c830d148355c90bc309bcd66fb592", "0aecc68d7249454545e6729b1f9e1d6735dbc0e5", "c94f4506c70ea41068ed9c5a00ddf6711eb7357f", "425d099754a30565152d166d13ec1e951ff19410", "e6ce1886f5f8f700cea00bafefd093ccbbe8addf", "be2505a424c177c372f7c8a38afbc0cba5cf4c24", "d4ec8b091b2210ec196922b8b103722a61157d46", "c905b826624e1c84b468e7384c44454bfbe7c65b", "3cff1b24045cb6377898539be96b277b2116073b", "6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd", "bd7a14b0b5830a06f48337a3f02af308300abefd", "77b81781c7623a40501f92521a29077109cd38f7", "c17c5a9b58d1d0ac0cf77dba0f5b5011a445c610", "82d0fdbec0cb93ff770dab55931029f4140db54e", "c9ece6ba93b43c7b7bcd003d652017e9c72a52da", "f981ab50d06bf4579d51c69f6feb25b1468c3d6c", "d00bb052f3c46d528db507607898530886de0f3b", "251cda60e67cf6a0175ea8cd6e94ea2908794a62", "ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d", "5d5941f9c5a882ac98a3312bd411bde00a1f425f", "5f47cccea9a8b18a2bb3f76a8ba219dd85ff47cc", "1c6ff880b9a83a833c6fc5fb4fc0e3a15bfb1f80", "488284d6de260e31d14dcd80d8ef7df7a4fb2c22", "a102c17638ec586de3d6930c8ef794c751d157d6", "3140104fbf7b9a95235771cc10a4188cfdeea9ae", "cb0c7ee89c5a3400977f6d3da7644b21db2e0d16", "982f83e9d87049ccfcc2775c4b446c6a6f22d22d", "6f0aee697724288e42823393d700ea770fd69da5", "b02627d4f5706bf29788387e8d96a7a1bcc38f1f", "6542fdb264fdcb205af3318f430228cffb191290", "2ef22666df8b6f32425edb45e56ec60c9ab5b7ba", "ede7731ed9764c081460c19c9fec3b1159d43264", "ee446ca42d2918e8bfee95df2415b6178721347a", "1d0f8167ad78315676dc641db4d5367a68676cda", "244e5901661ad1542a0af9297dab0ccca32d317f", "3cd00c844e86af5ad55308b4d9662f1c4addd655", "9ae3c2d66b23c157c090154b8b9bca839969ef30", "4ccf2a3077e701e089cc8d26c831ec493319b37a", "f47f05e6fd774a54461105caadeb72dff6ba31a0", "10925e44f80f335423f128b107ec176b7436a20b", "8a02fce17b86eae8aa55b794a0338946fd30b32d", "42959168b3d50d659ecb4604a1be1fefec4f1cec", "b5a75ed3c72d772e7dc9f771a63b3e7226695919", "890b9ef5b951c00566f3e0dcb4be09ace3b6891c", "c7b2e2f74f77e165d68d51f240dd2273c2efe09c", "680c8b527ea94df6161aa9a61f00563338221e64", "82cbc6d68319d3a5b032b44b97ad6b6c0f9e3831", "8ad64685f06ad4697d317f3c2eeb7e348cc3f23f", "8bc8387f63053ac03b609277093a06019c7b18b3", "b5ec94a953eb64b773e56658f50e728f47519288", "141f800c09d66898ce04c7684330e1e9dc8a31ab", "6add9f6ce1a5e1bdacacc4389364670eb451de48", "c2a6625cfe1fe447d85b83eea748caa4bd482ae5", "0254c2a26d2b045cc64e54ec5e3eeaa2beab3a10", "7f916bb77b21ff8497ea84806729166a1b10d4fd", "48f3a91c90caa2da910410c0c1350887870551e7", "e477c78bf7288d6c1e2d40c12b4cebe8d403bef6", "9309a9e3bf3d8b68397be17896a60373f7652367", "661b786286ff38337a5bde4f1c994a82eb2028cf", "570c1816b6070b7205dc244480d92629ae522111", "6840fcbcaaf1dda6b1eb387b1b7811599a69eaa5", "0cb8b860dc71a16dcc08658d4abc8e0cfe6f605e", "d8750fdcd8a32d0e6caaa2919414a479acbd1bb6", "84b82ec2f576ef70ee4d6aa1bf97da9d5ea9e148", "28e30013fcb3b8a307a7f611c9b6aab52be0220f", "136dd75b214b44ee605b08bdd70111d9f3cb41fa", "f3740144c8c9554dfd03f30ac1b751daac58dfb6", "72fb1521916c40fc8ae708729e72954f8a463e9f", "e37805a6d664e86d787b05b06e7f157806f91248", "1ae5c1e686de4898773c6280c5098dd2856fce52", "484f75f87f526b692f74afdef0e34d2bc6937f0c", "c016b862d5e5ab1aa6de18fa6cdc8fcdf05873bd", "c7e904cc844e4a956be44ae2290c91fbcd0def6c", "e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a", "050d1f8e2b2dcd65567a965b295c1d51fb110e4a", "f4822fb44a4f63ea00e590cea0166558f2bbe017", "50581d1c21373c293922b39c71f45908abe5f6f0", "eb4051392fe903931d4a799685a01c87ca1c007b", "391eaecf4727c8be44690c38d10588c4c41f3fe9", "ccb15e4bd9a08f7b95dc8ced01da4a9a87847f07", "59d178e33246fd7cb82bdc8fee88fb9fe9c49815", "028815a0a472c6520463089a408bc600874601a9", "efd485281e69b997844450ac214e1feeed154991", "9d6b656e0526d6d2d85c0223a1f5f70544766298", "8bda412e4e6c779d522d5d5c0717fdb13a0d67a5", "53664a7f17492bd0c3c4728df61679147907dd18", "387abc0bdcacfa59436f0c0829d882ecefaea370", "36e6d8dcbe30e0cd8abc59ee418005df8c10371e", "4957f9a2eb591d1d7b4fe0262aa02901fa0062ac", "a56b012ab15d92936471186d74e48d99b60fcbb6", "714df3c468383be61d316b63f20bce327d0c55af", "1bedfac8dde869f92aa3267aa357395b87544b27", "5c1ab7f8f8b48d3701dd6952f931aea891a3ade8", "ce2c7b058abb5ea05f70c6c9852ac41e6bdf5bcf", "a89b84d8dda61a39417d7338ca3d98ad8e65239a", "6fd7e4f57dae3653234825a639bcbfda4c6a0110", "8996e8059681c083744df50c7ad9e007eda1f648", "c45600e563daf23ed3bf4a2881cdf1b7771e9dde", "6634fe165d3729e2fcdf5309d815a8ea2906f6a8", "aa3cd302a3f95412d0af496648e82643184aa208", "648fbae3ec813a1d7d31112cbdcac79dc3ee0a59", "6469a4aaa26801fe824290c100737f237fcf69b6", "0ce76d73a4661688ab4e873ad6f0d8708a4b1710", "9bf6585ff7d92828390833edfc5fbf9cf7e3a14b", "53708f069a9b99b7a015de922981d6d32fbb3d6d", "0551b64287d1437ac3d59cf79d8a8a9f60af375b", "c489adf4671b41765698d167e13960d998190c5e", "42b0c483d86e6ec4822a81b988debc3bb3b82735", "df26ed9d3bb4bf40c9ba2feb4ddfaea58d61a6c8", "72d11dd102eeebf081aa5363469d28b25f9b1384", "43a8b0e3475a2cc4e84930de8ebde4820977c199", "4c01fd73cad04a7f247d4c01eb84667ce11cf18a", "490833fc8ae416f1dcd35e3ba7a3f2ca4332158d", "edd8d64dbb0b5ff3b65973b362e400e7aea95ddb", "1dac43abca1e8f7929139d987fc37771bdaf1d9f", "47151c2d678d391e929166687b75139fa57ad70e", "deb08076db79504e904b68cb027e171fb985f942", "d7366b4214c87b5316aae01c2074093ad2486880", "18cb1913184741ed8674dc111b1c6db6013e64cb", "45e8353e5f22c4ec2240f22e171e424461f26ac3", "d6becac7d442cc5d2e62ee74d81133e27148a90a", "5789ef4a98bc194ec8f89af5502688683cdfb848", "918dff83586de17fabe005b72f317d84b27fa890", "8eef998e7f7cd9e37c4e4d1dfac6e72d88b1f688", "89046e7f9f9511de87d03dbd9284329b0c3ce22f", "03664e04288f62931716f88759d3faeef1fcca2b", "7f0bc5afb99f9f8d36893c790ab5c8747fad0cef", "e8fd68acaede56ab13ec72ade1b51c8ce97b0518", "31179c07ae8f8a65d6dd770b2908c2f313aa5f36", "58f3bb8ea1e66c3c2134c885af7b8ad8df7aadc7", "2e1c91bbb9c045010c91bbfe88a9e5dce0a44313", "32beee6de35ef77d1d2018e699cbca13a778ebf0", "76f1457621aa397c424eaa095744974e1ac85c11", "163c48aafee02f9e918a6e7385f5b3312e8edfb6", "c5c488efea1d9c7b51b160b3e201c66e0668301f", "2a45dd5c0bdfb2acd7ab398616aec525d2dac444", "49f67c0f62bc1748dd32e1d86616085231e974e7", "7629584cf0c7bfd74af98dfe2aded4c2cd75f8e2", "3beaaaff52598e849659281fed35dc29a221fac4", "9266b99f8be2412446edf9fcea47b047aab86b5d", "4d711f9f8ee183b7d0a3479f8b1f156f61caef5f", "c0fe03bcd4190d756ade1466f8a8d713a82b7124", "16f9ffd933ec559bb0132dba80e5a14a920f3ca2", "7e6659ce3641a8747059ad871780490a79d1b020", "51411871ee58f696f3a0806ba2ce06932f6469d1", "c913489bebe76fb0b6b430010c69b66164b52b4d", "084e49fb2dad7b5c0ec8ca3367247f5d7163caa6", "64c7bfa1aa2f096a6e4d17628045d1023ca7afe2", "95e433bdaf6534094b0e5b46409a3d5494fd77e2", "8b23745a39662aff9175ac67b8fa3a551f42dea0", "2b93168004c7ad3ae4393933de2ee19e81787656", "6c052959343d41856f1597949058bff48ba3e2f7", "5828a2260b77236f0e6d4531609defd04676de23", "d17272600a4a5a6e03e108a496d3f4d936e54956", "c6a58b29e39ece897918927ee611317c95f447f1", "124bce61b6a707522f00130a7c2411fd52b5f64d", "f44e9cc731fd4512a6b208597188c6dda577fedf", "7f8eda0d7c1d2ba78c8d057b31c1c0fac9db126d", "51515b5fc17310594f91a0f10d4536949859efe6", "3d58d6b7c1235722366a641759a02bd9c6625c21", "5741fb895ce5a930d575eaf27703ff3af10c4646", "33a24eadd5017ee1b165acc3c5baad06c9c73d47", "bf5d2271ed9765aaa762f47518b8950d04e1d1b9", "49c877e0e4ed5ac2f9c36dfc309a2842b35191e8", "42025a0087d0b829aabb32c5cb15e90c6bb76667", "ea4f65b1875cba4977d3ab579223dc6dd37621ba", "64f7e002a59b431b82746241b1bcc214f27ea835", "d71c19e5257475ac9cbd3bc746d24036dd1108d7", "552472f747583ca0c217b6f0ca8819c58556e540", "712705c67a467158c15930fe5b74021f0fb302a2", "c49e0910440fdaeaa7ffc913cb9f459d637367ea", "e148102556ecad584514a375b1e977b7296f848d", "490333baa83c18d114276ec5b64554fac1bc56a3", "8b68d333d0c662821657475ab950e279072b567a", "68b1be86adca20a040e487eee2acba015643f629", "75ed16ff7d0a0046765ab7dc181762f91d8c8833", "57b8d5a74c3116421248a32dbe05ae3cd7d19f75", "589b57d5859555d309914389cd4772e899b4cb86", "be2a67fab538548f580477d8a6aca41297fe083c", "bbc3bae1efbd30c3c0b496c9be8d5078fbbfc623", "78b2b769a34e53cd3ccc69b575f026be2fb30615", "a99dca76dc81e4a7c45a5d2d7d875b040f51abdc", "e039bac2eb31ddf9c736883bd0b2ca65688a6276", "e3adfd619abae820b90951f383ec7a271a62c0b0", "0baa9fcb9ddf853e9bbf8b71c5f1167051c366e0", "db178d7631170ba434558b5d07aeeffb846278a3", "4776db7d5c6b75480f1ccf8d756292181587b9b5", "041e93387a67a7d15330592077b08577b2961a2e", "7fb1d7fcc41a442898d84746ea116c79f93959d4", "bb8e585f1a1f07528cb7030d7ea95924243fc8ec"], "commit": ["LSC: Fix or suppress ignored return values from instance methods on an Object.", "Fix publish-latest-docs script.", "Fix Javadoc that fails when running with Java 9+.", "Fix publish-snapshot action by passing secrets as env variables.", "Fix publish-snapshot action.", "Fix publish-snapshot action path.", "fix workflow: add missing shell param.", "fix workflow.", "Fix JDK17+ assistedinject private lookup behavior by catching InaccessibleObjectException (as Throwable) when attempting to reflect on private JDK internals.", "Fix tests that break with Java 17 base on suggestions from @mcculls https://github.com/google/guice/issues/1536#issuecomment-1017894441", "fix java-version property for publish workflow.", "Fix bug in UriEncoder that interpreted and stripped numeric prefixes.", "Demonstrate a bug in UriEncoder.", "Throw an error if there is no `MapKey` annotation on `@IntoMap` dagger provider methods.", "Fixing javadoc, map bindings were actually implemented some time ago", "Add an error when an injected constructor parameter's binding annotation's @Target does not include AnnotationTarget.PARAMETER.", "Fix quadratic behavior of AbstractProcessor.process() observed in profiles. The received lists are always ArrayList, for which removing items one-by-one from the left is inefficient.", "Fix formatting of source with module stack. Add NullInjectedIntoNonNullable tests.", "Fix bash script for publishing latest api docs.", "Clarify wording of the MissingConstructor Guice error message", "Fix `ServletConfig.getInitParameterNames` return type.", "Fix release page link.", "Fix BoundFieldModuleTest to run with Java 15.", "Remove obsolete error message flag and clean up dead code.", "Enable the new Guice error messages.", "Enable the new Guice error messages.", "Strip embedded class name legend in the case that one Guice error is included in another Guice error.", "Fix test when bytecode generation is disabled.", "Remove after_failure stanza.  It breaks Travis integration and it doesn't seem to work anyway.  Also fix ant version.", "Fix the command used to print out failed tests results.", "Support custom formatting for CHILD_BINDING_ALREADY_SET error.", "Add custom formatting for duplicate element error in Multibinder.", "Minor changes to error formatting.", "Add custom formatting to duplicate key in MapBinder error.", "Omit redundant prefixes in error messages since the id already identifies the error.", "Make error identifier optional, since it's not very useful to print out `[Guice/Other]`.", "Omit prepositions from the first source in error messages.", "Apply formatting to the error message.", "Throw error if no. of type parameters passed to ParameterizedTypeImpl are less than actual generic params for a class.", "Only display learn more link for documented error id.", "Implement MissingConstructor error in the new format.", "Fix and suppress more javac warnings in Guice code.", "Fix or suppress more javac warnings in Guice.", "Fix or suppress some unchecked/rawtypes javac warnings in Guice code.", "Fix some unchecked and rawtypes warnings in Guice code.", "Fix some unchecked and rawtypes warnings in Guice code.", "Fix some unchecked and rawtypes warnings in Guice code.", "Allow custom error to include their own id and learn more links.", "Fix @RestrictedBindingSource bug where scanner-installed modules don't inherit permits.", "Change ErrorDetail subclass to only format the part of error that needs customization.", "Implement custom error formatting for BINDING_ALREADY_SET errors.", "Implement missing implementation error in the new format.", "Copy dagger's package name compressor code to Guice and use it to compress packages in Guice error message.", "Add API to allow custom error message formatting.", "Add a new flag to control whether to enable the new error message format.", "Fix order-dependent private module scanner inheritance.", "Fix some issues with ModuleAnnotatedMethodScanner.", "Fix incorrect error id.", "Fix typo", "Report errors to MetricsRecorder when exceptions are thrown from Guice.", "Add ErrorId enum to identify different types of Guice errors.", "Remove unused method from Errors.", "Multibinder: Fix documentation grammar", "add & fix @since tags, to prepare for new open-source release.", "rm hack around cglib bug & update to version that has the fix.", "Change the error message for missingConstructor() to be more similar to missingImplementation() (which is far more often the actual issue).", "Clarify the docs on Key.getAnnotation(), that it cannot be used to check whether an annotation is present on the key or not. Fix a few unnecessary usages of Key.getAnnotation(), and notably one erroneous usage (Errors.java) that would cause Guice to suggest the user forgot an annotation on an annotated binding.", "Fix support for DaggerAdapter's unsupported annotations checker for modules that are passed as class literals.", "Fix typo in Binder javadoc.", "Fix a subtle bug in Guice eager singleton evaluation. Add a test.", "Fix typo", "Fix @ProvidesIntoSet reference", "Fix Javadoc breakage under JDK11 canary", "Fix the JDK11 opensource build for Guice.  This was failing by chance in the testlib tests because some of the tests were trying to create a JIT binding for Integer\"", "Bump asm to 6.2.1, cglib to 3.2.8.  The cglib bump should fix the JDK11 test failure, and the asm bump should provide better JDK11 compatibility in general.", "Fix Javadoc styling issues in SingletonScope.java.", "Fix typo in pom.xml.", "Bump version of maven-bundle-plugin; otherwise we're getting odd errors.", "Refactor Errors.checkForNull to InternalProvisionException", "Calculate dependency information for errors as errors propagate instead of eagerly as provisions are executed.", "Rename Errors.format(String heading, Collection<Message> messages) to Errors.formatMessages so it is no longer an overload of the other format method", "Remove (most) accumulation of multiple errors during provisioning", "Fix the outdated link to google's java style guide", "minor documentation fix on @Named annotation.", "Suppress intentional use of @Provides method outside of modules before turning on a compile error", "Fix inappropriate @SuppressWarnings.", "Fix issues reported by errorprone", "Fix operator precedence error in UriEncoder$ByteAccumulator.ensureCapacity", "Fix javadoc typo for TypeLiteral class.", "Changed suppress warnings message to suppress Guice annotation processor error that is caused by multiple constructors annotated with @Inject to make it more clear/specific.", "Fix https://github.com/google/guice/issues/1032 by making SingletonScope handle the Injector thread local not being set.", "Fix guice error messages that propagate across scope applications to remove redundant sources.", "Enable better guice error messages for a missing binding.", "When formatting method/constructor dependencies for error messages print the 'ordinal' of the parameter rather than the index.", "roll back to cglib 3.2.0.  3.2.1+ is too buggy right now.", "Fix tests that intend to check that an error is thrown but don't.", "Fixed - TODO(cgruber): Use com.google.common.testing.GcFinalization and a countdown latch to un-flake.", "Fixed - TODO(cgruber): Use com.google.common.testing.GcFinalization and a countdown latch to un-flake.", "Fix the visibility predicates that are used to decide whether or not to use FastClass in guice.", "fixed Typo in JavaDoc of TypeListener#hear", "Fix missing fail() assertions in BoundFieldModuleTest found by ErrorProne. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105097289", "Fix typo in documentation of ProvidesIntoMap. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103640296", "Bug: CycleDetectingLockFactory could dead lock.", "Reduce the amount of stack trace spam in error message.  If all the errors have the same cause, don't list them individually and instead use as the Throwable's cause.  If some (but not all) errors are duplicates, elide the duplicate stack traces and point to the error # it's the same as.", "Also fix usages of a couple of @Beta APIs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91720693", "Fix ModuleAnnotatedMethodScanners so that they scan modules installed in binders created from skipSources or withSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89146131", "s/Set/Optional and fix grammar. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86803793", "Fix https://github.com/google/guice/issues/904 -- assistedinject factory method scanning did not ignore synthetic methods created by java8, leading to errors when the factory interface extended from a superinterface that had generics. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86628771", "Fix ElementSource attribution for ModuleAnnotatedMethodScanner bindings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86029834", "Implement my old patch for issue #366, with some tweaks.  This does the following: * Fixes @Provides injection so that parameters are checked for nullability. By default this will error.  The flag is named: guice_check_nullable_provides_params and can be set to ERROR, WARNING or IGNORE. * Adds InjectionPoint.forMethod to build an InjectionPoint off an arbitrary method. * Adds Binder.getProvider(Dependency) to a get a Provider for a given dependency (with all its nullability & injection points maintained). * Update ProviderLookup to accept a Dependency in addition to a Key.", "Fix linked binding behavior with requireExplicitBindings() in the parent.", "Better error message checks in JitBindingsTest.", "Fix https://github.com/google/guice/issues/888.", "Fix for https://github.com/google/guice/issues/884 -- don't let half-initialized objects leak out to ProvisionListeners.  Throw ProvisionException if there's any new errors during provision. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81455693", "Fix stupid typos.", "Fix RequestDispatcherRequestWrapper inconsistency between `getRequestURI` and `getRequestURL`", "Miscellaneous build improvements:  * consolidate common versions in dependencyManagement section  * clean up OSGi metadata (remove asm/cglib imports, fix version range to account for Guava's versioning scheme)  * update jarjar-maven-plugin to 1.9 (makes sure manifest is first entry in final jar)  * attach correct pre-jarjar'd classes  * fix old references to Java5  * remove out-of-date asm:asm exclusion  * fix versions of mini/service extensions", "fix typo in javadoc", "Fix the compareBuilds script (compares mvn vs ant generated jars) & add it to travis (before publishing snapshots).  Comment out comparing the noaop builds since they're different right now, and update to asm 5.0.3 (which was a source of a difference).", "Fix typo in JavaDoc for c.g.inject.internal.MoreTypes#getGenericSupertype ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72545394", "Guice: Fix for issue 295 (@ProvidedBy doesn't work with enums) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72100195", "Fix spacing for Struts2GuicePluginModule", "Cleanup javadocs.  This makes the following changes:   1) Stop using doclava.  It has too many bugs (like dropping annotations).   2) Tell javadoc not to doclint.  Java8 does it and errs if it fails.   3) Link to appropriate third parties from javadoc.   4) Split extensions into separate groups in ant javadoc.   5) Cleanup code that had javadoc warnings.", "Fix issue 597 -- Adds copyright header.", "Fix issue 597 -- JUnit 3 style", "Fix last flaky test (that I know of).  The problem was we were asserting that something existed in a child injector (through inference, by checking it was in the parent blacklist), but if GC ran it could have been ejected from the parent blacklist (since the child injector isn't strongly referenced anywhere).", "Fix issue 597 -- entity manager is properly removed even if close operation fails + unit test.", "Fix Travis maven build to download from central", "More flake fixing: Refactor WeakKeySetUtils into one spot, make everything use it, loop 10 times sleeping a second each before relying on things that were GC'd. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70898677", "Fix equal comparison against generated/system annotations.  This should never happen in practice, but some things generate annotations based on user input in order to compare against Guice bindings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70843442", "More flake fixing: don't assume methods come in a certain order.  Super strange that this one never really flaked for us.  (It immediately flaked after I added runs_per_test..) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70836577", "fix jdiff ant target", "Detect overrides of @Provides method and add an error for each one.", "Fix for build break from servlets patch", "Ignore synthetic/bridge methods when determining if a method should be injected.  This broke injections for different reasons before & after java8, but the fix is the same for both.", "Update provision & creation exception messages.  The previous messages caused misdiagnosis, as users think There was a Guice error\" when there is an error in user code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66120881\"", "Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245", "Make WeakKeySet less susceptible to programming errors by making the backingMap key a concrete type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65307015", "Fix issue 379 -- strip the query off the URI when checking to see if the pattern matches.  (We don't need to strip the fragment off because fragments aren't sent to servers.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996893", "Fix external issue 755.  Grapher config was wrong. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64724255", "Fix external issue 372 -- only scrub the pathInfo if the servletPath actually began it (not if it just happens to be longer than the servlet path). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64723867", "Suppress compiler errors reported by an error-prone checker ([]) for tests.", "The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.", "Fix MapBinder's duplicate key error message so that more than one binding with the same source gets listed twice.  This was causing a problem with the tests that turned stack traces off, because the two different bindings line numbers were both changed to Unknown Source\"", "Fix up API diffs upload script.", "Fix uploadJavadocs.sh script to work with git.", "Fix .gitignore to account for extensions.", "Update the opensource jars to asm 5.0, fix up the POMs & ant scripts. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63496902", "Update MapBinder so it fails on duplicate bindings with a more descriptive error message, including all the keys that had duplicates and where the duplicate bindings were bound.  Example error message that has 'a' bound twice and 'b' bound twice:", "Revert parts of the .gitignore fix related to ant.", "A Message should have only one source but as it is used in Errors, currently it can have multiple sources. The Message objects is returned from two public methods(Elements#getElements() and Errors#getMessages()) that make any changes in its method declarations difficult. As the first step, I am going to remove all calls to the Message constructor that receives multiple sources from []. So, the only calls will be from Errors that I will deal with separately. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57979416", "Fix issue 723 -- minor optimizations to TypeConverterBindingProcessor. Description in the bug describes this best: TypeConverterBindingProcessor has two responsibilities: 1) prepare built-in type converters for primitives, enums, classes, etc. and 2) process TypeConverter bindings and register them with the containing injector.", "fix jdiff to point to correct javadoc location, and fix javadoc to have --since for 3.0.", "Fix no_aop build (make it easier to replace the cglib tokens in the ant build files).", "Update to asm 4.2, cglib 3.1.  Fix .gitignore to only ignore /build, not every dir named 'build'.", "Re-committed the rolled back CL, after fixing internal projects.", "Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796", "Fix issue 734 -- MapBinder doesn't allow injection of Map<K, javax.inject.Provider<V>>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798745", "Fix issue 720 -- minor build fixes, from the issue: * Add macros to append no_aop to the Bundle-(Symbolic)Name to help disambiguate these bundles in OSGi * Fix some broken links in the Maven POM (The API version was already incremented.)", "Fix issue 748 -- add a protected method in PrivateModule for binding provision listeners.  Patch provided by Stuart McCulloch, thanks! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57764090", "Fix typo, alertnative -> alternative.  (Issue 777.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57755721", "Update Guice's maven build system to run the unit tests in three configurations, representing the three different values for stack-trace inclusion in error messages.  Additionally, modify the open-source InternalFlags to log a warning if a value is passed to the flag that does not correspond to the Enum.", "Make named classes for anonymous Modules so they appear prettier (and useful) in error messages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54796862", "Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)", "Because error-prone treats more than one scope annotation on a class as a compile-time error, existing builds that upgrade to error prone will fail.  To support that, given that these are tests of the run-time version of the failure, add a supporession to the usages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51282197 MOE_MIGRATED_REVID=51282207", "Fix Inject documentation, as method injection happens after field injection. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50901673", "Doing a cleanup before we can make having @javax.inject.Inject on an abstract method a compile error. I am suppressing the error for the test case that intentionally tests this error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50571932", "Added suppression to @javax.inject.Inject on a final field test case so we can make it a compiler error ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50571127", "Fix typo in comment for Provides annotation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50518753", "Fix random bitwise | to be a real ||. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50288042", "Fix up poms to properly sign on deploy, provide source and javadoc jars per sonatype's requirements, and bump the API version to 1.4 for OSGI components.", "Fix to pom.xml to address ASM4/CGLIB3 upgrade (from Stuart McCulloch)", "Add logging for when AssistedInject falls into non-optimized mode, so people can take action and fix it.", "Fix issue 663: Grapher is producing corrupt graphs", "Fix a == vs .equals() bug in MoreTypes.", "Fix http://code.google.com/p/google-guice/issues/detail?id=742 by having assistedinject fail if the target implementation class has a scop ing annotation on it.  Scope annotations on assistedinject targets were always ignored by Guice, and allowing them on the classes led to lots of confusion when reading code.  The new behavior makes for much more readable code.", "Suppress a warning in advance that will be a run-time error in Guice in a subsequent commit, and which will be added to error-prone and caught at compile-time for those who use it.", "Fixed exception in contextpath string manipulation.", "Don't assume methods will be in order when asserting error messages.", "Fix issue 643 using a slightly modified version of the patch provided by Stuart.", "Fix issue 670, keep values from MapBinder & Multibinder distinct.", "Fix issue 643 using a slightly modified version of the patch provided by Stuart.", "Fix issue 670, keep values from MapBinder & Multibinder distinct.", "Fix issue 667, cleanup javadoc for Multibinder", "Fix TypesTest to use an actual parameterized array.  Necessary because JDK7 got a little smarter in its getActualTypeArguments method where it returns a Class if the array type isn't generic, and GenericArrayType only if it was actually generic.", "Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:", "Defer building of error messages for Preconditions.check(State|NotNull|Argument) calls.", "Better errors when using binder(), etc. outside of configure().", "fix issue 616, thanks for the patch!", "fix issue 623, move log4j.properties for persist extension out of src and into test.", "fix issue 624.", "fix issue 636, GuiceFilter should keep a strong ref to its logger.", "Fix a very obscure bug where more than one InitializableReference of the same identity could result in an NPE during injector creation if the one that got ejected from the Map was requested for injection from another InitializableReference.", "Fix flaky service test.  The whole AsyncService thing probably should just be rm'd, but fixing the test for now.", "fix issue 616, thanks for the patch!", "fix issue 623, move log4j.properties for persist extension out of src and into test.", "fix issue 624.", "fix issue 636, GuiceFilter should keep a strong ref to its logger.", "Fix a bug in the way failed JIT bindings are cleaned up.  Because we removed bindings from the jitBindings Map, it was possible for an Injector to try and recreate the failed JIT binding.  Normally we want this behavior.. but in the case of a circular failed JIT binding, it can lead to a ComputationException from ComputingConcurrentHashMap, because we attempt to create two ConstructorInjectors for the same InjectionPoint recursively.", "Failing test for a multibinder bug reported here: http://groups.google.com/group/google-guice/browse_thread/thread/934e30b7ed0da98f/b90383ad4cd1228c", "Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.", "Failing test for a multibinder bug reported here: http://groups.google.com/group/google-guice/browse_thread/thread/934e30b7ed0da98f/b90383ad4cd1228c", "Fix a few common.collect-related deprecation warnings... because it's easy!", "* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build", "fix @ProvidedBy circular dependencies.", "assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.", "fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.", "fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.", "Fix maven build (TODO: replace dependency with official cglib-2.2.2 when it's on Maven Central)", "update to asm-3.3.1, update to new cglib that fixes a bug with bridge methods, add test that verifies the fix works.  (previously it worked within Eclipse but not javac because eclipse's compiler wrote out bridge methods differently.)", "fix issue 614 -- admittedly not the prettiest solution, but it works.", "fix typo, make test not loop forever.", "significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.", "issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.", "issue 595 -- persist extension didn't work if @Transacation was on the class, thanks to cgdecker for the patch and bug report!", "fix issue 594 -- assistedinject does the wrong thing if assisted type is scoped.", "Fix for issues 581 and 582", "Fix warnings in core.", "fix issue 578, Providers.guicify loses injection points from the delegate.", "fix for NO_AOP build.", "fix license.", "add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.", "Minor javadoc fix", "Fix strict container tests (avoid duplicate CGLIB classes)", "fix issue 508 -- consider method return type when deciding whether to bridge.  patch contributed by stuart.", "fix @since version.", "fix googlecode keep pattern.", "add jdiff build packages, update build.properties for struts2, update build.xml to include a jdiff target & fix up javadoc target, add a new uploadApiDiffs script, update uploadJavadocs script.", "Jesse's suggestion for fixing Nullability -- check the String just for name==Nullable\"", "fix Nullability to check for $Nullable\" (the jarjar renamed \"Nullable\")", "fix javadoc bootclasspath so that it references ${java.home}, which is set by every ant dist, instead of ${javahome} which may not be set.", "issue 407 -- better error messaging for failed interception.  previously exploded with a ComputationException, now uses a ConfigurationException with a good msg.", "update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.", "issue 428 - better error validation for AssistedInject, specifically with public factories & non-public method return types that can lead to IllegalAccessErrors.", "issue 477 - fix Scopes.isSingleton to navigate through exposed private elements.", "update ThrowingProvider to support an @ThrowingProvides annotation, much like @Provides.  update the internals of the class to give more explicit error messaging & use bind.addError instead of throwing exceptions.  added lots & lots of tests.", "Issue 561: fix no_aop build by munging away all aop-related references", "Tentative fix for string index out of bounds exception in issue #560", "fix issue 544 -- allow ServletModules to be reused w/o reconstructing new ones.  also fixes a bug where a ServletModule that contained only filters would have run each filter twice if the module was being reused (or three times if it was being used a third time, etc..).  thanks to mathiue.carbou for pointing out the problem.", "Fixed a small bug in the async service multi-threaded test.", "fixed ant build by changing persist build.properties & build.xml to mirror other extensions.", "Fix singletons to be eager as intended.", "Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)", "fix requireExplicitBindings so TypeLiteral<T> can be injected.", "fix InjectedFilterPipelineTest -- it's been failing since r1150 (introduction of using injected pipelines over static ones) if assertions were turned, and failing since r1190 (change to use assertTrue instead of assert) always.", "issue 506 - fail fast & with a useful error message when an AssistedInject factory has Provider<T> as a factory type.  patch ( slightly modified) by ffaber.", "fix issue 507, pointed out by stuart -- LinkedProviderBindingImpl did not implement HasDependencies & the injector wasn't checking for instanceof before casting.", "Fix for requireExplicitBindings bug with ManagedFilterPipeline. Added a testcase too.", "issue 329 - cleanup error message for under-specified assistedinject factory.", "fixed issue 479, thanks to mcculls for pointing out the problem and providing a patch.", "committed aragos' patch (+small fix for TypesTest & AllTests) for issue 474 (and issue 293) -- fix ParametrizedTypeImpl.toString.", "Fixed GuiceFilter so that it no longer depends on a static pipeline. If GuiceFilter is created by the injector, it will prefer an injected pipeline over the static one, preventing horridness in tests and other production environments with multiple GuiceFilters.", "patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the old\" behavior (ordered matching of parameters", "fixed typos in documentation (one pointed out by issue 408)", "fixed InjectorBuilder method visibility, as pointed out by cgdecker in issue 395.", "Fix for assisted inject bug introduced in r1120.", "Fix for issue 455: Request dispatcher was not setting at attribute which failed to properly forward to JSPs. Thanks to Eric Burke for this fix.", "Fix for issue #455 where path info was a memoized provided incorrectly to request-dispatcher produced requests.", "Fixing typo in ProviderBindingImpl's toString() pointed out by Frank.", "fix for locking problem in old assisted inject.", "Explode when circularly dependent singletons cannot be fixed by our constructor proxies. As it stands, sometimes a singleton can result in two instances being created.", "Fixed typo. Added comment.", "Fixed typo in documentation.", "Isaac's patch to fix scoping for null values.", "Including sources in providers wrapped for scoping. This fixes a problem reported by Isaac on bug 271.", "Fix for bug 403, wherein explicit bindings were kept in the JIT bindings map.", "Fixing a TODO for modules.override() plus private modules", "Fixing servlet tests. Guice servlet is tested with EasyMock, and so that means when you change the implementation details you must also change the tests!", "Fixing a old bug wherein calling Provider.get()\" inside of an existing scope would kill the internal context and leave the injector in an inconsistent state.\"", "Andrew McLaughlin's patch for making forward() pass the original request URI. Fixes a bug with JSP servlet etc., not being able to know the target of the original request.", "Fix for issue 381, contributed by robsonbraga. Plus a test.", "Fix for an embarassing bug reported by Dmitry Skavish. http://groups.google.com/group/google-guice/browse_thread/thread/8f0a092727a0227c", "Fixing the package overview page on the main javadoc page to be core-only", "Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.", "Fixing core Javadocs, so they are integrated with the complete Javadocs", "Fixing tests for InjectionPoint and Dependency serialization", "Fixing {@link} warning", "Tests and fix for issue 340.", "User reported testcase for bug 349.", "Greg Kick's fix to use UniqueAnnotations in the servlets module", "Overdue update to fix the no-AOP build of Guice to compile.", "Fix for bug 352: WildcardTypeImpl constructor argument check fails", "Fixing a bug reported by James Strachan. The Encounter isn't being invalidated, which is leading to problems since its methods don't work after the hear() method returns.", "Adding test coverage for calling 'initialize' on ProviderLookups and MembersInjectorLookups, and fixing the bugs the tests show in their applyTo() methods.", "Error handling. Now if InjectionListeners or InjectableTypeListeners fail, we include those errors in our pretty error report.", "Misc small changes. Fix for bug 341, and tweaking assisted inject Javadoc.", "Installing a null module currently gives a lame error message; this one's better", "Fixed some doc pointing at an old version", "Removes unnecessary and invalid align=left\" attributes from grapher's GraphvizRenderer generator. Fixes bug 331.\"", "Critical bug fix for issue: http://code.google.com/p/google-guice/issues/detail?id=335", "Javadoc fix, servlet scopes as singleton.", "Fixed NPE on destroy of invalid Servlet error. This is a weird corner case caused by shutdown hook from the servlet container destroying GuiceFilter when one of its filters or servlets was out of service\"", "update to cglib snapshot that should have fix for duplicated classname issue", "Error checking for duplicate URI pattern mapping (servlets only).", "Added invalid scope (non-singleton) error checking and tests. Should pretty much be the last Guice Servlet 2.0 feature needed before release.", "Fixing broken {@link", "Fixing broken {@link", "Some cleanups from Jesse's last comments. Performance improvements (minor). Next CL handles more cleanups, multiple modules, and better error checking.", "Tests for bug 281. We didn't have coverage for getThis().", "Fixed type conversion Javadoc as recommended by phopkins. See issue 287.", "Kindof important minor bug fix... ;) Tested in container and working properly. More tests and varargs binding coming in next CL.", "I compiled all of our Javadoc examples and fixed some problems.", "Fixing a doc mistake, as pointed out by agertzen.", "Temporary fix to ensure extensions have access to ImmutableMultimap. The current approach for creating jarjar'd extensions isn't going to work as cleanly as I'd originally hoped because jarjar vacuums out dependencies unused by Guice.", "Fixing a typo -- the test was supposed to ensure a and d were exported, b and c were not.", "Updating Google-Collections to include the FinalizableReferenceQueue fix. http://code.google.com/p/google-collections/source/detail?r=69", "Fix for bug 242.", "Fix for issue 254. http://code.google.com/p/google-guice/issues/detail?id=254", "Test and fix for issue 276, wherein we explode while preparing a pretty error message. The regression was caused when PrivateModules were added.", "Fix for bug 255.", "Tests and fix for bug 256.", "Tests that proves issue 209 is fixed...", "Taking advantage of the error message changes in some extensions.", "Hopefully the last of the big exceptions refactorings. I went through all of the places we're adding context to our Errors object and made sure we're never doubling-up -- specifing the same injection point or key multiple times.", "Hopefully the last of the big exceptions refactorings. I went through all of the places we're adding context to our Errors object and made sure we're never doubling-up -- specifing the same injection point or key multiple times.", "Restoring a missing 'at' statement in the Errors message", "Crazy circular-dependency tests for private modules, plus a fix to make them work.", "Refinements to PrivateModules:  - new test cases  - support for @Provides methods  - error detection on keys that are exposed but not bound", "Fixing a serialization problem as reported by Ben Yu: TypeLiteral is serializable, which causes warnings in anonymous inner type literals.", "Follow up to r616 - my IDE didn't include deleted files with my commit, now fixed.", "Moving error sources so they're now reported in the same place for configuration errors and runtime errors. This means that instead of seeing this:   1) Error at com.google.Foo.class(Foo.java:123)       No constructor for Foo was found", "Fixing a bug where exceptions thrown by @ProvidedBy providers weren't being wrapped in a ProvisionException.", "Fixing a critical bug! The following code was broken (although we did have a TODO dating back to sometime last year)", "Full test coverage for errors...", "A few more errors tests. There's only about five left till we have full test coverage for our errors code.", "Moved Errors (an implementation detail class) out of InjectionPoint (a public API).", "Robbie V implemented a fix so that Stage.TOOL doesn't return an Injector whose methods won't work properly.", "Fixed an error pointed out by Brian Harris. Yikes.", "Fix for issue 69: Unzipping Guice 1.0 Source Archive Does Not Create Separate Directory", "Tweaking error handling.", "A fix to an unfortunate, rare concurrency problem. During injector creation, it's possbile that an @Inject method will start a thread, and attempt to access injected members while the injector is still being created. The IdentityHashSet of members to inject is currently accessed, and everything blows up. Terrible!", "Restoring Guice's ability to use private no-arg constructors in private classes. This is unfortunate, but it looks like this is going to be way too hard to fix to be worthwhile.", "Added a testcase that shows issue 125 is fixed.", "More cleanup of Errors -- including sources as a factory method rather than push/pop methods (that require try/finally clauses)", "Added some new error messages:", "Fixing some places where we were using SourceProviders when we should have been using other sources", "Cleanup after the big errors refactoring.", "TypeConversion errors cleanup", "Refactoring error messages. I changed 'em from public static final constants to methods. The benefit is that now the arguments are typechecked. More importantly, now we can gather coverage on methods. Which opens the door to figuring out which methods we have test coverage for (not very many!)", "Fixing owner types so they're no longer missing in ThrowingProviderBinder. Also adding the necessary precondition checks so that we always include 'em when necessary.", "Fixing issue 142.", "Fixing a bad call to setInjectionPoint() in InjectorImpl. Also some cleanup for Asserts so assertContains is more aggressive.", "More aggressive errors for Types. A testcase for the bug optional-binding bug closed this evening.", "Fixing cglib location in the Guice module file.", "Creating a canonical form for Keys with arrays in them. Fixing Serialization for Key, CreationException and TypeLiteral. More SerializationTests.", "Fixing a bug where CGLib + multiple classes with the same FQN = pain", "Fixing a bug where CGLib + multiple classes with the same FQN = pain", "Fixing the binding order problem. My strategy was to break binding creation into two steps:  - creating the binding itself  - initializing\" the binding", "There was a pretty horrible bug in Multibinder where collections were checked for annotation but not element type.", "Optional bindings don't work with provider injection. The test shows it, but I've still got to implement a fix . . .", "Fix the FastClassByGuice LineNumbers problem by using the natural constructor rather than the synthetic one when generating LineNumbers.", "Fixing compile problems in r438, rearranging Reflection code", "Fixing compile problems in r438, rearranging Reflection code", "Fixing LoggerInjection", "Fixing NullableInjectionPointTest by changing the expected behaviours of the tests. We now forbid bind(...).toInstance(null) but allow Injector.getInstance() to return null.", "Another bug. I'm not sure if this is a regression, but we should be able to discover this problem statically", "Fixed the Implicit bindings for parameterized types bug", "Fixing a bug in the unique annotation in throwingproviderbinder", "I haven't fixed the bind out-of-order problem, but I have constrainted it to a much more limited set.", "I haven't fixed the bind out-of-order problem, but I have constrainted it to a much more limited set.", "Fixing the Provider injection bug, wherein we were using a Provider before it had been itself injected.", "Fixing the Provider injection bug, wherein we were using a Provider before it had been itself injected.", "Patching in David Baker's fix for AssistedInject - now it works with implicit bindings", "Patching in David Baker's fix for AssistedInject - now it works with implicit bindings", "Finishing the tests for VisitableBinder (which found one bug, getProvider() wasn't recorded propertly)", "Error messaging test cases: http://groups.google.com/group/google-guice-dev/browse_thread/thread/3a1bc9fc820c8e49", "Fixing up tests for null...", "Adding a test for bug 155. This fails in Guice 1.0 but works in the current code.", "Adding a test for bug 155. This fails in Guice 1.0 but works in the current code.", "Fixed infinite recursion in Injector.toString().", "Fixes bug with cyclic deps in explicit bindings.", "Fixed breakage. Removed unnecessary binding.", "Extended Binding to better support tools. Fixed bug where we were ignoring exceptions during member injection. Added TOOL stage.", "Added ability to look up providers before the injector is created. You cannot use the provider until the injector is created, and you will get a nice error if the provider isn't available.", "fix IDEA .iml file", "Fixed Struts 2 plugin to load user's module. Added more error detection.", "spot fix of some binder javadoc", "spot fix of some binder javadoc", "Re-add the Injector.getInstance() methods which were removed frankly by mistake.", "Fixed package documentation to not reference Factory.", "improve error message when instance location causes an exception (e.g. from your constructor or custom factory)", "Fixed bug in toInstance(). It should not set a scope.", "Cleaned up error handling. Separated ErrorHandler from source tracking. We now point directly to members when appropriate.", "Refactored scope handling. Allows overriding annotations with in(). Improved error reporting.", "Fixed copyright declarations.", "Exposed the error message objects.", "Created ContainerCreationException which delivers the error messages to the client. Added performance logging. Validation performance might be a concern. Will keep the design such that we can lazily validate if desired.", "Further improved the up front error reporting. Hid ErrorMessage and source() logic from the public API for the time being. Removed javadocs.", "Added support for up front error handling. More work remains.", "Fixed Javadoc warning.", "Modified Container to return a 'creator' or new instance factory. This helps clients avoid a concurrent map lookup each time they inject a class. Also fixed typing of Key.getRawType() and undeprecated it.", "Fixed mime types."], "metric": [["0", "0", "0", "0", "3", "3", "5", "5", "0", "0", "0", "0", "0", "0", "3", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["23", "39", "1", "1", "3", "5", "0", "0", "4", "6", "23", "8", "0", "0", "3", "0", "0", "0", "0", "0", "23", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "5", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "6", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "5", "27", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "6", "75", "47", "2", "9", "96", "38", "0", "0", "0", "0", "1", "0", "1", "7", "4", "3", "0", "0", "1", "3", "0", "3"], ["0", "0", "0", "0", "1", "4", "5", "2", "6", "11", "36", "7", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "1", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "13", "3", "1", "3", "51", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["5", "7", "24", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "2", "0", "2"], ["1", "2", "5", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "113", "0", "3", "3", "69", "0", "1", "0", "0", "9", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "2", "2", "4", "4", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["10", "19", "45", "199", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "0", "1", "16"], ["1", "1", "1", "1", "58", "270", "1775", "1060", "24", "24", "693", "0", "10", "0", "48", "109", "0", "220", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "58", "272", "1767", "1080", "24", "24", "693", "0", "10", "0", "48", "109", "0", "220", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "0", "1", "6", "83", "35", "0", "0", "0", "0", "0", "0", "1", "2", "0", "8", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "82", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "5", "0", "1"], ["3", "4", "125", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "7", "0", "1"], ["8", "9", "9", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "8"], ["5", "8", "81", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "4", "4", "0", "3"], ["1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "7", "20", "17", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "2", "0", "5"], ["3", "6", "21", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "6"], ["9", "15", "96", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "9", "11", "0", "6"], ["1", "1", "25", "5", "1", "3", "36", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "25", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "13", "125", "35", "2", "3", "76", "2", "0", "0", "0", "0", "0", "0", "2", "9", "0", "-1", "1", "0", "4", "4", "1", "5"], ["3", "3", "4", "2", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "1"], ["23", "41", "52", "44", "2", "3", "5", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "23", "0", "0", "29"], ["5", "12", "26", "16", "14", "55", "101", "78", "0", "0", "0", "0", "0", "0", "14", "0", "0", "40", "0", "0", "5", "0", "0", "8"], ["0", "0", "0", "0", "10", "27", "47", "32", "0", "0", "0", "0", "0", "0", "10", "0", "0", "18", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "6", "21", "41", "33", "0", "0", "0", "0", "0", "0", "6", "0", "0", "15", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "6", "13", "31", "23", "0", "0", "0", "0", "0", "0", "6", "0", "0", "9", "0", "0", "0", "0", "0", "0"], ["5", "10", "51", "14", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "1", "0", "4", "3", "0", "4"], ["2", "7", "11", "5", "1", "1", "33", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["5", "12", "39", "19", "1", "4", "15", "11", "0", "0", "0", "0", "0", "0", "1", "1", "1", "4", "0", "0", "5", "4", "3", "7"], ["4", "5", "66", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "4", "0", "4"], ["7", "8", "216", "2", "1", "3", "11", "8", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "3", "0", "4", "15", "0", "3"], ["2", "2", "129", "1", "1", "1", "115", "0", "0", "0", "0", "0", "1", "0", "0", "11", "0", "0", "1", "0", "1", "3", "0", "1"], ["4", "12", "131", "33", "1", "1", "75", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "2", "0", "2", "11", "0", "11"], ["1", "3", "11", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0"], ["1", "6", "15", "9", "1", "2", "45", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "1", "0", "3"], ["1", "13", "48", "13", "1", "2", "134", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "2", "0", "6"], ["1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["9", "28", "267", "70", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "1", "0", "8", "1", "0", "65"], ["1", "1", "0", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["6", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "0"], ["1", "1", "1", "2", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "17", "9", "6", "13", "38", "24", "0", "0", "0", "0", "0", "0", "6", "0", "0", "10", "0", "0", "2", "0", "0", "3"], ["4", "4", "3", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "3"], ["3", "6", "40", "16", "1", "1", "22", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "1", "0", "2", "2", "0", "3"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "2", "1", "1", "1", "36", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "3", "7", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "11", "62", "57", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "1", "3"], ["34", "90", "259", "339", "2", "9", "52", "25", "0", "0", "0", "0", "0", "0", "2", "0", "2", "5", "0", "0", "34", "0", "8", "61"], ["5", "6", "4", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "0", "5"], ["1", "1", "1", "10", "3", "6", "28", "140", "0", "0", "0", "0", "0", "0", "3", "0", "6", "4", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["120", "268", "1314", "663", "109", "430", "4238", "2980", "0", "0", "0", "0", "0", "0", "109", "0", "0", "330", "0", "0", "120", "0", "0", "68"], ["1", "1", "3", "2", "0", "0", "0", "0", "1", "1", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "9", "56", "27", "1", "2", "54", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "7", "1", "1", "9", "76", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "3", "0", "0", "1", "0", "0", "1"], ["4", "8", "75", "7", "5", "11", "117", "13", "0", "0", "0", "0", "0", "0", "5", "5", "0", "6", "0", "0", "4", "1", "0", "4"], ["1", "4", "40", "15", "6", "13", "52", "33", "0", "0", "0", "0", "0", "0", "6", "0", "0", "12", "0", "0", "1", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "3", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "7", "14", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["5", "13", "113", "80", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "11", "0", "7"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "5", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "9", "21", "18", "1", "3", "78", "32", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "6"], ["1", "6", "35", "7", "2", "11", "131", "13", "0", "0", "0", "0", "0", "0", "2", "8", "0", "8", "0", "0", "1", "2", "0", "2"], ["2", "7", "20", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "3"], ["1", "4", "12", "7", "1", "4", "102", "0", "0", "0", "0", "0", "0", "0", "1", "7", "0", "0", "0", "0", "1", "0", "0", "3"], ["3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["1", "1", "4", "0", "1", "1", "34", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "21", "3", "1", "2", "62", "0", "0", "0", "0", "0", "0", "0", "1", "6", "0", "0", "0", "0", "2", "1", "0", "2"], ["9", "24", "82", "41", "1", "25", "154", "41", "0", "0", "0", "0", "0", "0", "1", "5", "0", "17", "0", "0", "9", "4", "2", "10"], ["1", "1", "8", "7", "1", "4", "4", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "16", "40", "40", "0", "0", "0", "0", "0", "0", "1", "0", "0", "15", "0", "0", "0", "0", "0", "0"], ["2", "3", "12", "4", "1", "19", "128", "52", "0", "0", "0", "0", "0", "0", "1", "6", "0", "10", "0", "0", "2", "1", "0", "1"], ["1", "4", "3", "1", "1", "4", "85", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "27", "3", "1", "1", "44", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "1", "0", "0", "1", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "5", "13", "76", "53", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "7", "7", "66", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "3", "2", "1", "1", "47", "1", "0", "0", "0", "0", "0", "0", "1", "5", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["9", "12", "4", "4", "1", "1", "0", "0", "3", "6", "58", "34", "0", "0", "1", "0", "0", "0", "0", "0", "9", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "4", "8", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "12", "2", "1", "1", "52", "0", "1", "1", "18", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "5", "24", "160", "215", "0", "0", "0", "0", "1", "1", "3", "10", "12", "7", "0", "0", "0", "0", "0", "0"], ["1", "1", "7", "5", "1", "1", "19", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "36", "47", "0", "0", "0", "0", "0", "0", "1", "0", "7", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "19", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "67", "1", "1", "2", "213", "43", "0", "0", "0", "0", "0", "0", "1", "21", "5", "1", "0", "0", "1", "4", "0", "2"], ["0", "0", "0", "0", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "1", "1", "4", "50", "9", "0", "0", "0", "0", "0", "0", "1", "4", "0", "7", "0", "0", "1", "1", "0", "1"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["5", "28", "97", "39", "3", "28", "193", "17", "0", "0", "0", "0", "0", "0", "3", "8", "0", "15", "0", "0", "5", "6", "0", "15"], ["1", "5", "46", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "1", "7"], ["1", "3", "10", "1", "3", "3", "119", "1", "0", "0", "0", "0", "1", "0", "2", "4", "0", "1", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "9", "9", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "26", "131", "36", "5", "11", "627", "1", "4", "3", "17", "0", "2", "0", "3", "41", "0", "2", "0", "0", "5", "6", "0", "13"], ["1", "4", "14", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "13", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "19", "18", "27", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "33", "3", "1", "4", "52", "1", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "11", "14", "11", "1", "13", "28", "29", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6", "0", "0", "3", "0", "0", "6"], ["2", "5", "55", "58", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "8", "4", "9", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "1", "2", "21", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "10", "28", "17", "3", "3", "69", "0", "0", "0", "0", "0", "0", "0", "3", "6", "0", "0", "0", "0", "5", "0", "0", "6"], ["1", "7", "19", "1", "2", "11", "38", "18", "0", "0", "0", "0", "0", "0", "2", "2", "1", "7", "0", "0", "1", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "5", "9", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "6", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "13", "10", "0", "0", "0", "0", "1", "1", "26", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "19", "11", "1", "1", "9", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "3", "1", "0"], ["8", "31", "253", "168", "12", "110", "481", "247", "0", "0", "0", "0", "0", "0", "12", "33", "0", "88", "0", "0", "8", "9", "2", "17"], ["0", "0", "0", "0", "2", "2", "6", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "6", "59", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "13", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "22", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "1", "2", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "9", "0", "1", "1", "11", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "11", "35", "12", "3", "11", "157", "21", "0", "0", "0", "0", "1", "0", "2", "7", "0", "3", "1", "0", "2", "2", "0", "7"], ["0", "0", "0", "0", "1", "2", "22", "11", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "3", "11", "12", "1", "2", "13", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "5"], ["2", "4", "13", "12", "1", "2", "2", "13", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "6"], ["1", "3", "11", "12", "1", "2", "13", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "5"], ["4", "13", "41", "23", "1", "5", "57", "1", "0", "0", "0", "0", "0", "0", "1", "5", "1", "-1", "0", "0", "4", "1", "0", "8"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "14", "13", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["5", "12", "30", "73", "4", "18", "81", "30", "0", "0", "0", "0", "0", "0", "4", "6", "2", "10", "0", "0", "5", "2", "4", "4"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "28", "68", "50", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "35"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "7", "16", "5", "1", "10", "34", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "7", "0", "0", "1", "0", "0", "4"], ["3", "5", "1", "3", "1", "3", "4", "2", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "11", "2", "2", "15", "56", "3", "0", "0", "0", "0", "0", "0", "2", "5", "0", "11", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "7", "20", "6", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "0", "0", "0", "0"], ["3", "3", "23", "5", "2", "8", "27", "20", "0", "0", "0", "0", "0", "0", "2", "1", "1", "3", "0", "0", "3", "1", "0", "2"], ["0", "0", "0", "0", "1", "7", "20", "6", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "0", "0", "0", "0"], ["6", "6", "7", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "0", "0", "6"], ["177", "208", "536", "333", "134", "241", "786", "532", "2", "2", "14", "4", "0", "0", "134", "0", "0", "29", "0", "0", "177", "0", "0", "1"], ["5", "8", "108", "39", "1", "3", "7", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "2", "0", "3", "5", "0", "4"], ["5", "9", "8", "14", "1", "7", "65", "9", "0", "0", "0", "0", "0", "0", "1", "3", "1", "4", "0", "0", "5", "0", "0", "6"], ["5", "9", "15", "8", "1", "2", "28", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "0", "0", "6"], ["8", "10", "98", "20", "1", "5", "222", "45", "0", "0", "0", "0", "0", "0", "1", "21", "1", "2", "2", "0", "6", "5", "0", "9"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "31", "0", "6", "2", "4", "4", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "12", "37", "19", "1", "2", "82", "0", "0", "0", "0", "0", "0", "0", "1", "6", "0", "0", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["5", "12", "42", "16", "2", "4", "75", "5", "0", "0", "0", "0", "0", "0", "2", "4", "0", "4", "0", "0", "5", "2", "2", "5"], ["6", "9", "40", "20", "2", "3", "36", "2", "0", "0", "0", "0", "0", "0", "2", "3", "0", "1", "0", "0", "6", "2", "0", "9"], ["1", "1", "2", "0", "1", "6", "6", "2", "0", "0", "0", "0", "0", "0", "1", "2", "2", "4", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "1", "2", "25", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "5", "6", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "2"], ["1", "2", "47", "8", "1", "3", "64", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "4", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "17", "31", "35", "1", "1", "176", "0", "0", "0", "0", "0", "1", "0", "0", "22", "0", "0", "0", "0", "4", "16", "0", "7"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "11", "3", "1", "6", "56", "3", "0", "0", "0", "0", "0", "0", "1", "3", "0", "4", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "0", "0", "0", "0", "0", "9", "5", "88", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "3", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "5", "8", "3", "1", "3", "24", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "1", "0", "1"], ["8", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "0"], ["1", "3", "15", "0", "2", "5", "26", "4", "0", "0", "0", "0", "0", "0", "2", "1", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "2", "9", "0", "1", "10", "27", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["4", "9", "388", "53", "1", "18", "511", "38", "0", "0", "0", "0", "0", "0", "1", "38", "11", "1", "3", "0", "1", "20", "0", "6"], ["2", "4", "2", "4", "6", "13", "21", "7", "0", "0", "0", "0", "0", "0", "6", "1", "0", "5", "0", "0", "2", "0", "0", "1"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "18", "7", "2", "2", "73", "0", "0", "0", "0", "0", "1", "0", "1", "6", "0", "-2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "12", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "0", "1", "2", "30", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "13", "116", "13", "2", "2", "122", "22", "0", "0", "0", "0", "1", "0", "1", "8", "1", "4", "0", "0", "4", "6", "1", "3"], ["1", "3", "7", "2", "1", "3", "31", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "1", "2", "5", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "4", "9", "2", "1", "1", "67", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "3", "13", "3", "1", "3", "23", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1", "0", "0", "2", "1", "0", "1"], ["2", "4", "6", "5", "1", "2", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "1"], ["4", "8", "35", "8", "1", "2", "22", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "4", "2", "0", "4"], ["2", "3", "11", "1", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "8", "10", "3", "4", "32", "1", "0", "0", "0", "0", "1", "0", "2", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "4", "14", "8", "1", "1", "148", "0", "0", "0", "0", "0", "1", "0", "0", "9", "0", "0", "0", "0", "1", "0", "0", "4"], ["4", "5", "77", "9", "1", "1", "259", "0", "0", "0", "0", "0", "1", "0", "0", "19", "0", "-6", "0", "0", "4", "2", "0", "1"], ["2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "11", "49", "10", "4", "17", "56", "18", "1", "1", "1", "0", "0", "0", "4", "1", "0", "7", "0", "0", "4", "3", "0", "2"], ["1", "2", "4", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "13", "3", "0", "0", "0", "0", "2", "3", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["4", "7", "61", "39", "2", "4", "64", "6", "0", "0", "0", "0", "0", "0", "2", "7", "0", "2", "1", "0", "3", "4", "2", "1"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "7", "25", "8", "1", "12", "119", "18", "0", "0", "0", "0", "0", "0", "1", "3", "0", "5", "0", "0", "2", "0", "0", "2"], ["5", "10", "16", "15", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "5", "0", "0", "6"], ["1", "2", "7", "1", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "2"], ["1", "2", "11", "4", "1", "1", "53", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "4", "30", "58", "20", "0", "0", "0", "0", "0", "0", "4", "0", "0", "10", "0", "0", "0", "0", "0", "0"], ["6", "8", "14", "12", "1", "1", "27", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "6", "0", "0", "6"], ["2", "4", "16", "3", "2", "10", "72", "26", "0", "0", "0", "0", "0", "0", "2", "2", "0", "4", "0", "0", "2", "0", "0", "2"], ["2", "2", "7", "0", "1", "3", "21", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "1"], ["1", "2", "3", "0", "1", "2", "31", "1", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "7", "0", "0", "0", "0", "0", "0", "4", "4", "28", "1", "0", "0", "0", "0", "0", "0", "0", "0", "7", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "28", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "8", "8", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "3", "11", "1", "1", "3", "17", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "1", "1", "24", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "5", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["13", "24", "35", "57", "4", "8", "18", "25", "0", "0", "0", "0", "0", "1", "3", "0", "1", "4", "0", "0", "13", "0", "2", "8"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "9", "17", "0", "1", "1", "53", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "4", "1", "0", "7"], ["2", "2", "2", "2", "1", "3", "47", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "2"], ["4", "10", "51", "11", "2", "6", "133", "13", "0", "0", "0", "0", "0", "0", "2", "2", "0", "1", "0", "0", "4", "3", "0", "8"], ["3", "5", "8", "5", "1", "5", "18", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "3", "0", "0", "1"], ["1", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "17", "58", "17", "6", "22", "33", "25", "0", "0", "0", "0", "0", "0", "6", "0", "0", "15", "0", "0", "4", "0", "0", "9"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "2", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "21", "0", "3", "5", "11", "11", "0", "0", "0", "0", "0", "0", "3", "0", "0", "5", "0", "0", "2", "2", "0", "1"], ["5", "10", "54", "3", "13", "23", "158", "25", "0", "0", "0", "0", "1", "0", "12", "4", "0", "19", "0", "0", "5", "2", "1", "5"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["10", "20", "52", "47", "4", "13", "27", "20", "0", "0", "0", "0", "0", "0", "4", "0", "0", "10", "0", "0", "10", "0", "0", "15"], ["0", "0", "0", "0", "1", "2", "20", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "13", "2", "1", "3", "18", "4", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "9", "11", "59", "58", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "9", "4", "1", "1", "16", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "12", "9", "1", "1", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "40", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0"], ["9", "39", "115", "84", "9", "18", "54", "25", "0", "0", "0", "0", "0", "0", "9", "1", "0", "17", "0", "0", "9", "6", "1", "22"], ["22", "77", "407", "467", "7", "16", "129", "129", "0", "0", "0", "0", "0", "1", "6", "8", "8", "13", "4", "1", "17", "18", "24", "47"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "9", "2", "1", "2", "107", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "1", "0", "0", "2"], ["7", "22", "262", "43", "1", "2", "117", "0", "0", "0", "0", "0", "0", "0", "1", "5", "0", "0", "3", "0", "4", "16", "1", "26"], ["3", "9", "39", "27", "3", "8", "27", "33", "0", "0", "0", "0", "0", "0", "3", "0", "1", "9", "0", "0", "3", "3", "1", "11"], ["1", "1", "0", "139", "1", "1", "0", "214", "0", "0", "0", "0", "0", "1", "0", "0", "13", "0", "0", "1", "0", "0", "7", "0"], ["13", "45", "208", "194", "21", "80", "176", "174", "0", "0", "0", "0", "0", "0", "21", "0", "0", "72", "0", "0", "13", "6", "5", "34"], ["1", "1", "10", "7", "1", "21", "188", "28", "0", "0", "0", "0", "0", "0", "1", "11", "0", "8", "0", "0", "1", "0", "0", "1"], ["3", "8", "31", "22", "1", "4", "32", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3", "0", "0", "3", "1", "0", "4"], ["1", "2", "0", "8", "4", "6", "107", "0", "0", "0", "0", "0", "0", "0", "4", "11", "0", "-1", "0", "0", "1", "0", "2", "0"], ["7", "13", "31", "60", "4", "8", "179", "1", "0", "0", "0", "0", "0", "0", "4", "12", "0", "0", "0", "0", "7", "1", "3", "6"], ["4", "7", "23", "28", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "1", "2", "3"], ["2", "4", "41", "1", "1", "2", "35", "3", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "10", "0", "-2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["6", "14", "27", "19", "2", "5", "60", "39", "0", "0", "0", "0", "0", "0", "2", "5", "1", "2", "0", "0", "6", "0", "0", "13"], ["6", "15", "87", "57", "1", "2", "38", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "1", "0", "5", "5", "2", "8"], ["1", "1", "2", "1", "1", "2", "5", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "15", "5", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["20", "44", "149", "231", "4", "17", "80", "33", "0", "0", "0", "0", "0", "0", "4", "2", "2", "12", "0", "1", "19", "16", "18", "24"], ["14", "34", "133", "85", "3", "12", "96", "85", "0", "0", "0", "0", "0", "0", "3", "6", "6", "1", "0", "0", "14", "4", "3", "17"], ["5", "11", "15", "90", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "0", "9", "6"], ["34", "130", "211", "254", "2", "12", "66", "58", "0", "0", "0", "0", "0", "0", "2", "3", "1", "9", "1", "0", "33", "3", "5", "84"], ["2", "3", "24", "13", "2", "3", "71", "167", "0", "0", "0", "0", "0", "1", "1", "2", "8", "1", "0", "0", "2", "0", "0", "4"], ["25", "82", "472", "185", "8", "20", "41", "44", "0", "0", "0", "0", "0", "0", "8", "2", "2", "10", "1", "2", "22", "52", "3", "43"], ["3", "5", "28", "20", "4", "9", "35", "13", "0", "0", "0", "0", "0", "0", "4", "1", "0", "5", "0", "0", "3", "0", "0", "3"], ["2", "5", "5", "263", "2", "3", "63", "88", "0", "0", "0", "0", "0", "1", "1", "3", "6", "0", "0", "1", "1", "0", "24", "1"], ["1", "1", "1", "1", "3", "6", "36", "18", "0", "0", "0", "0", "0", "0", "3", "0", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "1", "5", "0", "3", "5", "22", "1", "0", "0", "0", "0", "0", "0", "3", "2", "0", "1", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "3", "5", "52", "95", "1", "2", "2", "29", "0", "1", "2", "4", "12", "1", "0", "0", "0", "0", "0", "0"], ["8", "42", "101", "134", "9", "17", "273", "55", "0", "0", "0", "0", "1", "0", "8", "18", "4", "15", "0", "0", "8", "2", "7", "28"], ["1", "3", "6", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "8", "45", "27", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "4", "1", "2"], ["1", "2", "17", "4", "1", "1", "14", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "3"], ["1", "1", "5", "5", "1", "7", "18", "1", "0", "0", "0", "0", "0", "0", "1", "3", "0", "3", "0", "0", "1", "0", "0", "1"], ["2", "3", "5", "5", "1", "2", "2", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "1"], ["0", "0", "0", "0", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["10", "17", "63", "45", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "1", "1", "10"], ["2", "5", "30", "14", "1", "2", "8", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "4", "2", "1"], ["0", "0", "0", "0", "1", "2", "11", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "13", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "27", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "3", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "8", "29", "15", "1", "1", "19", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "6", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "18", "56", "772", "1", "5", "62", "7", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1", "0", "1", "6", "6", "65", "-3"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "8", "23", "9", "1", "2", "49", "8", "0", "0", "0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "2", "0", "0", "2"], ["13", "24", "77", "92", "2", "14", "292", "144", "0", "0", "0", "0", "1", "0", "1", "7", "1", "13", "0", "0", "13", "1", "9", "21"], ["0", "0", "0", "0", "2", "2", "30", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "6", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "26", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "19", "1", "1", "1", "4", "0", "1", "1", "1", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "3", "0", "1"], ["3", "8", "11", "19", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "0", "1", "3"], ["1", "1", "1", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["25", "54", "461", "131", "3", "2", "136", "0", "1", "1", "1", "1", "1", "0", "2", "11", "0", "-4", "9", "3", "13", "37", "4", "15"], ["5", "11", "75", "13", "3", "4", "43", "6", "0", "0", "0", "0", "1", "0", "2", "2", "0", "2", "0", "0", "5", "7", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "11", "118", "31", "0", "0", "0", "0", "4", "5", "18", "2", "0", "0", "0", "0", "0", "0", "2", "0", "3", "12", "5", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "3", "13", "1", "13", "26", "35", "35", "0", "0", "0", "0", "0", "0", "13", "0", "0", "28", "0", "0", "3", "2", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "6", "42", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "2", "0", "3"], ["1", "1", "0", "1", "2", "4", "17", "2", "0", "0", "0", "0", "0", "0", "2", "2", "0", "2", "0", "0", "1", "0", "0", "1"], ["11", "48", "141", "112", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "10", "7", "6", "28"], ["8", "35", "167", "68", "2", "2", "91", "1", "1", "2", "2", "2", "1", "0", "1", "6", "0", "1", "1", "0", "7", "8", "6", "12"], ["12", "12", "0", "0", "2", "2", "0", "0", "1", "24", "125", "108", "0", "0", "2", "0", "0", "0", "0", "0", "12", "0", "0", "0"], ["6", "31", "105", "88", "0", "0", "0", "0", "1", "27", "93", "55", "0", "0", "0", "0", "0", "0", "1", "0", "5", "9", "1", "27"], ["3", "5", "129", "64", "10", "19", "27", "21", "2", "18", "167", "154", "0", "0", "10", "0", "0", "19", "2", "0", "1", "8", "0", "1"], ["15", "53", "336", "130", "6", "10", "21", "14", "37", "50", "135", "7897", "0", "0", "6", "2", "0", "4", "2", "1", "12", "21", "9", "22"], ["7", "35", "202", "51", "2", "4", "44", "5", "2", "29", "134", "70", "1", "0", "1", "6", "0", "3", "1", "0", "6", "16", "0", "13"], ["1", "1", "0", "0", "0", "0", "0", "0", "1", "8", "27", "24", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "7", "22", "24", "8", "14", "19", "18", "1", "4", "163", "33", "0", "0", "8", "0", "0", "14", "0", "0", "3", "2", "2", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}