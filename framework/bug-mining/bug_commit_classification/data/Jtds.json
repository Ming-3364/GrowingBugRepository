{"number": ["957bce0b7cdabd464cb3486166906f6e0dc91a36", "23b8f3f8f130f519291423e1a9eb698eb2c46e72", "85c0c4050322e090231777500134b7798d7e2d23", "41fb9b92d147bbf108a154514f176fa3ad112380", "3380d41ee45bce97e55686f13b69b4c6e89ea829", "cc889f53a0f772be89b0a0c747238cfac5b489ba", "f53c39a1518a090b46b933d142535c475c8da6ca", "851ecc2b236bed2bc9dd6088059a42e79b20edbd", "6d642c467b3339c53c3c746d14a1641565ed7d2d", "d100529e5c519b723230d6601cbb4dec587c39fd", "4acfa924f3ceeaa766c1e427350cc5ad2a3a1fa0", "139aa9e9fa75d3484aee32e19f499b0169e4ce7c", "295d7d739ce4c58623a9f0ebe8c4321d4bdbb452", "b2b897b2712550ddf0694a0a3af4270a1111a029", "938c4b8b98fa95275c7b7badae042b259076cf10", "78bcd9c3915398338ef3a819dc03a4b3c9937689", "188a56f23fcd15b96254dc260be333838f74776d", "8be34ddd75d480293a73f6eb001cf35540afe54c", "80d35f153d134e035f6bebe48ee21fd8b317fc6d", "c26dc62eb3026441d6c02f7c9271e40e615d3cac", "62db4382f8ab5d6185c3ed94f02d46db6059c187", "268f9b6daa72dfd4802f8c4e7e1bb7317238934d", "91ca03aa3b8d2624f841104d4841a4e393421203", "fc36c2e3cc99eaa316874a24221d306f42b2bf9d", "4875c8d29d0b3c399169a47963decdfd635ddc5d", "f08bb1c81e2260ddfb008bf2f4c1a09dc4b2aded", "e7e66046eacc2b89b43c64b9a440f030414dd2b0", "81a6e12bd949f88dd80a13b2735098082a23d331", "e862fed320697b843f1c6c147688fd061da3565c", "bb3de4d5e841e3c240702ba84b6158d562ff60da", "dde25b4db3410a96345ade382cdcae72765d51db", "ae33150454e3366be814d106f4c4b9e71ef2eaaa", "df1bdbb64631a523aae74dd35d7e4de15637109c", "835c6aaf22f1be35b647f3259ff602dd21dbb342", "61f5f09370b4ba6293ed96e91490a60fa6d02293", "3f5ae8b5746d1fb13fe0d6c9b5f00ddcb864c6bc", "18d18c6757536c6f79e768cbc6801b4ff790788e", "7e730ef0cecb7ad95377c2d2a618208b93e25a05", "0bd549487ffee59268d9ade243cc71ee5d5c87bb", "9380d638b7406430dadb8d1900ddc54bc0489631", "9b592cab11ac29b8c7856a81516044c8f3556e4c", "e59eed5b25b981e11a3f52678fdf92481e25a5de", "626a6a96e18fba01c390078bbea872d2825b8c57", "abe067428251b307b8588c0ce6d315a7e6bd6469", "a4c1e7a078dd292687132eaa4dd96c45cb764fb3", "a71ebb6dd22088585ae4d204ba1e193a18154ce3", "df0fac333b9c08e73e46b71060a6c3b53c33ff07", "0d0fd892a2ff6763957849cbb77a2095aaf3254a", "e8778a04c380a762b371c4d0fcb4c3d466aa5d92", "e778185aae1fb9e18239cbb08c62b4ac2141c535", "bcef4ce201611aca0da50a263c2fb258fdd430c1", "70985ca20b4e97f559deed54e38e341e3697547c", "59c76719b4397b4692115d2c68cd8271201217e4", "d324264f5341104fb5252886057e9fe8a557f4ba", "53e5bc14406a4c60d329beb62c7ccb23c7fd21d2", "4161ff4ac0e04c44b6ad76437977de60e05a0717", "4fb4391297b721f79c620b71700aa4b695b3ed60", "24404f32b88c0e9097f4c95ba7388644c0ae60d2", "2f66ac6c1dd7cfb2eeb01608af5a176b81ed7bc9", "634b1098a7f4cf489680c7a6396fcda25c6b1535", "cc1f7fc3556f94760fc24bc076ca57ae6038a0e2", "36f61dfa34f0ec24cd096111d9509a7e6a0030dc", "76327be99e9a661abfeda81ee1453b8f5f973a5a", "ac8f9b6ad4bfe84d0a32cb551c88cd6a7ee61c78", "fdded0a2c6eb14f64f68cc940a763a5a5cc6f1f7", "48f17b4a42abb5336a2d29563f0c5671b755c85b", "b297f3ab65b9f757c5de069e00aa0bbb181896ef", "e0bc69f3ba00471c4fadc2a0260528d2599b764d", "3ea50d21de7c206c5ab19c949adf6b1e4c7760e9", "5823b24f8c9287de9108e17cfe7273dce4ca1edb", "a426b3de9d0f128f68e230e7007c278ed8545355", "76371029572f75f20d0978f2ce931347e5b1d02f", "ef092c9dce9802ef8e813d42fd793d87374ce079", "faed55eddf777766e1f6ea99efd9afc5af4ef47f", "5183beb6a1a23e3e6cf7e60115953c48316d319c", "a709bf95ec818401978b756c781421f288ab77c2", "75949abcfe602df48965b47d34aeba5df0524258", "1845058cfbff8cb7ed961288a84fd39ef05e36ff", "ebb02291460e7db12424de2007360cd359c1e850", "e410e22e11f1671660fb54c0cbce11cd9c8f2d9c", "a7ca3be2aab8038fd66d6b9da0e8c77a049db616", "0bb418668707c21b15b8537409ddccecb1475a35", "93f39dd0e52470976f05d3db87441a0c5685b0e9", "2a24dea7593a196bcf45ca95f8b5af14a66ff4e0", "3b0dc818b12e687cba15da831020a5fc822d0f19", "11f5aa77097edecfcc26866a4da5a994f82f2d1f", "c0315bf541e7b67c0b55fccc26d437f43df57269", "2ca40fe3ce6398520223b2f27bf72c4e2658bae3", "6795ed3020aee398c94caca151dd05f489ddb051", "418ec279bff9bcd1692d45127053ea0319ab83f1", "68621a829d3bf74a057f367e7d559a4a1fc69348", "b086279c68230ad56128af574470e2e9e84597b6", "a62e4b7d533a787c71c43ceeafd7b8f652d97bdd", "0212f4f231cc1866ad2748cd90febbb51ad14962", "0e0d718adac8c5ab2489fe013dadbb8ddc1892a2", "b62083f5bb8447d2251506abbaaf844ba281285b", "6813ee1a67ad5a075f1cd0f1940b1f2957031d96", "1c4e59f75b991cd454ec7b822d4145ad33201b61", "40b238c2ca031ae5cdc0cddb228166d812f54440", "b3c893abd272ea283b260f13d988eb5335726f91", "cc7a9e2b3e67c455c3b723812a39c07151b69964", "63983022a8a3716678be272162f0061b3ae5f9c7", "d7998eed6a29854046c87cc4285e17ede2210a8a", "723a4dfffcbdc713abc16ce47e9a73f555275c50", "62366f716d85cee191523bfd85c32a0d29239a2b", "b629c861751b87fd3db30bba1dffb39b1b7f3b66", "b8428cdf9ccb0a66216c6de80657f994dbee0fb8", "967c7f144c3cd92990349afa16741f4529af1a60", "75720beb5f484b326d1a29985d4fa8daa96c368b", "d8627c252978108368c77c1535a38fdb022bbede", "c8995242dd6a001787ea48f0dc04dfba04a41ce5", "52dd76fc1d2cce2a2fff485ba6e97a42919fed4f", "b17266cd7df06e1b7052fcb417f352d31f79398e", "fa063a71a8fffbacdf5d9b442c20d0ad9074abf1", "cc10b0e88c994d2700d6655f337fb835f13bcafd", "b8e7a2c83cdb4de9861bc79a125b755f1f50e69e", "ab1345cc04f6cb7b968ace587aa3442344dd2f9a", "54ee021f6253fb047f99369de4334b90d1aeb611", "61eb4dbffc1caaf551b90d2444fc671f69708a1e", "33b2ffe0b0f5ad5cc51bc0e8a527b39fc60e04a0", "97456273cb3ef2b908a27c1600bbc39c6d741252", "9748bf19c33bdf7b817d6658f1cd6022d02968b8", "0c2d5130b9bae07f4fb3256d138c8eccb7c9f8b2", "2449384f1e650ad3ff2be9124f170e4850647a5d", "19022b07f545caa24dd90c4936b32f0ad3b2c66f", "525f068cae81f95a17134ac640175af9e2d76b4f", "99e7672c802ca703b45af5982044e7f449906b50", "3ec9bfe6f16c173fa0002ff20eea3b460f7a0e36", "62b6070dd91b69af024c282b08d113ed52e23416", "9b2ca86dd018cd8bd75142849d9fa79e1b818abd", "5c2eb9754629d60045459d6bd3c1bb39067c7784", "ee7cf297c87e5bb94d2bf04b78a391a23fa915f6", "a485a5658d7c08fa7e8c0defa0136d0bcfb94a40", "4542434c65dfeef4d79d352edb2baab44d36170e", "e4eacb15fbd55482c948c7e815fa5276f2ec2203", "5a75a95103ce6b0c66e536a819e3dbbda37eb795", "b742441f55922232cbeca47acf7a294122887d99", "86067c7f70eb12cd9d250b4b4b07dfedf06a0d23", "593cb2c8fbc0804ab3f636dfb095863cef21a8c9", "80d9aa686846fec9b7689b9fe92c379f2cf4762a", "a9142908df0ff6a1f17a608c86b77cd6436083eb", "b7a640a35d4ceead8d3415c961ba350433b83dfb", "6d23605396259fffbf619d331930fe7929444042", "618106222c6764a9ca8111e0383a6d155425ba6e", "1428ca63f0ba34412af52b904fd8438fc68c03ed", "621840c3f800fac9a0eca26e4424225596b12e22", "91690c69a4549c69b3a601b980e1b289240dc119", "714c79bfdb90da816e2b7c875ff45b905ce127f4", "48e860d8549fdb0b2329a701719b4c6ac733b8ab", "dcde9ccdbd94e3f397c7aad753157841ae107ad6", "6684852e3c9e21056db19e04f2ad577f7dc903b1", "c57904a6652d0c8515a9fbbc7ca1f63f2ca35f6d", "5da1ba24cdab10ea536846dd9d28689872ed39c9", "a09051a7add2daea91027b5a2b45088b5699f77f", "ba32c2cb11f49291043253a744880f9275d5571c", "75435b3c0650efd57fe5dd7ff1d27e712b1087b5", "9394d32b0a01c4c3fbd150e70fe5c8375aa8090a", "8051a06a73131f36cee70ecf7d216aa44d98950f", "d7b2ec7ef52ef42ec7603112a0ddb090be4f2384", "0774e81e05fe4ab678b54efab0713dcc0f0f99e0", "d28524f4624335f7d7c54c9a657fc69afb68b5a9", "509644cb4df68a25db787325d4bf48616b5531c9", "7a75e2eb29f0c050493da308c968bf340823fd40", "e56e29ce9b8379fe7617449ccc822cbd8b771827", "352b184e3713506e8f8fd54a05fb4c256e2bf1c3", "c963f107d7a45806a08e3d4ede4448813b6c3bdd", "bea1098bf34c98bf67f748781fafef05861a4729", "7f2f3b5d88e2dfce6a54ea87ce852ab444538925", "53449d7732484889c3e721055eb068df9539432f", "b811fc14ccd41ee829c3951452f1f7d1c7764a51", "65c47efd0d9558d57d58f45a7de5c7dff947f69a", "976b909bdda5819602815d079479806f5eace34c", "009691e357f538c6530a4d46a28429d4cc366176", "23e23ddef4a0c49f3d89cb71acb546a1e71978b3", "522362e41f59ec33f3478c354460935ebe3a47b6", "c99952a47c06c3e0c4ce5dd9e956a599e8330b51", "10f0729b6514f878caca4475497eab8d1cb83ac1", "ebcf78fd6702fc1b0be4a6d34f0b0b29ddb90627", "f593ab9a5a95abe8cbb83ae16383198aaaac3b80", "4113e0adb3061826f7c9d12924e4a2720958f009", "e08e1080fc06e51f699925615f52c81c3d08308c", "91d2ebfb7c069baba20cae2a09443526e6ad151a", "bf48305ce31f6a87541b51b91cdf448164898a62", "4f442f649ebfa87f828d70e8d57e11e5a6ac5daf", "7893e29b1dfbaa54c3aca50eb3ef78a727cc6427", "3e2537939aa4e6d6bd41e1dea5774781a2878a80", "db00bba64c809292494e8827cbb4d8eec27d2012", "9bfb7586183e28ae341f45c221e49c26227dba5d", "710fdc3b79d8a8988aba8d3254fa9f1a00784afc", "1d7f61113c8f11f9fa3acfcac887a4b8e47e1452", "a84d564b5a49e82e5f758d1a50791056ba75f14e", "f525a760dd9b18c2645780357d3659ee550d0eaf", "704e0bb6723bcc26d460eca070436de9aae68951", "86ea71eab5cefcd454619ce61c3aeea3cf12e596", "98dbac429fc2d8bf6286a69d17ed8a533b91d680", "f410ad1904318912a515f732ba7b91fa96249fbf", "0ac1a786768e7689fec019beac234f73b18766ff", "8cdabeaf6645e3f6fe5351d3f23ca80a7f277396", "1d41a0de5ef5a64ee84c046f0895894cec53a534", "b588078ca24de412c6cf696cda2d04f715ca023c", "2ed57a55677a731d849e6457e7088fa1a2f85f2e", "a89c3bc06803b63f910ced722e912f5c7b21b6ee", "62489d6a2d1bd94cb4ce76b2ff57e4626b192f29", "eaa60d6356ba2759f6f04a9038ec58650860bd37", "caa3c9ede45d07c63e919d530c2a477596f58a7e", "26fe052dfad92aefdfca9d12e466f27ac5e5200c", "96330110956d8d0c16124b5c929ae3389b609fd9", "0f8243cc59951efa8d6eeb39305e0af1f7792a6f", "a2d309aa19f2345de57e74eadafbc78c12837087", "a8596291fe2b6b1489028229a24cf411d7bb2aea", "3ba72c55c61425c63134e34988d8672926dabe9e", "ad74a62830fca2309b2c648f5483672edc499e80", "90b9b7b8dc992ebf0fcd5174e22c5fec2b8f77a3", "6754a66a3b3901f6bfd0514305cca0fbd889c228", "5ce493d4ad19c013616b9b191c74bb4d114fc741", "67bcb239df6309eeaac906654a7d6184e871b6ab", "f35cd9afcfae757afcc67a959d612de96740e2c7", "2876f2dea281ab9ccb2421e6327674e5b39cdae9", "0669bdcfbbb88f91310962d201fc06875cc4b4fa", "af23576519170dbe6e8e607c6f2f2c34d5bb4f1e", "36dc09adb35ac9ecea32f8d08ed4d5b68ca4b0f4", "e76d41b88ceba914903bd84dea0f67309bedc33d", "d191eb5285fded3474996de766ad1b34a1299f12", "a6903f0088619ed470af6871917ce8e53d220677", "465f3a53e6cb7c9f5aca14046d6d3771048070d7", "fb8562d26f00fcdf01bac5dcf49215967acd99e6", "94f523b8baa701b49a100f20669aff84ab74a031", "91614df0b6c3aaf6e703abe9331ea965d6ebf0dd", "37376be535cbd36967255e20dbaf6d10683d97e5", "f5f84e3d3a4cd3cb9dc4f9a81028bb6e05c0e149", "0b73dbcd34226654ed8bf145d8d2f9c055576042", "55bfd1f9142bb7e044a63f94162cb7f15851877b", "32749da166ee1dd9201e3de6e87486755dfdaf18", "db482abe1dc2b76173b189e34e40e9f2a0f2b09a", "d9d8c8c4c2a55e9451ecdb980bce9655ef74bd21", "5e598f507165d5d52f9d307125542b630ab44b0d", "7ae0ed405735b0b5ff6a729c96799d44f64b4132", "0df5befad6db09805309d155242d4ef94536f352", "d9c37dc4bca8251f1b5a7ddcf86eafe0ebf8ee83", "a1d6817276f006fd0d183994b51f4afc62d87701", "98243008c87b1e40444f19518eba9a5a7f92c30d", "da28967f1d1b72c346df9e480d5d48a9eb44f357", "de1e78f5176d5f9840fddf80f0ab81fe7e718dbc", "7d7eb46f344d1006b1db8b2135272bb6da39253a", "381d70cf1524d247dbc6717b8ba7dc121e595e95", "c03ca7c7fd0da35a74992a842d4f2f57f035b779", "8d66b9b9d5976d7794a1689ea5104a8344b5a7f2", "21bbd4f7919a6ff9995008319c4b3f3c49c0d964", "cff30391d7bef85267eb33964a2c00c7baeb3453", "1eb36f4a4fae6f112f94122ce0f30c652c060b30", "ea1fb175ab8b47a80e5e64c3edc4e5c466a6d2e3", "df6ac299943c760980faf32d6adec03376c052f3", "8a9907151913d0765eeb1bf14904a049a7e8563e", "9ebaf58ff6883930725d8a0203a6284242ec8e1f", "eaa7451065c0bb0b3da71e56bb4e5d521e7cd52e", "9b2e43b73da5891c51fdb532c36844e747dbde39", "87797773fff076cd5ce3ecbdbcb5d7009191a3bd", "7012c783c08a9c53fc1534fc9eea4c721b65c7e8", "de184ada4bb182edb863a371818234bee60433c6", "485e4b91aa16e028ab55c587f75eb6c30b7badda", "0b174af4e6592c09d6b000b6bae6802965b3dc7b", "dc19399312030055ce9a0c416c4d15d6011fd3af", "5e5a3f116343a54dc4b4c45ce50cb9e9f6cb8053", "241f44bb87eed96d6b243b23a53981d48a4c16f2", "261d1b3939d94e4d3331e835ff57db94f624c778", "c7bc6d15344b84693d43d299557c6d3d5b014603", "e579e9d2c4bd95204ffd4a248d95d158aede7bfd", "b2d60635e8a077f263fa33114580095db84381ed", "67a549ee37c4598436d100d9b35682c02f334d5b", "ba7ddbd951b5e79bec727c3d1149b7c741943072", "5a3d6f847559ca89be515ba5455c4e83b88eacfc", "eba4a549dabc85d16ab89bd877d402347f2e3d2f", "0bf200fa3536eeef4e5666d8af5a8fe8746700e5", "459a5567482e2babf5c1877d538a6d238c163092", "0bfde322d4ecca1f702b33bce56b8b4f939d2976", "9c97d51476e530059b7d6df031e5ccf769bb1bb6", "8c4c7657e7a0dcfa4a8a002692c251ac987a964d", "3bfe41802f50bf184fdf04ff54e4d875ee8dae3f", "af5f9de2e5635c880c535b098ba2bcd2f25f629e", "b30a45a42f568a6ba95e193aeff365971f4b1285", "7285c8aedeb196b877cbd0cdd092ebd8569e686b", "49a49902940e80d7bb40ba710d8b33c724536b97", "d32bad4ca5dd32a3692f4467321a5bd929511161", "db300e8d64fa1130877ba8144b6dd6bb40b9ddf5", "8e5af7d869ee5c6e047d658e2ae5d6f6bd1b8690", "15b1cddd73ac802e8b8e6783e048e8453a180d55", "f8d513a1e7a8fa49f958fe5946f282fb6e8b61a0", "049f0d8219ec4f3f58776f7092d6c94f48146389", "19c72d30ed19321d29695db2007a6b33f85bdf35", "a97d0c37aee655dffa9416765827388b458755f5", "2d0495569e1071cdebff63edeb9001bed70a7de4", "f987faf55816837e72092ef2dc797d19c4866760", "f8ee140d7bbe09d0c6f36d6de440f173334e1275", "9b85a0ee63cd38baf9ef6d9f44aa086d388ac73f", "361d6997806f499d3df7264c40e6ad6e3a68375e", "1c98e0c0d850730c6d91cf2551582dde56194691", "c4437dc0ed038260587f1b071b32c225319eb278", "2600fba17483c7c4e99ff520bbf62c3231e41ee9", "0c7f0d6aee952bc761910a68a83324bc7b2b401b", "385dcb966e918c9d490163d4e7fc31e4db6eabdf", "4beebc7dfefe4dccd5add4e99846d98fc073a9c5", "87a90bdaeeabc16936ce9592c0987ab0ec25bc18", "08591d53b1ebee961c74f6bdb1b7deb89f576594", "dcd3a1e0fbb423b5bf0227270910f8112c573187", "13b98a32833ba8eeced95e79d0da1e85b7c99f37", "86f78c52738d6a74a5ebb6ffc5d12e45b9b795ee", "a93abf7095c72863b4cae1f59206606607466c12", "90deab7472074af185a52c0eaaa75ec9a5720f57", "a5074b141233f8b1d4d26c3e25be2731cd535d5b", "7e7cbd6941bf8e901911999e17a64c72be588771", "9e40106098b15bd624100b6420afa56441bd41fd", "33914326d1633ebd8d0daac2507ccdfd94672f78", "d3acffd997dcc5e252f0e8faaf9e4256b192ed28", "961257c6c89ac7424a409fdf3fe75566c174fca5", "5443ff0edcf39ddbe23abb97f5ba10ba0d423056", "039d171d6da582082c7470c51651a1e0a9555ae0", "73ae8c388d0d4afe1c67e7475a52da6d4478fdc4", "9712c6aa705eeb9633abeb41f83b7ac10f37582f", "57b618c084296142ce3f4aa11f0afebd6f28f5a5", "204925d67500fa757d4556695d14cecf9c6018a2", "51564fae9ebd34aea6ada1a0e6bdf9867819f6a5", "9077af8df298e38fecf18fa398126761d7553838", "4bc471ca6ac0660e505b20b3b018ff9714f2d71a", "364520aad3470144632c81d9eb3abd44be359e6c", "86f32120ed47e82ecd07e6c1a3461373429e3891", "21fff8b2d918d5fc414877341c4c28835c68c43e", "c73d9f53fd2435511fc46038d0021cd7b141f4cd", "fb95d3c09ea186bceeceaf254dbff15d9fb6203b", "e50f172f0eb96da253f40d95493ecef676a13bbe", "cf5f364f54a11b6da6b130cbc9e2b65bf57459cf", "72f92b849bf3f3abc78130094ccfe432b7183f64", "bdb49d320377864d8c66294cd7ae47e20be705fe", "20907e0ec46ab599f308d5817ddd9ac7e34a094a", "eef27a88c596c795075d65b04ec3f1feeaa372af", "4ba56b7b4788dbb856548f8551d24899e5bca3ec", "7280c48789e4df146f790790062fb954f7dc9903", "97f03e91ed7ef63916987b011788b07061a95361", "c4594e01581e84b0c56c2e80b6499cacc9e858bb", "0655f716b53b78989d255d99327c71feb2509c98", "615bb8ddd9a032088274db44deb9600de14ae57e", "4598f37208e6d2d42f3401fc4ba0caeb1be969b2", "a16f06c9498156ad304c348ed10f33eeecdba568", "67259a43d915ef141406d56176b8e02aa7f18980", "dc53ac1d792ddad2710aa8aeff0f22c88eb98ebd", "e9a65f8e7bd8b5ef32e53acb185009976d4386b1", "9c9bf52d1ae46fdcd0ac9890d0c7c25531c24572", "0a99a35157b651f62923bcd9b6f35edcef4ceebd", "fc5415f0d9205f68782ca65c32cbac6cb8f7a678", "4642b91d562a41c88caae766e29434742434b17a", "16d2897c0ddf9a74168b0a044510aaa0fbeb1c62", "33481b4f71e34a4b42f87b51bd57785ddbc67bae", "0459e6626c679dc4548689ed2b5018808458242f", "4d8273a52b1ec7861fffbd2e5b7b655614ae7d1c", "06d99cc2241056f445a63093734f79826a83c946", "0fffabe49bd10ab3642c4e866586aa84df83c701", "5e5e70c83463228403173a26728d0ab704d8c843", "8e55e028f4c745a81e5437bbfc5deb165aa0a35f", "72806fdf772dab194d7250fc70eb11ade9ca8600", "404ecf2b794111e20afdfcdc973105d5ebbfc37c", "c6a3e1048c95b0e987861a72dc4d2034d49586c7", "c2839653986b6994344fe149dec95efd7f9c82a2", "3e5c14bfd64201882b7d88a251df1157b80ecd40", "997b0dcee58b1d12855bcd20e3e28535ec92e4db", "2c6b79107e175244186289d6b526b670a6bcb122", "32eb958e969a458e110a85a90a05b21b6a135774", "6c224be63f8e406c47472653a07c871c84ef95a0", "f7230f3bebed04913089a8ce0d42d5744206f355", "cb8d3ae76d83c0c6263074d448d355fa0986ee05", "652c051efa4b30c605d0754c2aca1050213b5c11", "a1860a9e8b5bd3a4746f73dee3bfb600f564b4e2", "f9271b6f4b7a18d271c5013441ab79c0e8862b07", "c3abe3102f731033a1353b6015bab2897aeb8ed5", "1a821e716610c9493e7e55c9bf22dae5945ae7fc", "6a6020ab235de7e5d61e9c6c423214d9a1ff8e1d", "93ae2846dd100bcfc53c113aa23d6897e6e05e80", "710bf97e575e1ea59f32685142b122dee3cb17ac", "8c55f988fb40fc2b4156f192dc5ac6dc2d9f1953", "5baa06e27c0ae632dc0a086f7bf1aecfbe642392", "bdac6be0ba5778abbccefe5bcb5dd7ad4a6b0698", "a57df8dcc3f452fd67daff4f1f20135a0c5f8574", "659a235d737f27e0d2caac6454b73d522d03a845", "ee61bd4bb69698cd8e502f0e288dd8188fcee81b", "1a853cbc36a935af7d0b761141263a61c1770042", "09f48b9a27f5646d9a41b339b53606065c76c806", "a5c3c61277f4778f130878c279ba9fd27a7992fd", "ca6c8bc4a801059fccf1cc5ae9a55cf8ca286036", "555c87fa33d8c02205b7c136699231102b43d388", "b936601629502b4b82be97ba698bb2b91461756c", "1e20a6843d3ac053a6d67a30ab7ee0f785cab90f", "e8d6eafadf0f22ef063105e3ca8e77838460b135", "a3591adf5f585b90e916bc7b6cb8d1926e6e3a75", "362ba879c153267639191514aec32dd8249cbe75", "476b2b91993f84f5e4d63f694a40b975608e716d", "112a6d757289623cd5c556892003b10c244801dc", "4f550b913c15ed21e4c7b867024e6378affa7d46", "56e9068ec616c6c95052dc39dce12c98471a778c", "6a10077492327220dcb5d8ee88e85e5c15434930", "8551e76228d4900f7017f4aac28de31c4e97be84", "1bc9912b89779be6c83580b54c59288bd8964299", "69491ac69407fe834b83096dffb568c6e8d089db", "845ead74128f353eeab461f071885cb91a1b41d9", "b128d0c28d4a0a60d6d257f1e2e3dc3049173067", "09a152807b7e81e99f0368519f131688442e41dd", "a5a9e807419f1c52d674ff57e95fc4432ccb3760", "e1aaf1483c960b1fc4b9a954ca6c08d5a9748543", "534c036adc55c40329e992f25abd3915eb6cb3a8", "17b3b8c78bf3187424a07300c6c5e5f3e0dc3054", "61db48cbc7d6f43fbfd2cb22c51600b1c9fa29ca", "c9a5ec2b30e5c8c5a7cbf08cf339868fca5afec6", "4824f8fb57e450b4f2cc3cb1e9b7b2849806b125", "fbfdbfeb40ea0a1040854dedced71b562c5e42bd", "5cefac2716f79929d2b27e64ec46d33783a1b86e", "202fbc5447b80cd0d92c17c2b6e36c567f89b726", "8b87097ac9809fa88e6bfb5911e0d1efe918b39a", "e4069921c1943c5c44f7a9487c8eee621e6816c5", "a02b0cce3233c4b0c62c054d325bf13d397dca98", "f75fcdb2745c11521dd472e66337824f91658cd1", "8d3385f193198aaeb4f764c481f16870395d1358", "b0e68b754b78a4abb8fc204323badbbfb663cdb0", "a008f1cfe4c0e3b456804e4100fbf5f7aac6ebe0", "b344da7eba48533597a83b59808e6e2cc497aef5", "7853f833efd6459adefa1047fa954e26689a0006", "e870ecfdf63f9912678962c09fe3198386f99c09", "62e8ec48fe7cd8b550749613612a7aabf7884609", "4704c7790a274b06808f6c985c63db6042efdcb0", "95f854075cd58a31eb979c4cdac8911b16804f2f", "2d447e9e1866ae5bc9769f4432aedd94ff65d718", "692d7ebc59f207a3af6f9a836e636a3468caa8b0", "d8c4aab88d02aaf0f516a7df8ab66ab71473270e", "28635e7c1ec562f8577dd2164c5bc9ba6741447e", "c7f7a0406b38a80809871e761b8fc3b45ac86629", "02c7b0dd2c9c31778e407460b4742d4914587d74", "15c3dccb278f4f395083cc5e96970011929b5f72", "3dead28b7951c374ed61db3fd36eea24ec27801c", "548be1f4b2d9c6830c7849b4d4291f4a1c096e45", "cb1475f7c77192b69f92806481abd3497b2272f1", "80fd7ae173e9e2517013659dc9246321d9ac2235", "42a8271fd6249fd07d42f8f587c0e93e60b250b3", "c8b68c830033c78270d85eafc2db1607d0238247", "0bf14cda3d11fe5cf16e0fab44dc0781c0eb4c8b", "8e3030332749416edc2e295676d29f3908f532bc", "bd168aab696bbc3f20b382f6967eb8f026a4856c", "b00350cc59b8de23c29be6dd4bd313063f73151f", "592a1afe7a15292c2d8e08b9d3dfd30b4cec4125", "1329cc539e959f290b925fc8a00abc3194a9c156", "200e3508dde3324ddc90ffe34ce17463379552c6", "17e0a04eb6bdf3205bf1021aa353fa1e889f6dc7", "ae6ff1fc8225760e8e25e42a0b9306d2f0a9fdca", "d23c8649e32cb252a73684ef8f9e0c8f6b6a3259", "fa672a5aface0b885280fd9600ad72a19a079eed", "ffec58ef745c6f70085344ca419fe47e0d383500", "e1a12b238379a0214de769cb6b060946e42d0e38", "418bf0bd64bae68883676934f3ddec34e3c57d6b", "9cfe024f5fd7a19ab9278bed10c180975b17dc2c", "48ccac7e31b74161c4bf1b79b18458dbdbba76d3", "f6a0f29ccdce3899d04acdd93ad01f716347cb0a", "969be49c50e2c62d1568a187b8ca654c8bf6d63a", "15cec114f64ef21e431a713c639052a01ae93b6e", "bd056ada6e8a36731645ccb0b4cbfd59e4e6bcfa", "2a301633a49562440c05d8431318d5690b12ebf5", "e1b7b865b9b3ac82f7e4f079b6e26859efd7b5f6", "df599ea2d6b903d9a87ea9bb86baeea037803097", "a00213eb507b5053869866011c3aaaffa016488d", "e7b74db80a7d80c7a6bc380b8eb8d2c8abc21371", "2be0656d7edb1ef1bceb7cc4bdad62540713e416", "90b36d3d62a06ca0dd368efecd180a7e1c2d7d41", "36d7d34eb620f32e386322a293eaf58cf253a3a6", "07fed8a15f4ca4f238f39688309714987751c120", "0db54786bc838e65c370ed867680d03859fd13cf", "e8af2c48b4bb9af3bc99d369178e1dff05a8b2cb", "24f3d77e5aac66bcfb28d5d2746be79c2a88f12c", "7a79cf5bb23f43c198668a2705fb0628af9e69a5", "8fa3f6932bfc7d17ea50a4a57a4105db4783ceb3", "ad03bebade5c7f5229d53155bfabb13596918a91", "c2f6a7898a37561c4566a6c3f33b66661b540997", "a59c127e691222eb7014786e4fa12a3d226d0229", "e4204e2ddce492182c1f5b15471b85526bd005c0", "89e2f336b7667b5d6100f778b2d4bbb48fcb3209", "c672cae0641076d5871e1913c94f89d9f57be6c8", "97164a0afa05dda770bcb5e79a95c97cd975d5f7", "e870a2043f7f1b780b5ae7dfe149848177b4dbfd", "2f32d1868a0e0950b304417a433775c08b1ceb74", "d510ab312fa8d695d12babc766fa78facbdc9ee6", "b9234c15055235bc5c4d06c1c56bd6d7fd6b7b11", "5aa3fbd9cbe851aa63e6e4567c4d235e8b186f07", "6102522aef319ecd5149792824c7a17f51334681", "94e0726b04f349bc8a5ee29394cce902177ab087", "c35043eaf02a3f9e17752e30c8e85bc23e939b2b", "50d5da1402e4ed18ba5b2c335e26c407118a21b1", "56190147723caa3ae347c6ad61e1c1fd8f3af3e1", "6b0d98eb1314d8bcb1637dbff5099e02f14ac11e", "bfdfe26aabbe659fe944bb347bdb6e604829edf4", "4a90d893751e48c5ab493dceb7cf0db90905d324", "d222ee6f9fe4d6cea06e7320e1f966fa66dcaa07", "d7778cea5f73698713bc25ca0a6675f9e7e58e90", "0c678027782aab29ed7d38907b9e3c46fde7c155", "ba5b8f497b6d03c346efa441c78b79f7041f00ff"], "father_version": ["1b23cdd050309aa49ab89ce784be1970e43f5141", "85c0c4050322e090231777500134b7798d7e2d23", "41fb9b92d147bbf108a154514f176fa3ad112380", "3380d41ee45bce97e55686f13b69b4c6e89ea829", "cc889f53a0f772be89b0a0c747238cfac5b489ba", "f53c39a1518a090b46b933d142535c475c8da6ca", "851ecc2b236bed2bc9dd6088059a42e79b20edbd", "6d642c467b3339c53c3c746d14a1641565ed7d2d", "d100529e5c519b723230d6601cbb4dec587c39fd", "4acfa924f3ceeaa766c1e427350cc5ad2a3a1fa0", "139aa9e9fa75d3484aee32e19f499b0169e4ce7c", "bdcadc4e6968432c28f2c9f55515c3a031448473", "5c929b2cd5b70b63787336c00ee56bad7da7b710", "938c4b8b98fa95275c7b7badae042b259076cf10", "78bcd9c3915398338ef3a819dc03a4b3c9937689", "188a56f23fcd15b96254dc260be333838f74776d", "a27e015f338a3f1729da27603627223f6266cc8c", "648a6508a240fec8fa63a63687dfbb66b6c05874", "c26dc62eb3026441d6c02f7c9271e40e615d3cac", "62db4382f8ab5d6185c3ed94f02d46db6059c187", "8e5496c7aecbc4f7303ad88b8715dae12b314e2f", "6464a3e12c8d7f7b2446de5333ba9f6e470dd2a4", "fc36c2e3cc99eaa316874a24221d306f42b2bf9d", "4875c8d29d0b3c399169a47963decdfd635ddc5d", "f08bb1c81e2260ddfb008bf2f4c1a09dc4b2aded", "263cfc4ed7c5b1b24a70f587f974deb6735703f5", "81a6e12bd949f88dd80a13b2735098082a23d331", "e862fed320697b843f1c6c147688fd061da3565c", "bb3de4d5e841e3c240702ba84b6158d562ff60da", "2992c780966f235ab478252a91cf00f598d5e48a", "83357d7604c71e87be4075a8f3a1fe49c0bb2412", "df1bdbb64631a523aae74dd35d7e4de15637109c", "328ded684d38f4c4dafac9e18f61c5568111cce0", "61f5f09370b4ba6293ed96e91490a60fa6d02293", "47b5c56b77c7b59454ebcbf8729e3838c3b17fd6", "18d18c6757536c6f79e768cbc6801b4ff790788e", "6b594466d98e0a3fb87c38c0ddf6b403eea63f5f", "0bd549487ffee59268d9ade243cc71ee5d5c87bb", "331d0781dd0a8730808a9cb74a0d07c39f03537d", "9b592cab11ac29b8c7856a81516044c8f3556e4c", "7d6f871d95a372781ceb6d5c7e230248c2aa9b43", "626a6a96e18fba01c390078bbea872d2825b8c57", "44abcc127729ec5b9830858ff90ca83455bfdb7c", "a4c1e7a078dd292687132eaa4dd96c45cb764fb3", "0844c38bb93257d764ea7af8775e190383bfb55f", "df0fac333b9c08e73e46b71060a6c3b53c33ff07", "cdd1318c9911cea03737cf16ef3e434c164f10da", "a373a7454bcc736a751dab352a08e06af7b4c8c8", "e778185aae1fb9e18239cbb08c62b4ac2141c535", "f486373e4d272e250090f1b2de34292cff9f77eb", "70985ca20b4e97f559deed54e38e341e3697547c", "59c76719b4397b4692115d2c68cd8271201217e4", "d324264f5341104fb5252886057e9fe8a557f4ba", "53e5bc14406a4c60d329beb62c7ccb23c7fd21d2", "4161ff4ac0e04c44b6ad76437977de60e05a0717", "4fb4391297b721f79c620b71700aa4b695b3ed60", "24404f32b88c0e9097f4c95ba7388644c0ae60d2", "ffa377c4d4364549681f741a0066f1efb80828d1", "abd5259d0c8025dd2ebb42e8cee8f790dca99ea4", "cc1f7fc3556f94760fc24bc076ca57ae6038a0e2", "36f61dfa34f0ec24cd096111d9509a7e6a0030dc", "76327be99e9a661abfeda81ee1453b8f5f973a5a", "8408dbb1e1b482f228c7fa2ffa226c0548ccd6b6", "fdded0a2c6eb14f64f68cc940a763a5a5cc6f1f7", "48f17b4a42abb5336a2d29563f0c5671b755c85b", "b297f3ab65b9f757c5de069e00aa0bbb181896ef", "e0bc69f3ba00471c4fadc2a0260528d2599b764d", "3ea50d21de7c206c5ab19c949adf6b1e4c7760e9", "5823b24f8c9287de9108e17cfe7273dce4ca1edb", "a426b3de9d0f128f68e230e7007c278ed8545355", "76371029572f75f20d0978f2ce931347e5b1d02f", "7ca73e8b945d159e74509b53ebf1311586661eba", "faed55eddf777766e1f6ea99efd9afc5af4ef47f", "5183beb6a1a23e3e6cf7e60115953c48316d319c", "a709bf95ec818401978b756c781421f288ab77c2", "75949abcfe602df48965b47d34aeba5df0524258", "1845058cfbff8cb7ed961288a84fd39ef05e36ff", "ebb02291460e7db12424de2007360cd359c1e850", "0579371235e54d67e8abdcd9ac952ca996c074de", "a7ca3be2aab8038fd66d6b9da0e8c77a049db616", "9cec180f7b994a2de973e643eccd1c298d8e619d", "0cb507279a46ba23cfd9842a3180d98ce4cb423e", "2a24dea7593a196bcf45ca95f8b5af14a66ff4e0", "10ff06c3617886ac33701d21dd91d9551139ef43", "11f5aa77097edecfcc26866a4da5a994f82f2d1f", "86dd3ce3962620d23f4d1a3b3fc0178d7409db72", "2ca40fe3ce6398520223b2f27bf72c4e2658bae3", "6795ed3020aee398c94caca151dd05f489ddb051", "ef5aff7f19eaaa0b91a0abb164d62ccbf24b477a", "68621a829d3bf74a057f367e7d559a4a1fc69348", "d1fa77c228bebeedce940d3d3ce8ff0adef8e411", "a62e4b7d533a787c71c43ceeafd7b8f652d97bdd", "0212f4f231cc1866ad2748cd90febbb51ad14962", "0e0d718adac8c5ab2489fe013dadbb8ddc1892a2", "01fda23fea9df20e205139c3d72a349130b511b7", "b279998d2e5d6526278b06e16c4487ab687cbd3d", "85df09b669da80ebf360d29f44b92e06982a4111", "837fab3c9e348af66bc2afe734106f36c6cdf5cb", "b3c893abd272ea283b260f13d988eb5335726f91", "906642ab4a2f7772deece7fc6e82eb679dd7ba76", "63983022a8a3716678be272162f0061b3ae5f9c7", "ded75775109f886652430395e9b204fe13899d9c", "723a4dfffcbdc713abc16ce47e9a73f555275c50", "62366f716d85cee191523bfd85c32a0d29239a2b", "b629c861751b87fd3db30bba1dffb39b1b7f3b66", "b8428cdf9ccb0a66216c6de80657f994dbee0fb8", "8485a16a99b4965798febba12645cf1107149856", "75720beb5f484b326d1a29985d4fa8daa96c368b", "d8627c252978108368c77c1535a38fdb022bbede", "c8995242dd6a001787ea48f0dc04dfba04a41ce5", "ff5f32e0811226295229053efc61dade9cb7649f", "e846356c71ffef308756bc3b7b9b31fc68d36a6d", "b400d02d0e9b1466556f62972f37d4a1ac8b5d0c", "1d4a0e80c499124518da2d3a454a3afe7f9d19d3", "b8e7a2c83cdb4de9861bc79a125b755f1f50e69e", "ab1345cc04f6cb7b968ace587aa3442344dd2f9a", "54ee021f6253fb047f99369de4334b90d1aeb611", "61eb4dbffc1caaf551b90d2444fc671f69708a1e", "33b2ffe0b0f5ad5cc51bc0e8a527b39fc60e04a0", "97456273cb3ef2b908a27c1600bbc39c6d741252", "9748bf19c33bdf7b817d6658f1cd6022d02968b8", "0c2d5130b9bae07f4fb3256d138c8eccb7c9f8b2", "2449384f1e650ad3ff2be9124f170e4850647a5d", "19022b07f545caa24dd90c4936b32f0ad3b2c66f", "525f068cae81f95a17134ac640175af9e2d76b4f", "99e7672c802ca703b45af5982044e7f449906b50", "3ec9bfe6f16c173fa0002ff20eea3b460f7a0e36", "62b6070dd91b69af024c282b08d113ed52e23416", "9b2ca86dd018cd8bd75142849d9fa79e1b818abd", "5c2eb9754629d60045459d6bd3c1bb39067c7784", "ee7cf297c87e5bb94d2bf04b78a391a23fa915f6", "03713ebb82edff2f406c8662346ee7bc36c38a6c", "2d24f0cd207c4d8f34895c3f17c532fbcd651788", "e4eacb15fbd55482c948c7e815fa5276f2ec2203", "5a75a95103ce6b0c66e536a819e3dbbda37eb795", "b742441f55922232cbeca47acf7a294122887d99", "86067c7f70eb12cd9d250b4b4b07dfedf06a0d23", "593cb2c8fbc0804ab3f636dfb095863cef21a8c9", "ea847074a1dfbcb048015671ebf466bef2bd4b97", "a9142908df0ff6a1f17a608c86b77cd6436083eb", "b7a640a35d4ceead8d3415c961ba350433b83dfb", "bb5e0dc45b763e9eb9365cb390080152c8d143fa", "618106222c6764a9ca8111e0383a6d155425ba6e", "1428ca63f0ba34412af52b904fd8438fc68c03ed", "621840c3f800fac9a0eca26e4424225596b12e22", "91690c69a4549c69b3a601b980e1b289240dc119", "714c79bfdb90da816e2b7c875ff45b905ce127f4", "48e860d8549fdb0b2329a701719b4c6ac733b8ab", "dcde9ccdbd94e3f397c7aad753157841ae107ad6", "6684852e3c9e21056db19e04f2ad577f7dc903b1", "ce6151d3529d0f0e8060b331ad94a335eaef3b91", "5da1ba24cdab10ea536846dd9d28689872ed39c9", "a09051a7add2daea91027b5a2b45088b5699f77f", "ba32c2cb11f49291043253a744880f9275d5571c", "50e62748068fe59a41739448b573cd1c95554c51", "949a2d99a55741e7556f6232220bdaa1b0de4f73", "44dc6f609e941bfa6855eb3bee0032663e28b5d3", "b13fecd276457ffbcf94279b5ca766fa74ec32bd", "282a893e90f9e97d21a77be257efeb5045ec9b6b", "0b0421a3d9bc8ce857c8763177f342a859c9baa8", "509644cb4df68a25db787325d4bf48616b5531c9", "7a75e2eb29f0c050493da308c968bf340823fd40", "e56e29ce9b8379fe7617449ccc822cbd8b771827", "352b184e3713506e8f8fd54a05fb4c256e2bf1c3", "c963f107d7a45806a08e3d4ede4448813b6c3bdd", "80f35496f57e68cbfaeff42be300053fc35fdd03", "7f2f3b5d88e2dfce6a54ea87ce852ab444538925", "a998ee130a8f267b77a65bab4755edd2ab41597f", "4dfbb7b117087dfd55f1d0e6797d195ece557e67", "65c47efd0d9558d57d58f45a7de5c7dff947f69a", "b72e25491c1040b61ec17a60153d7cb3c79e64d8", "3536259d083f07d6b2415d0271454cbe79207ee8", "a6ebc4313e07074fb3e4e4cc816c790484653356", "c4bfe01c6546956c7285bb818096fa15448e8278", "6303dae0ad7287b0bff2a14ef7665d826708b108", "10f0729b6514f878caca4475497eab8d1cb83ac1", "ebcf78fd6702fc1b0be4a6d34f0b0b29ddb90627", "f593ab9a5a95abe8cbb83ae16383198aaaac3b80", "06ec63d46c83368462c08b82d844c62c583d9fd7", "05fb158536c8caf5a8dc3e55653ee097ac3ac20f", "02359199c7651f82c08675a49234f13c8ec85c40", "bf48305ce31f6a87541b51b91cdf448164898a62", "4f442f649ebfa87f828d70e8d57e11e5a6ac5daf", "7893e29b1dfbaa54c3aca50eb3ef78a727cc6427", "3e2537939aa4e6d6bd41e1dea5774781a2878a80", "db00bba64c809292494e8827cbb4d8eec27d2012", "9bfb7586183e28ae341f45c221e49c26227dba5d", "710fdc3b79d8a8988aba8d3254fa9f1a00784afc", "1d7f61113c8f11f9fa3acfcac887a4b8e47e1452", "a78259cdb483ea8db28fab7789f6922f598d0dc5", "f525a760dd9b18c2645780357d3659ee550d0eaf", "8a6c52f53e8af5a7e7fc9e7f4e03c3aa286d1578", "53b734c56dc75a7b2a929a60b8035f4bd0fef067", "98dbac429fc2d8bf6286a69d17ed8a533b91d680", "f410ad1904318912a515f732ba7b91fa96249fbf", "f3ff224a1d12b2a8d99306bdfb2f47d60d4e62dc", "22c0ee1b777e48d1d829fbeea559c591ee692f58", "fa38a82890871768c5828ada5537b61b5028aa51", "b588078ca24de412c6cf696cda2d04f715ca023c", "2ed57a55677a731d849e6457e7088fa1a2f85f2e", "a89c3bc06803b63f910ced722e912f5c7b21b6ee", "62489d6a2d1bd94cb4ce76b2ff57e4626b192f29", "eaa60d6356ba2759f6f04a9038ec58650860bd37", "4b8a1819590d6a81a4444817a052a2169dd2f015", "6d23029899d749dd888949cb277fe7e2d318eb57", "96330110956d8d0c16124b5c929ae3389b609fd9", "0f8243cc59951efa8d6eeb39305e0af1f7792a6f", "24752b1bd1153bd9794922a9889f98b19352ef2f", "29e5c3b8eab786e0b5e849d10aaa03d8a0bb5768", "3ba72c55c61425c63134e34988d8672926dabe9e", "ad74a62830fca2309b2c648f5483672edc499e80", "90b9b7b8dc992ebf0fcd5174e22c5fec2b8f77a3", "df9edf9869b62ca81179ccddca8cb9570ae990c9", "5ce493d4ad19c013616b9b191c74bb4d114fc741", "9b293387550af8f5850960e55d7fcdbe3d583074", "cb6bd880055f091a3e80653ca5f9bdc9e1732d00", "2876f2dea281ab9ccb2421e6327674e5b39cdae9", "5be580ba5552d41efb76a9668f11588681b98c83", "9c830d6e99aed1b7b7e256b8d615201cf2eafe9a", "36dc09adb35ac9ecea32f8d08ed4d5b68ca4b0f4", "e41ebea8294892948b53659457ed9000445ad063", "fe64238eb77ca341090e536e1a7400e0eb654729", "f111c9841b7b3c6bc68eb7ab61b3e5d20ae7c43a", "32b7d05715f7885d82b637f1fba2ed6a188f578c", "fb8562d26f00fcdf01bac5dcf49215967acd99e6", "94f523b8baa701b49a100f20669aff84ab74a031", "91614df0b6c3aaf6e703abe9331ea965d6ebf0dd", "b0115c86e47c9b46e6b93cf8db0e9e0bb684cee2", "f5f84e3d3a4cd3cb9dc4f9a81028bb6e05c0e149", "d267bf789b543e656a92b3ccad2792e5e8191675", "55bfd1f9142bb7e044a63f94162cb7f15851877b", "32749da166ee1dd9201e3de6e87486755dfdaf18", "c74da46f896eae3e4e740bac0b8b48f2ea0b239e", "b58bfe431bb164ae6b9fae61c6cbf03ef02443e1", "5e598f507165d5d52f9d307125542b630ab44b0d", "da9ffa01c300d3b41df756cded1666507c4cb405", "0df5befad6db09805309d155242d4ef94536f352", "d9c37dc4bca8251f1b5a7ddcf86eafe0ebf8ee83", "a1d6817276f006fd0d183994b51f4afc62d87701", "98243008c87b1e40444f19518eba9a5a7f92c30d", "93459ff6be3456b824b65235dcef754303279145", "de1e78f5176d5f9840fddf80f0ab81fe7e718dbc", "e6f3168b7fe179aa9e802b553509b00f244d2eda", "381d70cf1524d247dbc6717b8ba7dc121e595e95", "c03ca7c7fd0da35a74992a842d4f2f57f035b779", "09ef857aaef816e13a74f100526a7918757eef23", "21bbd4f7919a6ff9995008319c4b3f3c49c0d964", "cff30391d7bef85267eb33964a2c00c7baeb3453", "1eb36f4a4fae6f112f94122ce0f30c652c060b30", "4387703a68f0e67835b7a05cd476900bf7e8bc7f", "df6ac299943c760980faf32d6adec03376c052f3", "bee6baa260bd71bf6cbcb08201a83addbb4e3576", "9ebaf58ff6883930725d8a0203a6284242ec8e1f", "2ac57ac5e2e121ce8f38cc8e55ba269e28ef689a", "9b2e43b73da5891c51fdb532c36844e747dbde39", "aa8077c6b6cce3a535c1bdf1f76655ff260e4e63", "31ecd6ccbe64b4af3d1819c5fe8909da04e38ccb", "9cdb16a3fc0e6e6b40237442f715e6458afaa20f", "24469241b0ae5415e02a5d77101401e82cfd19dc", "1e26609509515fad0d623b5c266797f31bd7e0a0", "01a7da9195f693dbe761a4627c8b6edccb5d8139", "a03c5633d57b32f9c36c3589c508f685092f2124", "241f44bb87eed96d6b243b23a53981d48a4c16f2", "261d1b3939d94e4d3331e835ff57db94f624c778", "c7bc6d15344b84693d43d299557c6d3d5b014603", "e579e9d2c4bd95204ffd4a248d95d158aede7bfd", "b2d60635e8a077f263fa33114580095db84381ed", "899a2c669fb4b64a49eb5b07cf68b5ec29ae7380", "ba7ddbd951b5e79bec727c3d1149b7c741943072", "b18f47a12287e6ca57e0620ba1f6d1798304a984", "eba4a549dabc85d16ab89bd877d402347f2e3d2f", "a8d9d5b8b11ab93b6ec0ee8a718a0d8eb9489e98", "459a5567482e2babf5c1877d538a6d238c163092", "0bfde322d4ecca1f702b33bce56b8b4f939d2976", "d38cb486dfd4d5a5b3f5aa133a1b1c43a5877127", "90239829afbd9fecd495a871515cd12fd91db946", "9d7f00882463d2a4f83cdcce021a2d9e12c97e3c", "87441b1cbae914f20389b0f22fd67aead915cf29", "b30a45a42f568a6ba95e193aeff365971f4b1285", "1ec0aa30d24d174f897772d192dbb67eb494a67c", "ec848cb7b72bd0df3dcdefb26f016ff2a35f5bf5", "38d44bf9d3c46a2913c83178aaf27b970b3ff617", "c56259db1fb1a2aeaf41e320256fc47b3c0112eb", "8e5af7d869ee5c6e047d658e2ae5d6f6bd1b8690", "07f00c64612f23a562aaf3ff6933a3c0ede75942", "5a6e5f63fd09c0599f8f5d43bf7d06dd4bb3cf2d", "049f0d8219ec4f3f58776f7092d6c94f48146389", "19c72d30ed19321d29695db2007a6b33f85bdf35", "a97d0c37aee655dffa9416765827388b458755f5", "2d0495569e1071cdebff63edeb9001bed70a7de4", "f987faf55816837e72092ef2dc797d19c4866760", "f8ee140d7bbe09d0c6f36d6de440f173334e1275", "9b85a0ee63cd38baf9ef6d9f44aa086d388ac73f", "8f1d893daa0801f6f6d6a61a5d56a67ff536a71b", "33da805beec96e1e3206a1142f9a236360f004c4", "4f863689b90101ac395c59be01b4273871595557", "fb2df07f68747a9333285da69bb9ad715fb2940b", "560d967207a1b9b692d8d0b5d9cdb5fd9f7e7c98", "f2bd5bffabb4c801cc27ad020e483c62e9c4e32a", "280391932d64190b4ee42f49e5f8b60382f2fa03", "87a90bdaeeabc16936ce9592c0987ab0ec25bc18", "08591d53b1ebee961c74f6bdb1b7deb89f576594", "c2914d6281cbb9649d33c9bd8f09fdfb6d55b61e", "a94bd148e2f348243353c9160c38266dc18b8485", "12142aef0f4aee0d122cdc51d9b4f07f6a630778", "722aec42b2e47cac4fab02ef3aa725665b3eff1a", "daa46cc7bea86fd3070d55ab098849db20e0f91b", "d46499c0f633064d025ee321ff2d4d02fb08b67c", "7e7cbd6941bf8e901911999e17a64c72be588771", "9e40106098b15bd624100b6420afa56441bd41fd", "e43c50b9a85da3ed631831f065bc3b00dc3d8b33", "0b54517a582b89e64c95d08f620e79d199741122", "0a7ebc6de64e4f3e83cd11c83fd69cd327106d66", "5443ff0edcf39ddbe23abb97f5ba10ba0d423056", "039d171d6da582082c7470c51651a1e0a9555ae0", "73ae8c388d0d4afe1c67e7475a52da6d4478fdc4", "9712c6aa705eeb9633abeb41f83b7ac10f37582f", "2576840b9288021f3a41f68e5f2da96de92e18a5", "204925d67500fa757d4556695d14cecf9c6018a2", "51564fae9ebd34aea6ada1a0e6bdf9867819f6a5", "9077af8df298e38fecf18fa398126761d7553838", "4bc471ca6ac0660e505b20b3b018ff9714f2d71a", "364520aad3470144632c81d9eb3abd44be359e6c", "86f32120ed47e82ecd07e6c1a3461373429e3891", "dd59f7b97ee0a96dd3e3d9fd5e63e1b5c06c18a5", "c73d9f53fd2435511fc46038d0021cd7b141f4cd", "34fc4f696afbebc5cbf92a61f125245b253a8545", "e95ac9ff326cd830fc7ac2fba8f1736ed6ea0ed1", "cf5f364f54a11b6da6b130cbc9e2b65bf57459cf", "82f759d933bad3881b8226853f190fa5add4b5e7", "bdb49d320377864d8c66294cd7ae47e20be705fe", "53c1ca830f7ed34de3becf17dc39665009ea83ff", "eef27a88c596c795075d65b04ec3f1feeaa372af", "31239e9062bef524a204bbd17ef75857ed26f1f9", "7280c48789e4df146f790790062fb954f7dc9903", "97f03e91ed7ef63916987b011788b07061a95361", "68ddc6790d64ed12c59cc0d50c6dea9fcda8f26e", "0655f716b53b78989d255d99327c71feb2509c98", "21bea8ad15c3e546c63cf5c67dac2008298fa825", "4598f37208e6d2d42f3401fc4ba0caeb1be969b2", "a16f06c9498156ad304c348ed10f33eeecdba568", "67259a43d915ef141406d56176b8e02aa7f18980", "dc53ac1d792ddad2710aa8aeff0f22c88eb98ebd", "e9a65f8e7bd8b5ef32e53acb185009976d4386b1", "93bb993d42543a9ead4cdd949b33895244cc0ee8", "0a99a35157b651f62923bcd9b6f35edcef4ceebd", "3232ac40dd21865c3729677ef61093b4894c7f94", "4642b91d562a41c88caae766e29434742434b17a", "69590381bdbbebd35e380fe06cbe747c5f4809a8", "33481b4f71e34a4b42f87b51bd57785ddbc67bae", "0459e6626c679dc4548689ed2b5018808458242f", "4d8273a52b1ec7861fffbd2e5b7b655614ae7d1c", "06d99cc2241056f445a63093734f79826a83c946", "0fffabe49bd10ab3642c4e866586aa84df83c701", "c97d1a767e21257d014f4f789eb036690283c829", "8e55e028f4c745a81e5437bbfc5deb165aa0a35f", "72806fdf772dab194d7250fc70eb11ade9ca8600", "f97d6f59fb987a2ed63530b2cb00e935de129208", "c6a3e1048c95b0e987861a72dc4d2034d49586c7", "3bed59e58ec27288dda9124a1576ede24ad05024", "3e5c14bfd64201882b7d88a251df1157b80ecd40", "997b0dcee58b1d12855bcd20e3e28535ec92e4db", "306d4b6be071e0fa7fda8c865df18ef99eb3118a", "32eb958e969a458e110a85a90a05b21b6a135774", "6c224be63f8e406c47472653a07c871c84ef95a0", "7ffd4ffc5c639db9f50c49c2b44f43da673d7892", "ac9e02c8e6a0f34e88282fa8a53c70bad5f6dae1", "f102882484e40ee9f5f450c44f9906e977a4d8cd", "a1860a9e8b5bd3a4746f73dee3bfb600f564b4e2", "5ff4d49586e6faa030d9c8a22baeecfc34888437", "528d7b6a82aad1c2b59854770ac6bf9e32c6383a", "1a821e716610c9493e7e55c9bf22dae5945ae7fc", "ed2e38e3330f9c21a69cd0f69f1754c269381129", "93ae2846dd100bcfc53c113aa23d6897e6e05e80", "710bf97e575e1ea59f32685142b122dee3cb17ac", "168ea1747928fc8ebac1087618bfc7446cc48c68", "3701b824e6fa253cd510edb6ff3ee5284ce98889", "9a0d027ecd646894ee62e94d1797f4f3106034ae", "a57df8dcc3f452fd67daff4f1f20135a0c5f8574", "a931736a41fc213d1cd987edec0f5f12aa715a81", "4024e2e204813db17b6e1cd43e83e76a978dc183", "1a853cbc36a935af7d0b761141263a61c1770042", "27c12d3fd3406b3e11c34c6c2906685d86e3631a", "c50f6a8093458c1c26a7c10c6ad2e60c9ff8cf51", "637e0bcd6b00d0afd959ccd12aa3998d040f6605", "555c87fa33d8c02205b7c136699231102b43d388", "b936601629502b4b82be97ba698bb2b91461756c", "1e20a6843d3ac053a6d67a30ab7ee0f785cab90f", "e8d6eafadf0f22ef063105e3ca8e77838460b135", "a3591adf5f585b90e916bc7b6cb8d1926e6e3a75", "c5004c4c44298a7095af5e84e2ee8ab69d54e889", "476b2b91993f84f5e4d63f694a40b975608e716d", "39ccdeafe67f6fab2476f5ff2c7e672faea5f65c", "4f550b913c15ed21e4c7b867024e6378affa7d46", "56e9068ec616c6c95052dc39dce12c98471a778c", "6a10077492327220dcb5d8ee88e85e5c15434930", "75231b195857f60297d8cc00e1cbc8a0f10d33a9", "1bc9912b89779be6c83580b54c59288bd8964299", "69491ac69407fe834b83096dffb568c6e8d089db", "845ead74128f353eeab461f071885cb91a1b41d9", "b128d0c28d4a0a60d6d257f1e2e3dc3049173067", "09a152807b7e81e99f0368519f131688442e41dd", "a5a9e807419f1c52d674ff57e95fc4432ccb3760", "e1aaf1483c960b1fc4b9a954ca6c08d5a9748543", "534c036adc55c40329e992f25abd3915eb6cb3a8", "17b3b8c78bf3187424a07300c6c5e5f3e0dc3054", "61db48cbc7d6f43fbfd2cb22c51600b1c9fa29ca", "af88dcbaff0acb1050d6f3f85cfc9bcad2bd1099", "4824f8fb57e450b4f2cc3cb1e9b7b2849806b125", "67749d3f14806963d004100e0b9bed7db37a2d8e", "5cefac2716f79929d2b27e64ec46d33783a1b86e", "32eee27ae32fe74b260458a5292a2186f7b71905", "2cea174668b938631489653f897070df7db651eb", "b729cba4aa993982a47885dada1cd23ac6938324", "a02b0cce3233c4b0c62c054d325bf13d397dca98", "ad413db21506f0a79f59504f57ba16e07eb64813", "8d3385f193198aaeb4f764c481f16870395d1358", "b0e68b754b78a4abb8fc204323badbbfb663cdb0", "a008f1cfe4c0e3b456804e4100fbf5f7aac6ebe0", "b344da7eba48533597a83b59808e6e2cc497aef5", "6fa731469ec79935da68c385b2af6488a0461490", "e870ecfdf63f9912678962c09fe3198386f99c09", "1a78d02f29ef73d46e352d13c80714b85effed38", "b78e6ee329e8531699bb68e349d5962ff4e29a07", "95f854075cd58a31eb979c4cdac8911b16804f2f", "dd1159eeb4df8d55e345611baf26c8aa86550262", "692d7ebc59f207a3af6f9a836e636a3468caa8b0", "237607111310be4cb2666fbce30cc05bd0ac069f", "28635e7c1ec562f8577dd2164c5bc9ba6741447e", "285e4a3c1ccc9f34913fa58ccef6346bcc3fe01a", "02c7b0dd2c9c31778e407460b4742d4914587d74", "15c3dccb278f4f395083cc5e96970011929b5f72", "3dead28b7951c374ed61db3fd36eea24ec27801c", "1e2dafff51bd442fdd24ee7cd2b84a3ea72b0f47", "43a373b8ef09bf7d1b07dd4d9079a5a8011dc26d", "80fd7ae173e9e2517013659dc9246321d9ac2235", "e6ac84f2196c09335978c4d9bf4f30110322d814", "c8b68c830033c78270d85eafc2db1607d0238247", "0bf14cda3d11fe5cf16e0fab44dc0781c0eb4c8b", "421d6683bc08cf9c15d31e049ef8e99f76df590e", "2af834d3d724e6995e0ce7685ab37fde2382ae44", "b00350cc59b8de23c29be6dd4bd313063f73151f", "12083ae0c4f57d1fab7b55d7324d9d07e4ae31b2", "a5e82d6f9f930133b01a3fff4b662e643003b1d9", "357ce30b74af2152ff6f6141603483dd1865cf22", "17e0a04eb6bdf3205bf1021aa353fa1e889f6dc7", "5a7ccfca9e6dc8d5a90954803bf4baa8c3d367ad", "d23c8649e32cb252a73684ef8f9e0c8f6b6a3259", "ca4b5bfb54164edaea2e583084cd8c4c1009a4db", "d5b727c9fb91e6b1804052bfb1b2ae6161714bc5", "5a291f49a6f5307b18757ef76b6b299c8bbd0f46", "418bf0bd64bae68883676934f3ddec34e3c57d6b", "9cfe024f5fd7a19ab9278bed10c180975b17dc2c", "637455d016314c48188bd0b47709ae5ecc620b68", "34f23ce914179d689f334b08f279f569029864ea", "cedecaab089c40427587c887cd7fcc58f5e252e9", "15cec114f64ef21e431a713c639052a01ae93b6e", "056c6b2874406bce7f13f60e19fbd4d7f0d51882", "2a301633a49562440c05d8431318d5690b12ebf5", "0ff528c9c2e270ba56d650878d20110cc9bb9b8e", "bb91ad353eacf40d66e13f05e0609a032a417cd0", "c61fcd5ca6fa2f073406b5020fb5bb3b669bfe2c", "775208e81f3f5c7fa8b485fe68fbf3a74d8e25ee", "2be0656d7edb1ef1bceb7cc4bdad62540713e416", "2ae0f628a51f5f8d6319176e938c3e7a58495fbc", "e97999aedcd7e7db1a8984d02026cf27bfde7f06", "7932d70c02c345369fad5969ee9a9838d6325983", "097d4f9678b670bb7d45981ec684ce3f4129a938", "d69361030add60592f9c886c52e2ec4e3fd7917b", "24f3d77e5aac66bcfb28d5d2746be79c2a88f12c", "81ca37574838f53c69a9e34ea8594a4a4cf72f4c", "d7ced2b0c605263f7dfa189541246bf6492c8785", "5cf3e5d46e8c483fa66ff0f584a6ed62ff4b32b2", "c2f6a7898a37561c4566a6c3f33b66661b540997", "a59c127e691222eb7014786e4fa12a3d226d0229", "f956d1a1de36b13a8b1dfcb79440a159f992f413", "89e2f336b7667b5d6100f778b2d4bbb48fcb3209", "d53c27cad01900bee311e6b95c22d982fda65fd6", "97164a0afa05dda770bcb5e79a95c97cd975d5f7", "80198745d939745c675905ec06ce1a366acb216e", "589921adb264df7f0c8792499106a785c642fd5a", "d510ab312fa8d695d12babc766fa78facbdc9ee6", "b9234c15055235bc5c4d06c1c56bd6d7fd6b7b11", "5aa3fbd9cbe851aa63e6e4567c4d235e8b186f07", "6102522aef319ecd5149792824c7a17f51334681", "cd8cded128177bd842e774286ea5f4e0e1664a70", "bcc7119a9b902f89a141ac86307f285e4af20d60", "1b09d4e66cfd29b5a7023dac4bcc8be52146b847", "36c6f1e2a649e1753be1ee4a0f1e005a7a8b6000", "28a376f772e11a4cd141c1781610ab0699cfd536", "2860badbe086a181f75fa326d7db8aa028f00274", "7c3384f1ef2899ff889653480175b8239da19cb1", "4abced5b38cac2525fbfcbc78c2e3b448471d6da", "f9b9431a24046feba02b19d3c5b446b1c0d19536", "6700ee3351af75aa7d94473c8bdb138f58dd4a2c", "543b61e68eb1464c616d5cb70e0fdf54bf48e8e7", "1b1a5ff469c4787c712057628c215cb1ab134950"], "commit": ["FIX #703 No support for setBinaryStream(int,IS,long) https://sourceforge.net/p/jtds/bugs/703/", "Fixed memory leak from profiler due to lastWarning not getting reset.", "FIX #716 No Support for LocalDB http://sourceforge.net/p/jtds/bugs/716/", "o Fixed Sybase ASE compatibility of JUnit test.", "o Fixed Sybase ASE compatibility of some JUnit tests.", "o Fixed invalid method name in JUnit test. o Fixed Sybase ASE compatibility of JUnit test.", "o Fixed Sybase ASE compatibility of JUnit test.", "o Fixed Sybase ASE compatibility of some JUnit tests.", "o Fixed savepoint functionality for Sybase ASE, broken by the fix for bug #569.", "o Fixed JUnit test to be compatible with Sybase ASE.", "o Fixed JUnit test to be compatible with Sybase ASE.", "o Fixed JUnit test to be compatible with Sybase ASE.", "o Fixed bug in JUnit test, cannot insert any value into a TIMESTAMP column on Sybase ASE.", "o Tests for bug #706 and #699 have unintentionally been committed to the jTDS 1.3.0 tag.", "o Added test for bug #713.", "o Fixed bug #710, invalid property handling in JtdsObjectFactory.", "o Fixed bug #715, jTDS may enter an infinite loop when parsing an SQL statement.", "o Fixed bug #702, Connection.getMutex() isn't thread-safe.", "o Fixed a bug that could cause the statement cache to be disabled. o Removed unnecessary synchronization overhead from SQL statement parser. o Improved statement cache performance (jTDS 1.3 only).", "o Fixed bug #687, JtdsObjectFactory don't accept the connection property name mappings used in jTDS versions up to jTDS 1.2.6.", "o Fixed bug #687, JtdsObjectFactory don't accept the connection property name mappings used in jTDS versions up to jTDS 1.2.6.", "o Fixed bug #699, conversion from timestamp String to Date fails. o Added regression test for bug #699.", "o Improved fix for bug #694, the first attempt wasn't sufficient.", "o Fixed bug #694, the jTDS logger may cause an NPE.", "o Applied fix for bug #695 provided by Keith Robinson.", "o Fixed bug #508, the driver ignored unspecified server errors signaled by a TDS DONE token if no ERROR token has been received before. o Fixed bug #682, error when using date/time escapes in a procedure call. o Added test for bug #682.", "o Corrected and improved test for bug #508.", "o Added test for bug #508, driver doesn't raise an exception after connection reset.", "o Fixed bug #626 by added a type mapping for java.math.BigInteger. o Added test for JDBC date/time escapes used in a procedure call. o Added test for bug #686, SQL error invalidates a Statement's internal state.", "o Applied fix for MSSQL 2000 compatibility provided by Andrew Fink (bug #683).", "o Fixed a bug in the discovery response handling, introduced in revision [1219].", "o Fixed bug #552, jTDS may fail to find an SQL Server instance if the discovery requests' response is split into multiple network packets.", "o Added test for bug #575, parameter types not available via ParameterMetaData.", "o Fixed build scripts, Maven artifacts are no longer included in the distro package.", "o Fixed misc version.", "o Added test for bug #638, preparedStatement.setTimestamp sets seconds to 0.", "o Added unit test for bug #644, updateNull not working with MSSQL DECIMAL field.", "o Added a unit test for bug #544.", "o Fixed a bug in result logging code. o Added method to drop a trigger.", " o Added test for bug #500, Statement.execute() fails if using cursors and SHOWPLAN_ALL is set to ON.", "o Fixed bug #528, any ResultSet gets dropped when using RETURN_GENERATED_KEYS. o A ResultSet returned by Statement.getGeneratedKeys() is no longer updatable.", "o Fixed a bug in commit [1195], two VirtualSocket instances have been created in every call to SharedSocket.getRequestStream().", "o Fixed a bug that caused Statement.close() to throw an exception for errors caused by previously executed SQL statements.", "o Improved test for bug #609, threads haven't been stopped and JDBC resources were left unclosed. o DriverUnitTest caused a JUnit warning.", "o Added unit tests for bugs #473 and #635.", "o Added test for bug #609.", "o Reduced locking in SharedSocket.finalize() to a minimum, as proposed by Kods in bug #609. o Removed unused code fragments.", "o Added test for bug #632, year-check 1753-9999 not valid for type DATE. o Added test for bug #624, MS SQL Server 2008 full text search causes connection reset.", "o Extended build process to create and upload Maven artifacts to sonatype.org (bug #636, bug #668, feature request #49, feature request #70).", "o Fixed various JUnit tests causing warnings.", "o Fixed format conversion errors for DATETIME, DATE and TIME values.", "o Fixed bug #615, the SQL parser doesn't correctly handle function escapes containing nested (unescaped) functions. o Added regression test for bug #615.", "o Fixed bug #615, the SQL parser doesn't correctly handle function escapes containing nested (unescaped) functions. o Added regression test for bug #615.", "o Fixed bug #634, incorrect comment processing in callable statements.", "o Fixed unit tests that depend on date/time data types to be skipped if run against a server not supporting that types.", "o Fixed error in CSUnitTest.testMaxRows0003() introduced in the last commit.", "o Fixed parameter name format for procedure calls using named parameters.", "o Fixed bug #647, preparing a statement including a WITH clause doesn't retrieve resultset meta data.", "o Added unit tests for bug #654 and the SQL parser bug reported in patch #115.", "o Corrected unit test for bug #507, the executing thread's interruption state hasn't been cleared, causing subsequent tests to fail. o Fixed bug #677, possible deadlock in JtdsStatement.close().", "o Added test for bug #677.", "o Fixed and greatly simplified SAfeTest.testCursorResultSetConcurrency0003().", "o Fixed unit test for bug #343, failing if run against SQL Server 2005.", "o Corrected fix for bug #676, leading to errors for statements with tailing multi line comment. o Adapted unit test to also check tailing multi line comment.", "o Fixed bug #676, error in SQL parser concerning multi line comments.", "o Improved test for bug #548.", "o Adapted test to changes in SVN revision [1153] (fix for bug #541).", "o Fixed bug #541, data type mismatch when using {ts}/{t}/{d} JDBC escapes.", "o Added test for bug #676. o Added missing unit tests for bug #541. o Improved test for bug #634.", "o Fixed PreparedStatementTest.testPrepareFailWarning() to be skipped when run against SQL Server 2008 or above or Sybase ASE.", "o Added test for bug #634.", "o Added test for bug #669. o Fixed StatementTest to be less strict when checking query timeout.", "o Fixed a number of incorrect error messages. o An attempt to execute a standard SQL statement using a CallableStatement now throws an appropriate SQLException on preparation instead of spurious errors when setting parameter values (bug #637). o Test for bug #637.", "o Fixed possible NPEs in JtdsObjectFactory (bug #633). o Added missing getter/setter methods for connection property autoCommit\" in class JtdsDataSource. o Corrected data types for connection properties \"autoCommit\" and \"useNTLMv2\". o Added missing properties to JtdsObjectFactoryUnitTest.testNoProperties(). o Added missing default for connection property \"useNTLMv2\". o Corrected and simplified JtdsObjectFactoryTest and JtdsDataSourceTest.\"", "o Fixed memory pollution caused by ThreadLocal Calendar instances (bug #661). o Improved fix for bug #561 and bug #619 by not re-using GregorianCalendar instances anymore. o Implemented ResultSet.isClosed() method defined in JDBC 4.0 (bug #665).", "o Added test for bug #657.", "o Added test for bug #657. o Removed the @Override annotations inadvertently added in the SVN revision [1141].", "o Fixed buffer overflow in SQL parser (bug #673). o Added missing description for 'autoCommit' property added in revision [1123]. o Corrected a number of JUnit tests.", "o Fixed jTDS version reported by the driver.", "o Added service provider configuration file for JDBC driver class (Bug #659). o Applied patch provided by Rainer Schwarze to reduce log pollution during emulated XA recovery (Bug #656). o Removed @Override annotation from jTDS 1.2 code. o Fixed spurious login timeouts that could occur in case multiple connections are established concurrently (Bug #667). o Bugfix for unclosed stream in the static initializer of CharsetInfo (Bug #642).", "o Fixed typos in Messages.properties (Bug #608).", "o Removed build scripts for older Java versions. o Re-included tests not compatible with older Java versions. o Updated project web site. o Removed obsolete libraries from project. o Upgraded Apache Ant to version 1.8.4. o Upgraded JUnit to version 4.10. o Upgraded jCIFS to version 1.3.17 o Removed Java 1.3/JDBC 2 compatibility code. o Removed WebRing code from the project web site (Bug #660). o Fixed a race condition when closing a JtdsStatement in multiple threads concurrently (Patch #121, #118).", "o Applied patch [3476715] for bug [3260570], parsing time values containing fractions of seconds may fail.", "o Applied fix [3436324] provided by Shane StClair, JtdsStatement.close() failed due to invalid object state.", "o Fixed bug [3141458], NPE if ResultSet.next() and ResultSet.close() are called by multiple threads concurrently.", "o Fixed bug [3078236], exception chaining time grows exponentially with number of exceptions in the chain. o Added unit test for bug [3078236].", "o Fixed bug [3081749], SSPIJNIClient.getInstance() wasn't thread-safe and is now synchronized.", "o Fixed a bug in JtdsStatement.close(), any RuntimeException would have masked a prior SQLException.", "o Improved fix for bug [2931326], Statement.close() cannot throw NPE anymore.", "o Fixed bug [2931326], NPE if Statement.close() is called by multiple threads concurrently.", "o Applied fix for bug [3002431] by Rainer Schwarze, improved handling of port discovery errors.", "o Improved error messages if a value cannot be converted to a given SQL type .", "o Fixed bug [3000472], the TimerThread could have been (re)started when closing the last connection. o Fixed method synchronization in TimerThread.", "o Fixed few typos.", "o Added test for bug [1833720].", "o Enable compiler optimization. o Fixed a bug in the build script, local test configurations have also been copied into the release bundle.", "o Fixed a number of method calls to use Java 1.3 signatures.", "o Fixed imports to work with Java 1.3.", "o Added test for bug [1694194], queryTimeout does not work on MSSQL2005.", "o Updated JCIFS to version 1.3.12. o Fixed bug [2911266], Default response timeout of 30 seconds if using named pipes via JCIFS.", "o Created additional test for bug [1812686], setMaxRows() doesn't work for MS SQL 2005.", "o Created additional test for bug [1812686], setMaxRows() doesn't work for MS SQL 2005.", "o Fixed a bug in the test, causing an overflow error.", "o Fixed bug [2892493], NullPointException in TdsData.", "o Fixed bug [2891775], previous fix for bug [2340241] has broken Java 1.3 compatibility.", "o Fixed bug [2883066], Numeric overflow in conversion BigInteger/BIGINT.", "o Fixed bug [2871274], no soft kill for TimerThread. o Fixed a bug that lead to login errors being masked by later exceptions. o Fixed test for bug [1755448], the loginTimeout property is now correctly set by the test itself. o Added a test for bug [2871274]. o Improved performance by not using Exceptions for controlling the timer, anymore.", "o Fixed bug [2860742], getByte() causes overflow error for negative values.", "o Corrected bug in test: Check for TINYINT assumed range of -128..128 but TINYINT is 0..255, thus created invalid DBMS data (128 instead of -127). o Improved test for bug [2860742].", "o Added test for bug [2860742], getByte() causes overflow error for negative values.", "o Workaround for bug [2856350], JDBC4 method stubs make jTDS unusable. Unimplemented methods now throw AbstractMethodError instead of UnsupportedOperationException to imitate previous behavior.", "o Fixed bug [2859272] Version 1.2.3 logs version as 1.2.2.", "o Fixed bug [1845471], jTDS can't compile in certain locales. o Added Java source and target version to build script.", "o Added test for bug [1840116], Select statement very slow with date parameter.", "o Added test for bug [1825743], default value not returned for column with default value.", "o Fixed incompatibility with Java 1.3.", "o Added test for bug [1374127], Arithmetic overflow at sql_variant.", "o Fixed bug [2814376], varchar-type is truncated in non-unicode environment.", "o Fixed bug [2349058], DateTime allows invalid dates through. o Removed performance penalty introduced by the fix for bug [2181003].", "o Fixed bug [2181003], an attempt to set a BC date effects future date conversions.", "o Added test for bug [2181003], attempted to set a BC date effects future date conversions.", "o Fixed bug by packporting patch [2675463], getSchemas() now returns schemas, not database users for MSSQL 2005 and later.", "o Fixed bug [1855125], jTDS silently ignores integer overflows in ResultSet's getter methods. o Improved regression test for bug [1855125] by also checking SQL states.", "o Fixed 2 minor errors that have been masked by bug [2796385].", "o Added/improved test for bug [1755448].", "o Improved test for bug [1855125], fixed a bug in the test.", "o Added a test for bug [1855125], numeric overflow not reported by jTDS.", "o Fixed bug [1755448], login failure leaves unclosed sockets. o Added missing finalizer in connection class to ensure resources are released if an application fails to close a connection. o Added test case for bug [1755448].", "o Fixed bug [2340241] by adding a new connection property 'processId'. o Addressed feature request [1778933] by adding a new connection property 'socketKeepAlive'. o Fixed a bug that allowed invalid boolean values to be set for connection properties. o Fixed a minor bug that could lead to sockets being closed multiple times.", "o Fixed bug [1845471], jTDS can't compile in certain locales.", "o Fixed incompatibility with Java 1.3.", "o Fixed bug [1793584], Login timeout canceled too early.", "o Corrected bug [1845477], Added missing license info.", "o Fixed bug [1802986], incorrect charset mapping between 'MAC' and 'ISO-8859-1'.", "o Improved test for bug [2508201].", "o Fixed bug [2508201], date field is changed by 3 milliseconds.", "o Added test for bug [2508201], date field is changed by 3 milliseconds.", "o Added a test for bug [1833720], ResultSet.getMetadata().getTableName() returns wrong data.", "o Fixed bug [2796385], running out of UDP sockets.", "o Added a test for bug [] 2051585, error when iterating results concurrently.", "o Fixed inconsistent method synchronization.", "o Fixed a potential NullPounterException.", "o Fixed bug [1869156], memory leak of WeakReferences.", "o Fixed bug [1811383], ArrayIndexOutOfBounds on executeBatch.", "o Added tests for [bug [1811383] and bug [2827931].", "o Corrected data truncation problem described in bug [2021839]. o Added a corresponding test case.", "o Fixed bug [2021839], savepoint starts 2 transactions if it's the first operation. o Fixed a bug in SavepointTest.", "o Added a test for bug [2021839].", "o Added a test case for bug [2021839].", "o Improved performance of last fix (bug [1843801]).", "o Fixed bug [1843801], infinite loop if DB connection dies during a batch.", "o Added JDBC 4 method stubs. o Fixed LOBTest to also compile in JDBC 4 environment.", "o Fixed bug [2818256] a savepoint is invalid after rollback to that savepoint.", "o Added a test for bug [2818256], a savepoint stays valid after rollback to that savepoint. o Added a test for rollback to nested savepoints.", "Fixed bug [1883905]: unintentional infinite wait.", "Reverted change for bug 1744375; this can be resolved by calling DriverManager.setLoginTimeout().", " o Applied Mike Hutchinson's fix for bug    [1774322] Sybase nulled text fields return not null", " o Updated default property of loginTimeout to 60 seconds instead of waiting    indefinitely; address bug [1744375] Incorrect port configuration causes hang", " o Corrected bug [1765905] Driver version miscellanea is incorrect;    updated to 1.2.2.", " o Corrected bug [1596743] executeQuery absorbs thread interrupt status  by    applying the patch mentioned in the issue.", " o Corrected bug [1460746] Batching of Prepare Statements by applying the patch    attached to the issue.", " o Corrected bug [1374518] rollback fails on Sybase 12.5 by applying the patch    attached to the issue.", " o Corrected bug [1453552] JTDS Driver returns wrong column type with sybase    by applying the patch attached to the issue.", " o Corrected bug [1696767] incorrect ResultSetMetaData when useLOBS=false by    applying the patch mentioned in the issue.", " o Corrected bug [1437845] milliseconds are lost under JRE 1.3 by applying    the patch attached to the issue.", " o Corrected bug [1623668] Lost apostrophes in statement parameter    values (prepareSQL=0); added test to ensure that there are no regressions.", "fixed the flags passed for NTLMv2 auth. Before the fix, auth would fail in configuration where Minimum Session Security for NTLM SSP based (including secure RPC) Servers setting was set to 'Require NTLM v2 session security'", " o Fix the previous changelist. Copy-paste didn't really help there.", "NTLMv2 auth fix: now it doesn't NPE if server fails to send target info", "o Applied Mike Hutchinson's fix for Bug [1403067] ProtocolException:   Invalid table TAB_NAME_TOKEN.  TdsCore.tdsTableNameToken() now handles   tables referenced using server.database.owner.table syntax.  Also   modified exception code to include the unknown TAB_NAME_TOKEN value.", "o Fixed default path for named pipes on Sybase.  (Previous behavior    would always default to the SQL Server path!)  Added    DefaultProperties.getNamedPipePath() method with unit tests.", "o Fixed Bug [1386615] Connecting across domains with named pipes fails    on Windows.  New 'useJCIFS' boolean parameter added that will force    use of the jCIFS library on Windows for named pipe connections.", "o Extracted the JtdsDataSource.addNonNullProperties() method from    getConnection(String, String) method for easier testing.  Added inner    test class Test_JtdsDataSource_addNonNullProperties to    JtdsDataSourceUnitTest to test new addNonNullProperties() method.    Replaced call to Exception.getStackTrace() in    getConnection(String, String) with a call to Support.linkException().    Fixed addNonNullProperties() to set the serverType parameter if it is    not null.  Note that this does not affect Driver.parseURL() which    ends up (re)setting that property from the URL.", "Fixed commented-out code in getConnection(String, String) method that should NOT have been commented out.  Test coverage is not good enough!", "o Updated the loginTimeout parameter information in faq.html to document    behavior with TCP/IP connections.  o Fixed the What are the class names...?\" question to match the TOC    entry.\"", "o Applied Mike's fix for bug [1371295] executeBatch returns incorrect counts.    Batch updates now always return an array of length equal to the batch size,    padded up with EXECUTE_FAILED values if necessary.", "o Applied Mike's fix for a bug related to [1368058] Calling StoredProcedure    with functions (identifiers containing special characters not parsed).", "o Applied Mike's fix for a bug related to [1368058] Calling StoredProcedure    with functions (identifiers containing special characters not parsed).", "o Corrected bug [1358059] Memory leak in add/remove statement. The remove    statement logic did not remove the WeakReference if the Statement had been    garbage collected.  o Corrected an issue in TdsData causing CHAR columns containing single blanks    to be returned as zero length strings.  o Removed redundand call to checkClosed() in TdsCore.", "o Corrected bug [1351891] Using JtdsCallableStatement.setFloat causes    SQLException. findParameter() was called as if to retrieve parameter values    from the setByte(), setDouble() and setFloat() methods, which caused the    parameter not to be found.", "o Corrected a minor DatabaseMetaData error: supportsTransactionIsolationLevel    returned true for TRANSACTION_NONE or any invalid value.", "o Applied Mike's fix for bug [1346086] Problem with DATABASE name change on    Sybase.", "o Corrected bug in JtdsDatabaseMetaData.getBestRowIdentifier(). Statement was    closed, causing errors when using the returned result set.", "o Fixed bug [1305275] Cursor opens fails when cursor threshold <> -1\" by    amending MSCursorResultSet.  o Fixed bugs \"[1283472] Unable to cancel statement with cursor resultset\" and    \"[1323363] Deadlock Exception not reported (SQL Server)\" by amending    JtdsStatement executeSQL() and executeSQLQuery().  o Fixed a bug in handling output parameters that occurs when invoking remote    stored procedures. The TdsCore.tdsOutputParamToken method was amended.  o Implement RFE \"[1289687] configurable socket setSoTimeout()\". This also    offers a solution to bug \"[1297306] Network problem can cause jTDS hang-up\".  o Fixed bug \"[1246270] Closing a statement after cancelling it throws an    exception\" by amending JtdsStatement.close().  o [SQL Server 2005] Database meta data has been improved so that getColumns()    can distinguish between text and varchar(max)", "o Applied Mike's fix for bug [1329765] Pseudo column ROWSTAT is back with SQL    2005 (September CTP).", "o Applied Mike's fix for bug [1330118] SSL fails with SQL 2005 September CTP.", "o Corrected bug [1293415] Charset iso_1 is broken for Sybase. For Sybase the    server's iso_1 charset maps to the standard ISO-8859-1, rather than Cp1252    as it does for MS SQL Server.", "o Corrected (again) bug [1327029] setFetchSize give incorrect error message.", "o Corrected bug [1296482] setAutoCommit() behaviour. According to section    10.1.1 of the JDBC 3.0 spec (which takes precedence over the API    documentation) the transaction should only be committed if the auto-commit    mode is _changed_ during a transaction.", "o Corrected bug [1327029] setFetchSize give incorrect error message.", "o Applied Mike's patch for bug [1299147] Latest change does not compile   with java 1.5.  This patch cleans up the use of checkOpen() in a   number of methods in JtdsCallableStatement, JtdsPreparedStatement,   JtdsStatement and JtdsResultSet.", "o Fixed compilation on Java 1.5 in MessagesPropertiesUnitTest.  Thanks   to Mike Hutchinson for the patch in bug [1299147] Latest change does   not compile with java 1.5.", "o Applied patch for bug [1253127] Improved decimal peformance for MSSQL   SP4 by Mike Hutchinson.  This patch also fixes bug [1236078] Procedure   doesn't get called for some BigDecimal values (in Java 1.5).", "Fixed javadoc comment on suite() method.", "Fixed SharedLocalNamedPipe constructor to use DefaultProperties.NAMED_PIPE_PATH_SQLSERVER rather than local hard-coded path.", "o Applied Mike's patch to fix a small bug with getProcedureColumns() in   JtdsDatabaseMetaData and SQL Server 7.0 where the RETURN_VALUE   parameter was not prefixed with an '@' character.", "o Applied Mike's fix for bug [1273988] Insert UTF8 string fails when length   is 255 (ASE12.5.2).", "o Applied patch for bug [1277000] All pipe instances are busy\" error not   handled properly.  Added TestAllPipInstancesAreBusy tool class which is   used to manually reproduce the error.  Updated \"loginTimeout\" entry on   FAQ.  Added more use of Support.linkException() in ConnectionJDBC2   constructor.\"", "o Corrected bug [1245775] Column type inconsistency when useLOBs=false.", "o Added a test for bug [1236078] Procedure doesn't get called for some   BigDecimal values. Test passes, probably invalid bug.", "o Applied Mike's fix for bugs [1234531] Dates before 01/01/1900 broken due to    DateTime value markers and [1235845] getTimestamp() returns illegal value    after getString().", "Added a note to the 06/30/2005 entry about fixing a synchronization issue in ConnectJDBC2.removeStatement().", "o Final fix for bug [1229636] Memory Leak in Prepared Statements.", "o Applied Mike's fix for bug [1232733] setFetchSize(0) causes exception.", "o Applied yet another patch for bug [1229636] Memory Leak in Prepared    Statements, with a minor change. This seems to finally fix the caching and    memory leaks; handles are always cached, even if maxStatements=0, retrieved    from the connection cache and the statement list of handles is implemented    by a Set, to make sure no memory leaks due to duplicates occur.", "o Realized that my initial fix will not work with maxStatements=0 (as opposed    to Mike's) so made some more changes.", "o Corrected bug [1229636] Memory Leak in Prepared Statements, based on Mike's    initial patch.", "o Corrected a bug with prepare handles caching where the usage count was    decremented twice when a statement was closed, causing premature release of    handles.", "o Applied Mike's additional patch for bug [1222199] Delayed exception thrown    in statement close. Execution cancelled\" exceptions are now only thrown if    the cancel was caused by a call to Statement.cancel(); if a timeout is the    cause", "o Corrected bug [1226210] {fn dayofweek()} depends on the language. Fix    submitted by Xavier Poinsard.", "o Applied Mike's fix for bug [1222238] Unable to connect to Sybase 10 with TDS    5.", "o Corrected bug [1222199] Delayed exception thrown in statement close. In the    current implementation Statement.close() does throw any server side errors    (to make sure the user doesn't miss any) but Connection.close() ignores    them.", "o Applied Mike's fix for bug [1222205] getParameterMetaData returns not    implemented.", "o Applied Mike's fix for bug [1047208] SQLException chaining not implemented    correctly, with a few additions in places where exceptions might have gotten    lost.", "o Corrected bug [1217786] Moving to beforeFirst\" with ResultSet.absolute(-X)    and a number of related absolute() and relative() issues with    MSCursorResultSet.\"", "o Removed already fixed or outdated TODO comments.", "o Applied Mike's fix for bug #1212905 PreparedStatement.setFloat issue.", "o Applied Mike's fix for bug #1212905 PreparedStatement.setFloat issue.", "o Minor improvement to the earlier DateTime bug fix.", "o Applied Mike's patch [1210936] Change byte array to string conversions; the    patch changes the way byte[] to String conversions are made (now hex values    are returned) and also a bug with SELECT DISTINCT not working with Sybase.", "o Corrected a bug in DateTime that was causing -1 to be stored as the time    component of a DATETIME field for a Date value.", "o Corrected bug [1209039] jTDS can deadlock when used with C3P0 connection    pooling; unnecessary synchronization on statements caused deadlocks.", "o Corrected bug [1204658] Conversion from Number to BigDecimal causes data    corruption.", "o Corrected bug [1200027] Enhancement: Change how Properties keys are    determined.", "o Applied Mike's fix for bug [1197603] Cursor downgrade error in    CachedResultSet and added a test case.", "o Made the error.connection.autocommit message in ConnectionJDBC2 specific to   the method being called (commit() or rollback()) by introducing a parameter.", "o Corrected bug [1195511] Recent change to JtdsStatement breaks Sybase    metadata.", "o Corrected a bug that was causing the ResultSet position to be reset to the    beginning of the cached block if a reread was attempted after updateRow().", "o Corrected bug [1180777] collation-related execption on update - if a prepare    failed, execution was not retried (unprepared) and failed.  o Removed the ConnectionJDBC2 finalizer, as the resources will be freed anyway    when garbage collected.", "o Fixed a typo.", "o Corrected bug [1187927] Driver Hangs on Statement.execute(). Versions 1.0.3    and prior entered an infinite loop when parsing an unterminated multi-line    comment.", "o Corrected bug [1187872] Supported CodePage: error in error message.", "o Applied Mike's fix for bug [1184376] Sybase getProcedureColumns bug.", "o Applied Mike's patch for bug [1172405] BLOB/CLOB position methods fail: a    BlobBuffer class was introduced to handle LOB buffering to memory/disk and    BlobImpl/ClobImpl, as well as other classes, were modified accordingly.", "o Corrected bug [1182066] regression bug resultset: ResultSet.relative() was    not working as expected.", "o Closed bug [991089] INSTANCE parameter does not work with SQL Server 2005    after adding an explanation to the FAQ on how to make it work.", "o Applied Mike'd fix for bug [1180169] JDBC escapes not allowed with Sybase    addBatch.", "o Applied Mike's fix for bug [1180164] NPE in TdsData with mulit-byte charset.", "o Applied Mike's fix for bug [1179773] jTDS fails when used with c3p0    connection pool.", "o Applied Mike and Dave's combined fix for bug [1176221] JtdsPreparedStatement    setTime setTimestamp Daylight DST Bug.", "o Refactored duplicate code in JtdsPreparedStatement.setDate(int, Date, Calendar),   setTime(int, Time, Calendar) and setTimestamp(int, Timestamp, Calendar) into   adjustTimeByCalendar(long, Calendar) method in preparation to fix [1176221]   JtdsPreparedStatement setTime setTimestamp Daylight DST Bug.", "o Applied a temporary (and highly useless) fix for bug [1172405] BLOB/CLOB    position methods fail. position() methods work now, at least in theory.", "o Applied Mike's patch [1166594] JDBC3 Multiple open result sets. The    getMoreResults(int) method is fully implemented and the JtdsResultSet class    has been enhanced so that it can cache the remaining result set rows when    required by the KEEP_CURRENT_RESULT option. Result sets returned by    Statement.execute() are only cached by when required by the getMoreResults()    method. A couple of minor bugs in the CachedResultSet class are also fixed;    a where clause for updates could include text or image columns which is not    allowed and the Sybase syntax for inserting rows containing all default    values was incorrect.", "03/26/2005 - Alin Sinpalean  o Corrected bug [1170777] resultSet.updateRow() fails if no row has been    changed. Thanks go to Brett Wooldridge for signalling the bug and providing    a fix.", "o Update for bug [1161601] Connection.close() can take a long time when Sybase    down. The close timeout has been reduced to 1 second, just to make sure the    logout request makes it through to the server.", "o Corrected bug [1164219] possible incorrect synchronization in    BlobImpl.java (removed all synchronizations from BlobImpl and ClobImpl).  o Added a description of jTDS' support for multi threading to the FAQ.", "o Applied Mike's additional fix to bug [1158509] Various problems with    connect/login timeouts.", "o Small change to ConnectionJDBC2 to ensure that the server character set is    used if none is specified by the user.  o TdsCore.closeConnection() has been modified to set a 10 second timeout on    the socket. This should address bug report [1161601] Connection.close() can    take a long time when Sybase down.  o TdsData and TdsCore have been modified to address bug [1161609] Text or    image data truncated on Sybase 12.5. A new TDS 5 data type (0x24) is used to    send bulk text or image data to the server.  o A small bug has been corrected in Support.substituteParameters which caused    short InputStreams to be written as a binary parameter rather than text when    running with Sybase 11.", "o Added a fix suggested by rtdog to TimerThread.", "o Corrected bug [1158509] Various problems with connect/login timeouts. The    last problem fixed was concerned with socket connection not timing out (only    the login itself was timed and interrupted).", "o Partially fixed bug [1158509] Various problems with connect/login timeouts.    FAQ was inexact (stated that loginTimeout was in milliseconds) and    DriverManager login timeout was ignored because the default values (0 for    login timeout) were set before the null check.", "o Partially fixed bug [1158509] Various problems with connect/login timeouts.    FAQ was inexact (stated that loginTimeout was in milliseconds) and    DriverManager login timeout was ignored because the default values (0 for    login timeout) were set before the null check.", "o Added FAQ entry about Sybase batching, as discussed in bug report [1123350]    Hang when executing performance test.", "o Applied the rest of Mike's fix for bug [1152329] Spurious output params    assigned (TIMESTMP). Missed part of it when doing the merge.", "o Synchronized all accesses to the cancelPending flag, to fix any possible    issues caused by race conditions.", "o Applied Mike's fix for bug [1152329] Spurious output params assigned    (TIMESTMP). WRITETEXT and UPDATETEXT commands generate spurious output    parameter packets, which interfere with the real output parameters. Fix    ignores output parameters with names not beginning with '@'.", "o Corrected a problem in SQLParser causing an error message with the wrong    terminator value missing (i.e. ')' instead of '}' missing from    {call proc(?)\").\"", "o Corrected bug [1150880] Character Set getting overwritten. Collation    envchange packets altered the charset specified on connection creation.", "o Fix comment in ConnectionJDBC2(String, Properties) constructor.", "o Implemented feature request [1124636] Better error message for missing    ntlmauth.dll.", "o Corrected bug [1120168] jTDS 101 - TDS data type 0 invalid, caused by    incomplete column info filled in for dummy CachedResultSets.", "o Applied Mike's fix for bug [1122357] INSERT is executed twice by scrollable    Statement on Sybase. CachedResultSets are now created on top of plain    ResultSets from scrollable/updateable Statements. The query is only altered    (by adding FOR BROWSE\") if executed via executeQuery().\"", "o Corrected bug [1122481] how handle new behavior since 1.0.1. The DataSource    factory failed with NPE because the properties are no longer initialized in    the constructor. Added tests to ensure no regressions.", "o Applied patch [1120010] Fixed search string escape handling, submitted by    James P. Moring.", "o Applied Mike's fix to my fix to bug [1120442] Statement hangs in socket read    after Statement.cancel(). :o)", "o Applied Mike's fix for bug [1120825] Can't open scrollable ResultSet with    Sybase 11.9.", "o Corrected bug [1120442] Statement hangs in socket read after    Statement.cancel().", "o Improved test for bug [1116046] {fn } escape can't handle nested functions.", "o Corrected bug [1118956] statement.setMaxFieldSize() sends a statement every    time. Max field size is now set at the same time as row count.", "o Applied Mike's patch [1118912] Small enhancements. Extended DataTruncation    support, better transaction isolation support for Sybase and a fixed NPE in    Logger.", "o Removed tests that were failing because of the fix for bug [1113709]    Connecting via DataSource (the assumptions of these tests were incorrect, to    start with).", "o Added the explanation for the Connection refused\" error message to the FAQ.\"", "o Applied Mike's fix for bugs [1116113] (SSL fails to build or run under java    1.3) and [1102505] (SSL Resume Failure). TLS resume is now disabled    altogether until we find out what the actual cause is and work around it.", "o Fixed bug [1113709] Connecting via DataSource. Invalid default TDS version    was used by JtdsDataSource when connecting to Sybase. Breaks all default    property tests (which relied on DataSource setting default values in the    constructor), but the previous behavior was incorrect.", "o Fixed bug [1113709] Connecting via DataSource. Invalid default TDS version    was used by JtdsDataSource when connecting to Sybase. Breaks all default    property tests (which relied on DataSource setting default values in the    constructor), but the previous behavior was incorrect.", "o Fixed bug [1113040] Small bug in net.sourceforge.jtds.jdbcx.PooledConnection    Thanks go to Marcus Nylander for finding the bug and providing a fix.", "o Added a test for bug [1111516] Illegal Parameters in PreparedStatement.", "o Fixed bug in CharsetInfo, caused by getClassLoader() returning null when the    class loader is the bootstrap classloader.", "o Fixed bug [1107105] Sybase updateable cursor error (a null pointer exception    is thrown in CachedResultSet during an update).", "o Amended the logic for downgrading the preparesql property values in    ConnectionJDBC2 as it was possible to select invalid options for Sybase and    SQL 6.5.  o Prevent JtdsPreparedStatement.setUnicodeStream from throwing an array index    exception when the length of the supplied stream exceeded the declared    length.  o When using preparesql=0, the driver would send zero length byte arrays as    null. This is wrong as the column should have a zero length non null value;    however, Sybase/SQL 6.5 do not permit zero length binary columns so the    driver has to output a single byte value instead. Amended    Support.embedData() to fix this problem.  o Related to the point above, TdsData.writeParam and writeTds5Param do the    wrong thing and output a zero length byte value as a null. Amended TdsData    to fix this problem.  o It is possible for Support.embedData to output a decimal literal that    exceeds the precision of the server. Amended embedData to truncate value    string.  o In TdsCore.executeSQL the inbatch flag is reset prematurely causing batched    prepared statements to fail to substitute parameters correctly. Amended    executeSQL to ensure that flag is reset after last packet sent.", "o Applied Mike's fix for bug [1101251] SSL Connection Problem.  o Added README.SSL to the build.", "o Added a specific error message for the case when an output parameter value    is accessed without registerOutParameter() being called first.", "o Applied Mike's fix to bug [1096086] Zero length streams generate null    values.", "o Applied Mike's fix to bug [1094621] Decimal conversion error.", "o Applied Mike's fix to bug [1094621] Decimal conversion error.", "o Fixed bug [1086477] RETURN_GENERATED_KEYS on select returns 1 row.", "o Fixed bug [1082986] prepareSQL=3 Does Not Function (caused by the separation    of input and output values).", "o Applied Mike's fix for bug [1086494] DatabaseMetaData.getProcedureColumns    broken on Sybase.", "o Fixed bug [1087057] Connection is closed during XA Transaction. Also added    check for error severity: if greater than or equal to 20 the Connection is    closed (because the server will close the connection after the error).", "o Another minor fix to the local named pipe patch (added output flushing after each write).", "o Minor fix to the local named pipe patch.", "o Applied, with some minor changes and corrections, patch [1086173] Windows    Local Named Pipe Support. Thanks go to Stardog33.  o Fixed failure of JtdsDataSourceUnitTest.testNoUser() with a runtime error    caused by inability to load the ntlmauth DLL.  o Added one more test for SharedSocket synchronization, only with RPC    requests. Still not able to reproduce the locking read.", "o Possible fix for bug [1086156] Hang in driver socketRead under load. Could    not actually reproduce the exact behavior but found other errors caused by    incomplete synchronization on SharedSocket.", "o Fixed a bug that was causing setSavepoint() to fail when no statements to    actually start a transaction were executed before.", "o Added code to ensure scroll sensitive ResultSet rows are reloaded after    updated (delete just marks the row as deleted, while insert adds a row at    the end of the ResultSet).  o Fixed some cursor ResultSet issues caused by invalid suppositions considered    when optimizing (i.e. that updating a row will always delete the current row    and create a new one at the end of the ResultSet).  o Updated DatabaseMetaData boolean getters related to the capabilities of    detecting updates/inserts/deletes (only deletes can in fact be detected on    SQL Server).", "o Additional fix for bug [1080659] ParamInfo throws NullPointerException (getBytes).", "o Updated README and README.XA.  o Corrected bug [1080659] ParamInfo throws NullPointerException.", "o Applied Mike's fix for bug [1078927] Callable statement fails (callable    statements with both literal parameters and parameter markers failed to    execute).", "o Corrected bug [1078325] Multithreaded prepared statement errors (or at least    I sure do hope so). The problem seems to have been the fact that preparing    a statement and executing it was not a single, atomic operation and a    rollback() could occur between the two basically unpreparing\" the    statement. Also synchronized some methods in ConnectionJDBC2 that looked    like they needed some sync.  o Corrected some exception error messages that contained incorrect hexadecimal    values.\"", "o Added a unit test (and made a couple of minor fixes) for column collation    support. Seems to work fine now.  o Fixed TimestampTest.testWriteDate() to actually test whether dates are    written correctly (i.e. w/o their time component) into the DB.", "o Corrected bug [1075977] setObject() causes SQLException.", "o Fixed some NPEs caused by the new per column collation support.  o Applied Mike's fix for [1074356] TDS 4/5 Login fails with latest CVS code.", "o Applied Mike's bugfix for [1074096] Incorrect data type determine on dataset    meta data.", "o Corrected a bug which was causing Statement.setMaxRows() to not work with    cursor-based ResultSets.", "o Corrected bug [1071397] Error in prepared statement (parameters in outer    join escapes are not recognized).", "o Corrected a bug that was causing Date values to be inserted just like    Timestamps (i.e. including the time component).", "o Fixed a problem with absolute(-1) (the row position was incorrectly    updated).", "o Corrected bug [1067224] getPrimaryKeys does not return PK_NAME column.", "o Corrected bug [1062395] Empty (but not null) blobs should return byte[0].", "o Applied Mike's fix for bug [1062549] Build fails under java 1.3.  o Corrected bug [1062198] SecurityException not caught in class    ConnectionJDBC2 (fix by Andreas Mross - amross).", "o Fixed case of 'props.tcpnodelay' in JtdsDataSource.getConnection() (two   unit tests were failing). o Added test for 'tcpNoDelay' property to DefaultPropertiesTestLibrary.", "o Applied Mike's fix for bug [1060466] SQL Executed twice.  o Applied Mike's fix for bug [1059916] Whitespace needed in preparedStatement.  o Tiny fix in XaTest to avoid deadlocks in case an SQLException is thrown.", "o Corrected bug [1057237] Protocol Exception processing TDS_COLINFO packets.", " o Created FastStatementCache for users with a limited number of unique    prepared statements who want the fastest performance possible.  o Added maxStatements property to control how many simultaneous statements the    connection keeps open.  o Corrected bug when dropping procedures; the logic for DROP PROC and    sp_unprepare was reversed.  o Reduced overhead associated with latching.  The connection now establishes a    NonCachingStatementCache (yes, it is an oxymoron) when maxStatements is 0 and    a FastStatementCache when maxStatements is Integer.MAX_VALUE.  This prevents    the need for the latching methods to check the statement size each time.  o These changes address RFE [920825] and bug [1019694].", "o Applied Mike's fix for bug [1052942] Error processing JDBC call escape.", "o Altered the interface of Brian's StatementCache interface to correctly    handle both usage counts (searching by SQL string) and searching by key.    Still need to do the implementation, though.  o One more minor change for bug [1051747] Array out of bounds Exception in    ResultSetMetaData (outputting the actual column index in the exception text    rather than the column count).", "o JtdsDataSourceUnitTest.Test_JtdsDataSource_getConnection.testNormal() now    uses the new properties in connection.properties to check if connecting    through a DataSource actually works (also tests bug [1051595] jtdsDataSource    connects only to localhost - could not reproduce).", " o Corrected bug [1051747] Array out of bounds Exception in ResultSetMetaData;    (thanks to Mike Hutchinson for the patch).", "o Corrected a bug that was causing Charsets.properties not to be loaded under    Db-Visualizer (and in any case when the file could not be loaded via the    thread context classloader).  o Made some minor modifications to ConnectionJDNC2.setCollation() to correctly    translate bytes to ints.  o Updated XaTest to drop the test tables on test end. Also prepended jTDS_\"    to all non-temporary table names (in all tests) to ensure no conflicts with    real tables occur.  o Cleaned up Javadoc comments to get rid of build warnings.\"", "o Corrected a bug that was preventing the ConnectionPoolDataSource    implementation from working correctly with JNDI, by having JtdsDataSource    implement this interface, too.  o Corrected bug [1050660] PreparedStatement.getMetaData() clears resultset.    JtdsPreparedStatement.getMetaData() always submitted a request to obtain the    meta data, even if the ResultSet was already available, effectively dumping    the ResultSet.", "o Applied Mike's fix for bug [1047094] Problem with the store procedure's    return.", "o Fixed a bug that was causing ResultSet retrieval by name to return the last    matching column rather than the first.", "o Fixed a couple of errors in Support.convert(), calls to Blob.getBytes() and    Clob.getString() with a position of 0.", "o Fixed the broken test for bug [1042272] jTDS doesn't allow null value into    Boolean.", "o Applied Mike's fix for bug [1042272] jTDS doesn't allow null value into    Boolean.", "o Corrected bug [1040475] Possible bug when converting to and from datetime.    SQL Server seems to accept datetime values outside the 1753-9999 range as    long as they are submitted as SYBDATETIME values and not as Strings and they    are read back just fine. Weird.", "o Corrected a bug in TdsCore causing java.sql.SQLException: Output parameters    have not yet been processed. Call getMoreResults().\" to be thrown with    Sybase.\"", "o Corrected bug [1039876] MS SQL JtdsResultSet.isAfterLast() always returns    false.", "o Conversion to LONGVARCHAR from most types was broken. Fixed.", "o Typo fix.", "o Corrected bug [1036059] getTimestamp with Calendar applies tzone offset    wrong way. The getTimestamp(), getTime() and getDate() methods with Calendar    parameters were applying the time zone difference the same way as the set    methods (hope it's not the set methods that were wrong, the JDBC spec is    VERY vague about how the Calendar should be used).", "o Corrected bug [1036058] DataSource implementation broken. Thanks, Mike for    finding this before the new release.", "o Changed the default TDS version to 8.0 when connecting to SQL Server.  o Corrected bug [1032278] metadata.getColumnClassName not match    resultset.getObject. Also improved handling of LOB columns in updateable    ResultSets: until now, updateObject with a LOB value caused the whole    content to be cached into memory.  o getObject() (both in JtdsResultSet and JtdsCallableStatement) returned    UniqueIdentifier objects for UNIQUEIDENTIFIER columns. Fixed.  o Modified some TdsCore.executeSQL() calls to send -1 for maxRows (in order to    avoid unnecessary SET ROWCOUNT queries).  o JtdsDataSource uses the default values from DefaultProperties instead of    duplicating the initialization. Also, for easier handling, all values are    kept internally as Strings.", "took out incorrect comment", "o Added a test for bug [1028881] statement.execute() causes wrong ResultSet    type.", "o Corrected a bug that was causing no exception to be thrown when an invalid    call escape syntax ({call ?=...\") was used.  o Cleaned up some warnings signalled by my IDE again.\"", "o Really minor cleanup because my IDE was complaining of some errors.", "o Added a simple test case for bug [1010660] 0.9-rc1 setMaxRows causes    unlimited temp stored procedures, but was unable to reproduce the behavior.", "o Corrected bug [1027304] DatabaseMetaData.getSchemas() returns 1 column (need    2); for JDBC 3.0 getSchemas() now also returns a NULL TABLE_CATALOG column.", "o Corrected bug [1023984] Protocol error processing table meta data. Turns out    the TABNAME packet is only different for TDS versions 0x71000001 and up    (i.e. SQL Server versions 2000 SP1 and newer). Added an internalTdsVersion    field to SharedSocket, that should probably replace tdsVersion altogether.", " o Corrected bug [1023984] Protocol error processing table meta data; (thanks to    Mike Hutchinson for the bug report and patch).", " o Corrected bug [1022968] Long SQL expression error; (thanks to Mike Hutchinson    for the patch).", "o Fixed some minoe issues with LOBs and InputStreams/Readers that don't fill    the read buffer.  o Fixed BigDecimal handling in Support.embedData() (used when prepareSQL=0).    BigDecimal values had their precision changed to 10 for some reason.", "o Corrected a bug which was causing strings to always be sent as non-unicode    (i.e. not preceded by N') by prepared statements with prepareSQL=0,    regardless of TDS version and settings.  o Corrected bug [1022445] Cursor downgrade warning not raised; thanks Mike for    the find and fix.  o Corrected bug [1022448] NPE Cursor result set errors with prepareSQL != 1;    thanks Mike for the find and fix.  o Added a misc component to the driver version, to include release candidate    information or any other version information besides major and minor version    (e.g. the -rc2\" in 0.9-rc2).\"", "o Corrected bug [1020733] Sysbase test failures; (thanks to Mike Hutchinson    for the bug report and patch).  o Replaced global temporary tables and procedures (##\"-prefixed) with local    temporary tables and procedures (\"#\"-prefixed) in all tests", "o Corrected bug [1020733] Sysbase test failures; (thanks to Mike Hutchinson    for the bug report and patch).", "o Fixed bug #1020324 - Driver.parseURL method: missing host check\".\"", "o Added a simple check and a read loop instead of a single read to BlobImpl    and ClobImpl.  o Small changes in LargeLOBTest.testLargeBlob1() and    TestBase.compareInputStreams()/compareReaders() to improve performance. All    three now use buffers instead of reading/writing one byte at a time.    LargeLOBTest runs now in just over a minute.  o Added a test for bug #1008816 - 'More data in stream ...\" error when    inserting an image' to LOBTest (testBlobSet8). This seems to have been fixed    starting with 0.9-rc1.\"", "o Improved BlobImpl internal OutputStream write(byte[], int, int)    implementation. No longer uses write(byte). Also cleaned up somewhat    ClobImpl.  o TestBase.compareInputStreams() and compareReaders() were not checking for    EOF on the first input stream/readed. Fixed.  o LargeLOBTest now only runs if the 'jTDS.runLargeLOBTest' system property is    defined. Should do this with 1.4-only test methods too.  o Updated build.sh to work on my development machine (should work better on    any *NIX now).  o Cleaned up some Javadoc comments that were causing warnings when generating    the documentation.  o Cleaned up some IntelliJ IDEA warnings, including a possible bug that could    cause NPEs in TdsCode.executeSQL70().", " o Added test for bug [1008882] Some queries with parameters cannot be executed    with 0.9-rc1", " o Applied patch attached to bug [1017616] 0.9-RC1 Threading problem; (thanks to    Mike Hutchinson for the patch).", " o Corrected bug [1017164] executeQuery fails with > 2 resultsets; (thanks to    Mike Hutchinson for the patch).", " o Corrected bug [1017896] Fn convert parameters wrong way round; (thanks to    Mike Hutchinson for the bug report and patch).", " o Corrected bug [1017957] 9.1 rc1 and resin 3.0.8 incompatibilities?;    JtdsDataSource no longer inherits accessors and mutators from another class.", " o Corrected bug [1009233] ResultSet getColumnName, getColumnLabel return wrong    values; (thanks to Mike Hutchinson for the fix).  o Added test for bug [1009233] ResultSet getColumnName, getColumnLabel return    wrong values.  o Corrected bug [1015543] ResultSetMetaData.isNullable always returns    columnNoNulls; (thanks to Mike Hutchinson for the bug report and patch).  o Miscellaneous test clean up.", " o Corrected bug [1013819] Cursor downgraded bug;    (thanks to Mike Hutchinson for the bug report and patch).", " o Corrected bug [1013749] Driver does not support params inside escapes;    (thanks to Mike Hutchinson for the bug report and patch).", "Updated for bug [1008097] 0.9-rc1 prepareSQL=3 - read only cursor.", " o Corrected bug [1012318] 0.9-rc1 throw NullPointerException if user/password    passed; if a null user or password was passed the driver would throw a    NullPointerException.", " o Applied patch [1013432] Patches for SUN JDBC Compatibility test; (many thanks    again to Hutchinson for the patch.  The driver now passes the SUN JDBC    compatibility test suite 1.3.1).  The following issues were also addressed in    this patch:      [1012307] PreparedStatement.setObject (java.util.Date) not working;      (Server not reporting that java.util.Date is not a supported object type)      [1012301] 0.9-rc1: Prepared statement execution error;      (Leading spaces cause the parameter marker offsets to be incorrect)      [1011650] 0.9-rc1: comments get parsed; (Added Joel Fouse's patch plus      modifications to ensure that driver can cope with comments before the first      SQL statement).      [1002971] TimestampTest failures under JDK 1.3 (Possible class cast      exception in TdsData).      [1008126] Metadata getTimeDateFunctions() wrong", " o Corrected bug [1009234] sp_prepare and sp_prepexec should be limited to TDS    8.0", " o Additional corrections for bug [966274] Trusted Connections no longer work;    (thanks to David Kilzer and Joel Fouse).", " o Additional corrections for bug [966274] Trusted Connections no longer work;    (thanks to David Kilzer and Joel Fouse).", " o Corrected bug [966274] Trusted Connections no longer work; (thanks to Mike    Hutchinson for the patch and all the users who helped to find the problem).", " o Corrected bug [1006449] 0.9rc1: Driver version broken; (thanks to Mike    Hutchinson for the patch).", " o Corrected bug [1008208] 0.9-rc1 updateNull doesn't work; updated test to    ensure functionality continues to work in the future.", " o Added test for bug [1008208] 0.9-rc1 updateNull doesn't work", " o Corrected conversion errors with Long values that were sent as BigDecimal;    the value sent to the database was not the value specified.", " o Added test for bug [1006845] Stored procedure with 18 parameters", " o Applied patch in bug [1006845] Stored procedure with 18 parameters; (thanks    to Mike Hutchinson for the patch).", " o Applied patch in bug [1006218] getObject returns incorrect Java class;    (thanks to Mike Hutchinson for the patch).", " o Corrected bug [1005644] Small bug in ant build file; (thanks to Mike    Hutchinson for the fix).", " o Corrected bug [1005881] Typo in Exception message Uknown server host name    abc\"\"", "o Created JtdsDataSourceUnitTest class.  Cleaned up AbstractDataSource to   use DefaultProperties defaults, added missing appName and progName   properties, fixed type of prepareSql from boolean to int, and renamed   isLastUpdateCount() to getLastUpdateCount().  Fixed parsing of new type   of prepareSql property in JtdsObjectFactory.getObjectInstance(). o Updated DefaultPropertiesTestLibrary to contain flags for only testing a   default setup of SQL Server and/or TDS 7.0.", " o Corrected bug introduced with early work where the temporary stored procedure    name may not have been unique for the connection.", "Fix bad grammar in javadoc for inner classes.", " o Corrected bug with sp_prepare/sp_execute logic where statements without    parameters were being sent as raw SQL even though the SQL was prepared with    sp_prepare.", " o Applied patch in bug [1003507] Cursor result set close error;    (thanks to Mike Hutchinson for report and the fix).", " o Applied patch in bug  [1001956] updateBytes() converted to hex string in    varchar; (thanks to Mike Hutchinson for the fix).", " o Applied patch in bug [1002811] Poor performance of cursor result sets;    (thanks to Mike Hutchinson for the fix).", "Fixed Driver.getPropertyInfo() to parse url when null properties are used.", " o Corrected bug in JtdsPreparedStatement.getParameter() where the error check    would incorrectly allow a 0 value (thanks to Mike Hutchinson for the report    and fix).  o Corrected bug in TdsData.getVariant() where the SYBUNIQUE case would return    an incorrect UID string (thanks to Mike Hutchinson for the report and fix).", " o Updated BlobImpl and ClobImpl so that they compile with the 1.3 JDK.  o Corrected bug in Blob and Clob file writes where a NullPointerException was    thrown if close() was called twice on a stream.", "07/30/2004 - Brian Heineman  o Updated build process to correct bug [999702] LICENSE file not included in    source distribution", "Backed out changed for bug [998765] Exception with Sybase and metaData.getTables()", "Fixed expected versus actual arguments in assertEquals() in ResultSetTest.testResultSetScroll1().", "o Fixed CallableStatementTest.testCallableRegisterOutParameter1() which was   using the '==' operator on String objects.  Changed to use assertEquals()   instead.  Cleaned up two other uses of '==' inside assert*() methods.", "o Renamed SharedNamedPipeTest to NamedPipeUnitTest to better reflect its   usage. o Added protected getters and setters to SharedSocket so that the in, out,   tdsVersion and serverType fields could be made private again.  Implemented   use of getters and setters in SharedSocket and SharedNamedPipe. o Refactored SharedNamedPipe constructor into an instance() static factory   method.  Allowed calculateBufferSize() method to be made non-static,   and will allow for easier unit testing in the future. o Cleaned up javadoc: fixed spelling and removed unused @throws.", " o Corrected bug [998765] Exception with Sybase and metaData.getTables(); Added    test to ensure this functionality continues to work in the future.", "o Made TdsCore.TDS42, TDS50, TDS70, TDS80 constants public for use with    testing.  o Made TdsCore.MIN_PKT_SIZE public, and created TdsCore.MAX_PKT_SIZE and    TdsCore.DEFAULT_MIN_PKT_SIZE_TDS70.  Removed used of magic\" values.  o Wrote new SharedNamedPipeTest class for testing new    SharedNamedPipe.calculateBufferSize() method.  o Fixed bug in SharedNamedPipe that caused it to create a zero-length    BufferedInputStream internally when packetSize == 0 (which is common    for TDS 7.0 and TDS 8.0 to allow the server to set the packet size).\"", "Fixed default value of lobBuffer in AbstractDataSource.getReference().  It was using portNumber\" instead of \"lobBuffer\" for its default.\"", "Fixed message property in unpackProperties().", "o Fixed bug when using instances with named pipes.", " o Added test for bug [945462] getResultSet() return null if you use    scrollable/updatable", " o Corrected bug in TestBase where InputStreams and Readers were not being    closed.", " o Added lobBuffer parameter to control the memory used by LOB's.  o Updated FAQ documentation with new parameter information and TDS protocol    support.  o Corrected bug in Blob and Clob truncate() methods that caused a    NullPointerException to be thrown for disk based LOBs.", " o Added test for bug [981958] PreparedStatement doesn't work correctly", " o Added test for bug [983432] Prepared call doesn't work with jTDS 0.8", " o Corrected bug [994916] datetime decoding in TdsData.java; Added tests to    ensure this functionality continues to work in the future.", " o Added test for bug [994988] Network error when null is returned via int output parm", " o Added test for bug [994888] Callable statement and Float output parameter", " o Added test for bug [974284] retval on callable statement isn't handled correctly", " o Added test for bug [991640] java.sql.Date error and RAISERROR problem", " o Added test for bug [992715] wasnull() always returns false", " o Applied patch in bug [992971] Decimal testcase fails with sql7 (Thanks to    Mike Hutchinson for the patch)  o Corrected bug introduced in Clob optimization.", " o Applied patch in bug [992971], which corrects bug [992976] Zero length    string error on Sybase and MSQL 6.5 (Thanks to Mike Hutchinson for the    patch); made a minor change to reduce memory allocation.", " o Added test for bug [974801] stored procedure error in Northwind", " o Added test for bug [930305] getGeneratedKeys() does not work with triggers", " o Corrected bug [991088] Data type 0x3E is unknown error with SQL Server 2005;    SYBFLTN values are now properly formed and are no longer sent as SYBFLT8    when they are not null.", " o Corrected bug [991033] Data type 0x32 is unknown error with SQL Server 2005;    SYBBITN values are now properly formed and are no longer sent as SYBBIT    when they are not null.", " o Added test for bug [989399] bug? blob.getBytes() from 0", " o Corrected bug [989963] BigInt becomes Numeric;    ResultSetMetaData.getColumnType(int) now returns Types.BIGINT if the    TDS 8.0 protocol is being used with a 1.4+ JRE.  Added tests to ensure    this functionality continues to work in the future.", " o Corrected bug [983561] getDatetimeValue truncates fractional milliseconds;    Added test to ensure this functionality continues to work in the future.", " o Added test for bug [985754] row count is always 0", " o Added test for bug [961594] ResultSet.", " o Added test for bug [963799] float values change when written to the database", " o Added test for bug [946171] null boolean in CallableStatement bug", "Corrected test for bug [939206] TdsException: can't sent this BigDecimal", " o Added test for bug [939206] TdsException: can't sent this BigDecimal", " o Corrected bug [919477] Large LOB data causes OutOfMemoryError; Blob/Clob    data is now buffered to disk for reads as well as writes if the data    exceeds 32KB.  o Reduced amount of time Blob/Clob objects are locked due to synchronization.  o READTEXT support has been temporarily disabled.  This feature will be    enabled again once code is in place to control the in-memory buffering via    a connection property and WRITETEXT support is added.", "Removed maximum heap size setting to test for bug [919477] Large LOB data causes OutOfMemoryError", " o Corrected bug [985956] Cannot setObject(null) on image; Added test to ensure    this functionality continues to work in the future.", " o Added test for bug [974036] Bug in 0.8rc1 DatabaseMetaData method    getTableTypes()", "Corrected bug with cached statements and savepoints.  If a statement was cached after a savepoint was set, that statement would not be removed from the cache if the savepoint was rolledback.  Added test to ensure this functionality continues to work in the future.", "Corrected bug with now\" translation.\"", "Corrected bug with now\" translation.\"", "Corrected bug where Cp\" or \"MS\" was being appended to strings that already started with a different case of the same sequence of characters.\"", "Corrected bug [946642] No support for 1.4 java.sql.Types.BOOLEAN.", "Applied second update of patch [934396] better IO error handling", "Added test for bug [945507] closing statement after selecting a large IMAGE - Exception", "Corrected bug [938494] setObject(i, o, NUMERIC/DECIMAL) cuts off decimal places", "Added tests for bug [938494] setObject(i, o, NUMERIC/DECIMAL) cuts off decimal places", "Corrected bug [938632] String index out of bounds error in 0.8rc1", "Corrected bug [938632] String index out of bounds error in 0.8rc1", "Corrected PreparedStatement caching bug related to changing catalogs.", "Applied part of patch [934396] better IO error handling", "Partial application of patch [934396] better IO error handling", "Added full set of tests for bug [934273] setNull does not set IMAGE type to null", "Added full set of test for bug [934273] setNull does not set IMAGE type to null", "Corrected bug [934273] setNull does not set IMAGE type to null", "Added check to commit() and rollback() to determine if connection is closed to fix bug [931090] ArrayIndexOutOfBoundsException in rollback()", "Added test for bug [931090] ArrayIndexOutOfBoundsException in rollback()", "Corrected bug preventing connections to databases with spaces in the name.", "Fixed an issue in TdsSocket causing queued output packets to be ignored; initialized charset field in TdsDataSource.", "Added a test for bug #926620 (Too long value for VARCHAR field) and fixed it.", "Added test to demonstrate bug [924030] EscapeProcesser problem with {}\" brackets\"", "Corrected parsing bug that occured when { or } was found in a quoted string.", "Added a test for bug #582464; fixed the fix for bug #922802. ;o)", "Fixed bug #922802 - TdsStatement.executeBatch() throws exception if no statements added", "Corrected bug [919594] Clob support; added setObject support for both java.sql.Blob and java.sql.Clob.  Added initial Blob and Clob functional tests.", "Fixed lastUpdateCount behavior; fixed CursorResultSet.insertRow() w/ PreparedStatement; fixed row number and total rows handling in CursorResultSet.", "Corrected bug [909169] jTDS 0.7: introduced another bug (Stored Procedure).", "Added the 'macAddress' parameter; fixed a bug related to SQL Server 6.5 and binary values; added API server cursor documentation and test results.", "Fixed a (pretty serious) issue with parameterized cursor-based ResultSets.", "Applied Mike's changes to make CursorResultSets work with SQL Server 6.5; introduced a field for the server version in TdsConnection and fixed the SCOPE_IDENTITY() issue; modified PerformanceTest to create (and drop) its own test table; minor bugfixes.", "Applied Mike's changes to make CursorResultSets work with SQL Server 6.5; introduced a field for the server version in TdsConnection and fixed the SCOPE_IDENTITY() issue; modified PerformanceTest to create (and drop) its own test table; minor bugfixes.", "Full support for scrollable/updateable ResultSets; fixed TDS_COLINFO handling; improved generated keys retrieval; cursor-based ResultSets are now closed when the Statement that created them is closed.", "Improved PacketRowResult to handle any type of objects from the ResultSet.updateXXX methods; fixed a bug in CursorResultSet affecting row updates; added a test for out-of-order closing of objects (i.e. Connection before Statement).", "Some of the files were not commited yesterday, so here they are; fixed the ArrayIndexOutOfBoundsException thrown by TdsConnection.freeTds; Updated the README and added a HTML with the feature matrix of jTDS.", "Implemented updateRow and insertRow in CursorResultSet; updated DatabaseMetaData; fixed an issue in TdsStatement where exceptions would get lost; updated tests.", "Fixed an issue in TdsStatement where exceptions would get lost when the next result was a ResultSet or there were no more results.", "Corrected bug in parsing where [ and  would cause the procedure name to be parsed incorrectly.\"", "Fixed a regression related to sending DECIMAL/NUMERIC values; made the driver a property of the connection.properties file; added all 1.4 Statement constants to TdsStatement.", "Fixed a typo which could have caused problems with inserted keys retrieval on SQL Server 6.5 and Sybase.", "Fixed CursorResultSet.relative; fixed subtle bug in allocateTds; applied patch to Tds and TdsComm, greatly simplifying cancel handling; code clean-up in Tds.", "Added a couple of tests for BigDecimal and Long values and fixed a couple of issues related to BigDecimal handling and the lastUpdateCount param.", "Added the lastUpdateCount\" parameter (bug #652280); cleaned up and reformatted Tds; added the \"charset\" parameter to the DataSource; fixed an issue with BIGINT and NUMERIC/DECIMAL fields.\"", "Corrected bug in {fn concat()} translation; Sun javadoc shows double quotes but single quotes are expected. Improved performance of translateConcat().", "Updated Sybase stored procedure name generation to jTDS\" + last 26 characters of NEWID() [without the dashes].  This should solve the problem referred to in bug [822544] Issue connecting using alias on Sybase 11.9.2", "Set instance variables to empty strings per bug [886449] TdsDataSource default null values cause issues. Updated format to Sun standard.", "Added missing exec\" per bug [822544] Issue connecting using alias on Sybase 11.9.2", "Corrected bug where {fn concat(column1, column2)} would throw a SQLException. Minor correction to translateTimestamp() where prefix assumed to be d \" instead of \"ts \". Improved translation performance ~11% by reducing memory allocations and comparisions (the date", "Corrected bug where {escape '''} was causing parameters to be calulcated incorrectly (this specifc escape value is now invalid and an exception is thrown). Improved parsing of {? = call} to support whitespace around the '=' and to be case-insensitive. Implemented {fn CONCAT()} Improved SQL parsing performance when translating JDBC escape sequences. Improved escape sequence error messages.", "Fixed bug with longs in prepared statements: sometimes the stored proc got created with an integer parameter instead of numeric, causing rounding errors. Fix was in the method setLong()", "fixed bug 851982 - client name not being sent in login request", "Implemented CallableStatements with return values, and fixed some bugs.", "Fixed bugs 809292 and 764197: when db server is closed while jtds is reading a packet cpu ramps to 99% Fix is to check for -1 when calling DataInputStream.read()", "fixed bug where getting metadata on table with dash (-) in name caused syntax error. Fix was to put square braces around all table names in queries.", "Slight bug when adding exceptions to chain in TdsConnection.close() Was exposed when doing connection pooling with dbcp and testOnBorrow was set to true\"\"", "Fixed bugs #679040 and #679041 (charset problems).", "Fixed the Tds 0 already allocated issue (or just hope so).", "Fixed bug #664391.", "Fixed bug #664507.", "Fixed a precision problem with MONEY and SMALLMONEY datatypes.", "Fixed bug #662295.", "Fixed bug #653510.", "See CHANGELOG (fixed bug #632852).", "Fixed bug #629022.", "I think I fixed the 'cursor not found' issue. ;o)", "Fixed bug #617501.", "Fixed bug #598679.", "Added jdbc3_0-ext.jar to allow compilation of the new stubs under JDK 1.3 and fixed CursorResultSet.createCursor().", "Fixed ResultSetMetaData.", "Implemented almost all ResultSetMetaData methods; fixed rollback().", "reintroduced decimal (handled like numerics) as Parameters setObject with null allowed for all types fixed sending of BIT null, (setBoolean(null)) fixed sending of BIGVARBINARYs maxLength: -1 is not accepted corrected problems in relinquishing Tds at Statementclose", "ResultSet.currentRow checks more DebugMessage in DatabaseMetaData commented Tds.discardResultSet accepts RetStat updateCount = 0 in SelectStatements invalidDate current row after failed ResultSet.next() fixed NullPointerException in TdsStatement.getTds Allow unknown subpackets during ResultSet processing (envchange) Fixed some unitTests, (most by setting the Language, was no problem for english)", "change TDS-Statement-Relation, change usage of Procedures extended some Float-Handling, fixed problem with leftovers in inbuffer, adapt outbuffer to server-request, some not implemented fixes fixed some problems with MetaData getting, fixed DST - Problem"], "metric": [["2", "8", "48", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "8"], ["1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "4", "22", "6", "0", "0", "0", "0", "5", "5", "27", "11", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "13", "68", "904", "873", "0", "0", "0", "0", "0", "0", "13", "0", "0", "62", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "22", "20", "0", "0", "0", "0", "0", "0", "1", "1", "1", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "5", "8", "11", "9", "0", "0", "0", "0", "0", "0", "5", "0", "0", "8", "0", "0", "0", "0", "0", "0"], ["1", "1", "37", "20", "0", "0", "0", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "8", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "6", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "1", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "65", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "13", "2", "1", "2", "44", "5", "1", "1", "6", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "20", "12", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "4", "62", "82", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "4", "5"], ["1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "1", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "21", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "38", "15", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "33", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "39", "9", "2", "2", "17", "1", "2", "2", "8", "0", "0", "0", "2", "1", "0", "1", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "25", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "1", "0", "2", "3", "51", "5", "1", "1", "7", "0", "0", "0", "2", "2", "0", "2", "0", "0", "2", "0", "0", "0"], ["1", "5", "10", "4", "0", "0", "0", "0", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "15", "9", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "15", "1", "1", "1", "2", "1", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "21", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "29", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "32", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "19", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "22", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "27", "167", "63", "2", "2", "83", "0", "1", "2", "5", "1", "0", "0", "2", "3", "0", "0", "0", "0", "4", "5", "0", "12"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "43", "55", "1", "2", "19", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "0", "0", "4"], ["0", "0", "0", "0", "2", "5", "15", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "4", "119", "42", "1", "1", "3", "0", "0", "0", "2", "3", "1", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "107", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "45", "25", "0", "0", "0", "0", "2", "3", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "2", "4", "100", "0", "1", "1", "2", "0", "0", "0", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "10", "129", "87", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "7", "7", "6", "1", "1", "3", "0", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "4", "78", "4", "1", "3", "47", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "28", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "2", "35", "1", "1", "1", "2", "0", "0", "0", "2", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "47", "313", "106", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "44"], ["0", "0", "0", "0", "2", "2", "68", "36", "1", "1", "2", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "1", "4", "11", "290", "216", "1", "1", "3", "0", "0", "0", "4", "2", "1", "10", "0", "0", "1", "0", "0", "1"], ["1", "1", "44", "40", "1", "1", "33", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "50", "0", "1", "1", "3", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "15", "110", "80", "3", "9", "120", "24", "1", "1", "5", "0", "0", "0", "3", "1", "0", "5", "0", "0", "1", "0", "0", "18"], ["0", "0", "0", "0", "1", "2", "86", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "116", "156", "1", "1", "1", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "44", "32", "1", "1", "3", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "4", "2", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "7", "6", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "11", "0", "1", "5", "28", "38", "1", "1", "2", "1", "0", "0", "1", "0", "0", "6", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "3", "5", "171", "29", "1", "1", "5", "0", "0", "0", "3", "5", "1", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "28", "22", "1", "1", "4", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "6", "102", "99", "1", "1", "3", "0", "0", "1", "1", "4", "5", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "27", "2", "1", "1", "4", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "10", "1", "1", "1", "30", "0", "2", "5", "15", "7", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "706", "797", "4", "4", "376", "390", "1", "1", "7", "0", "2", "2", "0", "13", "16", "0", "0", "0", "3", "5", "0", "95"], ["3", "29", "86", "74", "0", "0", "0", "0", "1", "4", "12", "6", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "2", "20"], ["0", "0", "0", "0", "1", "2", "25", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "131", "533", "409", "10", "35", "209", "157", "2", "2", "6", "0", "0", "0", "10", "4", "3", "14", "0", "0", "4", "1", "8", "123"], ["1", "1", "2", "2", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["23", "71", "121", "84", "1", "8", "7", "7", "3", "4", "13", "1", "0", "0", "1", "0", "0", "2", "0", "0", "23", "150", "0", "-101"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["25", "92", "320", "497", "5", "24", "161", "37", "41", "35", "70", "456", "0", "0", "5", "6", "1", "15", "0", "2", "23", "150", "21", "-88"], ["1", "1", "1", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "24", "20", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "2", "1", "1", "21", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "10", "10", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "30", "27", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "9", "3", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "2", "2", "0", "0", "0", "0", "2", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "6", "4", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["4", "8", "4", "59", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "57", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "4", "0", "0", "0", "0", "0", "2", "2", "10", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "28", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "12", "100", "93", "1", "3", "99", "2", "1", "1", "9", "0", "0", "0", "1", "4", "0", "1", "0", "0", "2", "1", "0", "5"], ["1", "2", "1", "7", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "18", "29", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "39", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["16", "274", "260", "260", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "16", "0", "0", "136"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "43", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "64", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "4", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "39", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "13", "2", "1", "2", "42", "1", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "8", "18", "5", "1", "3", "1", "1", "2", "2", "5", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "5"], ["1", "5", "4", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4"], ["0", "0", "0", "0", "1", "2", "40", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "13", "5", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "23", "143", "57", "1", "1", "12", "5", "2", "2", "5", "0", "0", "0", "1", "1", "1", "0", "0", "0", "3", "1", "0", "6"], ["1", "3", "7", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "4", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "11", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "31", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "18", "0", "1", "3", "21", "1", "1", "1", "5", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "1"], ["9", "31", "98", "28", "1", "2", "19", "0", "3", "5", "14", "0", "0", "0", "1", "2", "0", "0", "0", "0", "9", "9", "0", "10"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "6", "9", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "3"], ["1", "2", "84", "82", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "7", "6", "18", "11", "21", "22", "0", "1", "1", "3", "0", "0", "0", "11", "1", "0", "0", "0", "0", "4", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "27", "25", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "2", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "30", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "92", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "7", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "57", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "1", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "22", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "4", "1", "2", "61", "1", "1", "2", "5", "7", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "1", "4", "5", "21", "1", "1", "3", "0", "0", "0", "1", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "42", "3", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "2", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["16", "40", "1221", "17", "1", "5", "4", "4", "1", "1", "3", "0", "0", "0", "1", "0", "0", "4", "0", "0", "16", "188", "0", "-52"], ["1", "2", "2", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "130", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "7", "4", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "1", "1", "0", "0", "0", "0", "2", "2", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "6", "19", "5", "2", "2", "57", "0", "1", "1", "4", "0", "0", "0", "2", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "2", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "8", "3", "1", "2", "9", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "53", "9", "1", "7", "104", "19", "1", "1", "2", "0", "0", "0", "1", "3", "0", "2", "0", "0", "3", "1", "0", "5"], ["3", "8", "134", "46", "1", "11", "12", "12", "1", "1", "2", "0", "0", "0", "1", "0", "0", "6", "0", "0", "3", "5", "2", "1"], ["1", "7", "87", "64", "1", "1", "205", "0", "1", "1", "2", "0", "0", "0", "1", "4", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "2", "13", "1", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "18", "61", "0", "0", "0", "0", "1", "1", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "6", "1", "2", "49", "7", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "11", "56", "7", "1", "6", "29", "16", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "2", "1", "0", "2"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "5", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "7", "2", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "6", "14", "2", "1", "2", "34", "0", "1", "1", "3", "0", "0", "0", "1", "4", "0", "0", "0", "0", "3", "1", "0", "2"], ["5", "18", "28", "1", "2", "4", "12", "0", "3", "4", "13", "0", "0", "0", "2", "1", "0", "1", "0", "0", "5", "3", "0", "6"], ["1", "6", "110", "103", "1", "5", "37", "6", "1", "1", "11", "0", "0", "0", "1", "1", "0", "3", "0", "0", "1", "1", "0", "1"], ["1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "21", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "11", "19", "21", "1", "8", "100", "8", "1", "1", "3", "0", "0", "0", "1", "2", "0", "6", "0", "0", "2", "0", "0", "5"], ["0", "0", "0", "0", "1", "2", "9", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "6", "3", "4", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "2", "3", "3", "0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "11", "1", "1", "2", "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "6", "15", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "0", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["14", "85", "298", "85", "6", "17", "261", "8", "4", "9", "77", "2", "0", "0", "6", "12", "1", "6", "0", "0", "14", "6", "0", "31"], ["1", "2", "31", "35", "1", "1", "13", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "5", "0", "1", "3", "40", "0", "2", "2", "7", "2", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "9", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "0", "3", "1", "2", "29", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "2", "1", "2", "16", "1", "2", "2", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "27", "33", "19", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "19"], ["0", "0", "0", "0", "1", "2", "3", "3", "1", "1", "5", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["11", "57", "98", "79", "3", "9", "5", "4", "1", "1", "5", "0", "0", "0", "3", "0", "0", "3", "0", "0", "11", "2", "0", "29"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "1", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "64", "11", "1", "1", "113", "0", "2", "2", "14", "1", "1", "0", "0", "8", "0", "0", "0", "0", "1", "1", "0", "1"], ["2", "15", "16", "17", "3", "6", "46", "17", "1", "1", "3", "0", "0", "0", "3", "1", "2", "2", "0", "0", "2", "0", "0", "7"], ["0", "0", "0", "0", "1", "2", "21", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "10", "3", "1", "1", "38", "0", "1", "1", "6", "1", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "17", "5", "1", "1", "16", "0", "1", "1", "4", "1", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "3"], ["3", "16", "17", "41", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "8"], ["2", "8", "14", "8", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "11", "46", "17", "1", "3", "3", "0", "1", "1", "4", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "2", "0", "6"], ["1", "2", "2", "8", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "14", "6", "1", "2", "5", "0", "1", "1", "7", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "4"], ["1", "2", "1", "1", "1", "1", "21", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "13", "7", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "14", "6", "1", "2", "37", "0", "1", "1", "6", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "6", "5", "3", "2", "3", "28", "0", "1", "1", "7", "0", "0", "0", "2", "1", "0", "1", "0", "0", "2", "0", "0", "3"], ["5", "28", "59", "27", "1", "1", "22", "0", "1", "1", "5", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "0", "0", "15"], ["1", "7", "19", "5", "1", "1", "68", "0", "1", "2", "6", "1", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "4"], ["3", "14", "5", "5", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "10"], ["0", "0", "0", "0", "1", "3", "21", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "13", "34", "14", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "9"], ["1", "3", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "24", "111", "87", "3", "3", "47", "1", "1", "1", "3", "0", "0", "0", "3", "2", "0", "1", "0", "0", "3", "2", "0", "6"], ["1", "5", "16", "15", "1", "1", "13", "0", "1", "1", "2", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "4"], ["2", "8", "6", "6", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5"], ["2", "4", "2", "2", "1", "2", "23", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "1", "1", "35", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "2", "2", "0", "0", "0", "0", "2", "2", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "3", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "11", "19", "14", "1", "1", "42", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "6"], ["2", "8", "20", "8", "1", "1", "22", "0", "2", "2", "8", "2", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "1", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "6", "3", "1", "1", "11", "0", "2", "2", "4", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "50", "19", "1", "2", "25", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "5"], ["15", "55", "1060", "1537", "1", "4", "164", "0", "2", "2", "9", "0", "0", "0", "1", "4", "0", "-1", "1", "6", "8", "52", "61", "9"], ["1", "2", "9", "1", "1", "1", "38", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "13", "1", "1", "2", "9", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "2", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "8", "2", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "18", "60", "50", "1", "1", "73", "0", "1", "1", "4", "0", "1", "0", "0", "3", "0", "0", "0", "0", "4", "2", "1", "9"], ["1", "4", "12", "18", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "3"], ["2", "6", "6", "4", "1", "1", "75", "0", "1", "2", "5", "1", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "18", "89", "28", "1", "1", "49", "0", "1", "1", "9", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "2", "0", "7"], ["1", "2", "3", "1", "1", "1", "21", "0", "1", "2", "6", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "12", "20", "28", "1", "2", "10", "3", "2", "3", "20", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "10"], ["1", "4", "10", "3", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "33", "126", "42", "1", "2", "65", "1", "1", "1", "13", "0", "0", "0", "1", "3", "0", "0", "0", "0", "4", "0", "0", "13"], ["1", "2", "1", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "11", "55", "13", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2"], ["1", "2", "2", "1", "2", "4", "16", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "1", "0", "0", "1"], ["1", "5", "4", "3", "0", "0", "0", "0", "2", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "15", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "5", "3", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "2", "12", "11", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "0", "0", "0", "0", "2", "5", "9", "5", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "1", "2", "22", "0", "1", "1", "3", "0", "0", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "17", "40", "33", "2", "4", "63", "0", "2", "3", "9", "3", "0", "0", "2", "2", "0", "0", "0", "0", "3", "1", "0", "10"], ["1", "2", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "2", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "5", "45", "17", "1", "2", "34", "9", "1", "1", "3", "1", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["5", "15", "45", "33", "1", "1", "43", "0", "1", "1", "6", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "1", "0", "6"], ["2", "11", "74", "13", "1", "2", "142", "6", "1", "1", "3", "0", "0", "0", "1", "2", "1", "0", "0", "0", "2", "0", "0", "9"], ["1", "17", "59", "22", "0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "7"], ["2", "16", "48", "64", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "5"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "7", "70", "44", "1", "4", "88", "5", "1", "1", "5", "1", "0", "0", "1", "2", "0", "1", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "1", "30", "4", "1", "1", "6", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["6", "42", "81", "55", "1", "1", "41", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "6", "3", "1", "23"], ["3", "13", "24", "16", "1", "2", "30", "1", "1", "1", "5", "0", "0", "0", "1", "1", "0", "1", "0", "0", "3", "0", "0", "3"], ["0", "0", "0", "0", "2", "5", "1", "145", "1", "1", "3", "0", "0", "0", "2", "0", "7", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "15", "26", "30", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "6"], ["1", "3", "10", "1", "1", "1", "15", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "86", "53", "1", "2", "25", "0", "2", "2", "5", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["1", "3", "3", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "19", "3", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "5", "1", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["5", "16", "64", "22", "0", "0", "0", "0", "1", "1", "22", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "7"], ["2", "4", "4", "5", "0", "0", "0", "0", "3", "5", "8", "4", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "9", "2", "1", "1", "15", "0", "2", "2", "5", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "9", "9", "1", "2", "49", "1", "1", "1", "4", "0", "0", "0", "1", "1", "0", "1", "0", "0", "2", "0", "0", "7"], ["0", "0", "0", "0", "1", "5", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "3", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "1", "2", "36", "3", "1", "1", "1", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["2", "6", "8", "5", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "3", "11", "5", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "22", "11", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5"], ["2", "5", "37", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "3"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "9", "66", "5", "1", "1", "66", "0", "1", "1", "8", "0", "0", "0", "1", "1", "0", "0", "1", "0", "2", "5", "0", "4"], ["2", "34", "30", "19", "1", "2", "136", "0", "1", "1", "3", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "5"], ["1", "2", "2", "1", "1", "7", "13", "6", "1", "1", "4", "0", "0", "0", "1", "1", "0", "4", "0", "0", "1", "0", "0", "1"], ["2", "18", "28", "28", "3", "4", "39", "3", "1", "1", "11", "0", "0", "0", "3", "1", "0", "2", "0", "0", "2", "1", "0", "13"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "4", "1", "0", "0", "0", "0", "3", "7", "96", "118", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "8", "21", "16", "1", "2", "27", "0", "2", "2", "6", "0", "0", "0", "1", "2", "0", "0", "0", "0", "3", "0", "0", "5"], ["4", "18", "40", "38", "2", "7", "93", "6", "1", "1", "8", "0", "0", "0", "2", "4", "0", "4", "0", "0", "4", "0", "0", "12"], ["2", "8", "15", "13", "2", "3", "84", "3", "1", "1", "6", "0", "0", "0", "2", "1", "0", "1", "0", "0", "2", "0", "0", "5"], ["1", "2", "1", "0", "1", "1", "12", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "16", "22", "9", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "5"], ["4", "21", "197", "111", "1", "2", "63", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "4", "0", "0", "9"], ["1", "2", "2", "1", "1", "1", "31", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "0", "1", "2", "33", "1", "1", "1", "4", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "3", "6", "1", "1", "2", "36", "2", "1", "1", "4", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "1", "3", "40", "10", "1", "1", "3", "1", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "1"], ["1", "6", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "4", "8", "0", "1", "2", "36", "0", "1", "1", "1", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "5", "6", "6", "3", "19", "103", "39", "1", "1", "5", "0", "1", "0", "2", "7", "0", "13", "0", "0", "1", "0", "0", "3"], ["1", "3", "2", "2", "1", "2", "11", "0", "1", "1", "5", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "20", "9", "2", "9", "25", "14", "1", "1", "5", "0", "0", "0", "2", "1", "0", "6", "0", "0", "2", "0", "0", "4"], ["1", "3", "5", "4", "1", "1", "19", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["10", "42", "102", "54", "0", "0", "0", "0", "3", "4", "20", "0", "0", "0", "0", "0", "0", "0", "1", "0", "9", "6", "1", "16"], ["1", "2", "1", "0", "0", "0", "0", "0", "2", "2", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["8", "29", "69", "74", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "2", "14"], ["0", "0", "0", "0", "3", "8", "31", "16", "1", "1", "6", "0", "0", "0", "3", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "15", "9", "5", "20", "282", "206", "1", "1", "9", "0", "0", "0", "5", "0", "0", "12", "0", "0", "2", "0", "0", "2"], ["4", "9", "19", "26", "1", "2", "38", "0", "2", "5", "22", "8", "0", "0", "1", "1", "0", "1", "0", "1", "3", "2", "3", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "1", "1", "10", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "2", "2", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "3", "1", "1", "1", "1", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "5", "2", "1", "3", "27", "5", "2", "2", "7", "0", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "2", "1", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "8", "3", "11", "1", "1", "41", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "5"], ["1", "6", "29", "19", "1", "2", "83", "7", "2", "9", "16", "10", "0", "0", "1", "1", "0", "0", "0", "0", "1", "1", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "8", "12", "12", "1", "15", "52", "39", "1", "1", "5", "0", "0", "0", "1", "1", "1", "5", "0", "0", "2", "0", "0", "6"], ["2", "5", "19", "7", "1", "9", "72", "1", "2", "4", "10", "5", "0", "0", "1", "5", "0", "2", "0", "0", "2", "0", "0", "1"], ["10", "60", "278", "247", "2", "29", "75", "9", "2", "3", "21", "4", "0", "0", "2", "1", "0", "3", "0", "0", "10", "0", "2", "44"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "42", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "35", "102", "99", "2", "18", "49", "36", "1", "1", "5", "0", "0", "0", "2", "1", "0", "13", "0", "0", "3", "0", "0", "20"], ["1", "3", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "2", "29", "3", "1", "1", "3", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "6", "10", "6", "1", "1", "7", "2", "1", "1", "4", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "4"], ["3", "17", "23", "12", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "6"], ["1", "22", "130", "103", "1", "1", "15", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "9"], ["1", "3", "2", "0", "1", "1", "23", "0", "1", "1", "5", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "16", "25", "26", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "9"], ["7", "63", "254", "301", "2", "27", "43", "62", "2", "2", "13", "1", "0", "0", "2", "1", "0", "21", "0", "0", "7", "0", "1", "21"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "13", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "7", "8", "6", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "3", "5", "129", "31", "0", "0", "0", "0", "0", "0", "3", "4", "0", "1", "0", "0", "0", "0", "0", "0"], ["5", "70", "1757", "1712", "3", "32", "66", "43", "2", "4", "23", "5", "0", "0", "3", "1", "0", "14", "0", "0", "5", "0", "0", "46"], ["0", "0", "0", "0", "1", "2", "16", "1", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "21", "9", "38", "1", "1", "71", "0", "1", "1", "2", "0", "1", "0", "0", "3", "0", "0", "0", "0", "3", "0", "1", "14"], ["5", "16", "16", "40", "1", "1", "26", "0", "1", "1", "2", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "0", "0", "7"], ["1", "7", "36", "2", "1", "1", "2", "2", "1", "1", "2", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["2", "3", "259", "267", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "47", "47", "0"], ["13", "32", "1588", "1604", "6", "119", "192", "144", "2", "2", "8", "1", "0", "0", "6", "2", "0", "79", "0", "0", "13", "0", "0", "39"], ["1", "4", "1", "2", "0", "0", "0", "0", "1", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "1", "1", "1", "15", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "10", "17", "13", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["9", "65", "327", "346", "1", "1", "328", "0", "3", "3", "1280", "0", "1", "0", "0", "17", "0", "0", "0", "0", "9", "3", "3", "34"], ["4", "17", "62", "61", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "49", "62", "56", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "15"], ["1", "2", "8", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["1", "4", "11", "10", "1", "1", "4", "4", "1", "1", "2", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "13", "75", "18", "1", "1", "3", "0", "0", "0", "1", "1", "0", "7", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "1", "9", "25", "21", "1", "1", "1", "0", "0", "0", "1", "1", "0", "6", "0", "0", "1", "0", "0", "1"], ["1", "17", "245", "136", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "20"], ["5", "27", "31", "100", "2", "14", "35", "35", "1", "2", "8", "1", "0", "0", "2", "0", "0", "7", "0", "0", "5", "0", "0", "22"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "8", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "11", "37", "15", "2", "17", "213", "23", "1", "1", "7", "0", "1", "0", "1", "13", "0", "14", "0", "0", "3", "5", "1", "5"], ["2", "8", "9", "9", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "2"], ["0", "0", "0", "0", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "50", "46", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "5", "6", "0", "0", "0", "0", "1", "2", "5", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "5", "1", "2", "2", "41", "1", "1", "1", "3", "1", "0", "0", "2", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "31", "77", "79", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "1", "19"], ["1", "3", "5", "9", "1", "1", "35", "0", "1", "1", "3", "0", "1", "0", "0", "3", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "2", "12", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "8", "434", "411", "1", "1", "4", "3", "1", "1", "3", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "25", "0", "-2"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "6", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "15", "2", "12", "0", "0", "0", "0", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "3", "1", "1", "3", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["3", "23", "84", "38", "1", "4", "9", "2", "1", "1", "11", "0", "0", "0", "1", "5", "0", "-3", "0", "0", "3", "9", "0", "11"], ["1", "3", "17", "7", "1", "1", "9", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "12", "41", "16", "1", "1", "63", "0", "1", "1", "10", "1", "1", "0", "0", "5", "0", "0", "0", "0", "4", "1", "0", "3"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "28", "1", "1", "1", "2", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "64", "44", "1", "1", "2", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["12", "80", "200", "110", "1", "1", "0", "1", "3", "5", "41", "13", "0", "0", "1", "0", "0", "0", "0", "0", "12", "5", "0", "54"], ["0", "0", "0", "0", "2", "3", "43", "16", "1", "1", "1", "0", "1", "0", "1", "3", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "31", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "4", "4", "1", "2", "401", "0", "1", "1", "6", "2", "0", "0", "1", "10", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "18", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "17", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "21", "0", "1", "1", "3", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "29", "13", "1", "1", "1", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "25", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["7", "102", "294", "284", "1", "3", "57", "25", "2", "3", "7", "1", "0", "0", "1", "0", "0", "3", "0", "0", "7", "2", "0", "73"], ["2", "12", "51", "33", "0", "0", "0", "0", "1", "1", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "2", "87", "61", "1", "1", "2", "1", "0", "0", "1", "1", "0", "13", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "35", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "5", "4", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "70", "130", "122", "0", "0", "0", "0", "1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "22"], ["0", "0", "0", "0", "1", "2", "324", "0", "1", "1", "1", "0", "0", "0", "1", "10", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "19", "94", "84", "3", "7", "61", "56", "1", "2", "8", "2", "0", "0", "3", "2", "2", "4", "0", "0", "1", "0", "0", "9"], ["2", "4", "3", "3", "2", "2", "25", "1", "1", "1", "4", "0", "0", "0", "2", "1", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "32", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "34", "1", "1", "1", "1", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "23", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "24", "0", "1", "1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "24", "1", "1", "1", "1", "0", "0", "0", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["13", "72", "218", "157", "3", "4", "26", "17", "1", "1", "7", "0", "0", "0", "3", "0", "1", "3", "0", "0", "13", "2", "1", "46"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "21", "1", "15", "62", "28", "1", "1", "2", "0", "0", "0", "1", "1", "0", "7", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "24", "0", "1", "1", "4", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "7", "64", "3", "1", "1", "54", "0", "2", "3", "67", "60", "0", "0", "1", "1", "0", "0", "0", "0", "2", "3", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "11", "3", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "13", "20", "5", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "6"], ["6", "19", "67", "39", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "5", "1", "0", "9"], ["0", "0", "0", "0", "1", "1", "55", "0", "1", "1", "4", "0", "1", "0", "0", "4", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "2", "1", "3", "48", "2", "1", "1", "2", "2", "0", "0", "1", "2", "0", "2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "86", "25", "1", "1", "2", "0", "0", "0", "1", "3", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "19", "0", "1", "1", "4", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "8", "9", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "18", "24", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "9"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "452", "11", "0", "0", "0", "0", "0", "0", "1", "10", "0", "4", "0", "0", "0", "0", "0", "0"], ["2", "10", "50", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "6"], ["1", "3", "3", "1", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "2", "37", "1", "1", "1", "1", "0", "0", "0", "2", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "2", "1", "0", "0", "0", "0", "1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "6", "10", "2", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "2"], ["2", "7", "16", "3", "2", "3", "31", "2", "1", "1", "10", "0", "0", "0", "2", "1", "0", "2", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "55", "0", "1", "1", "4", "0", "0", "0", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "5", "38", "37", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "3", "3", "2", "6", "76", "30", "1", "1", "7", "0", "0", "0", "2", "3", "0", "3", "0", "0", "1", "0", "0", "2"], ["1", "3", "2", "5", "1", "1", "32", "0", "1", "1", "6", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "10", "23", "3", "1", "1", "717", "0", "1", "1", "6", "0", "1", "0", "0", "21", "0", "0", "0", "0", "3", "0", "0", "3"], ["3", "26", "88", "63", "1", "2", "6", "1", "2", "2", "11", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "13"], ["1", "2", "2", "1", "1", "1", "26", "0", "1", "1", "7", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["6", "20", "56", "13", "0", "0", "0", "0", "10", "13", "2481", "6", "0", "0", "0", "0", "0", "0", "0", "0", "6", "3", "0", "8"], ["1", "1", "42", "4", "1", "2", "61", "1", "2", "2", "12", "1", "0", "0", "1", "1", "0", "1", "0", "0", "1", "0", "0", "1"], ["4", "9", "83", "64", "1", "2", "4", "5", "2", "3", "6", "1", "0", "0", "1", "0", "0", "2", "0", "0", "4", "0", "0", "5"], ["7", "25", "41", "21", "1", "2", "141", "58", "1", "1", "12", "0", "0", "0", "1", "5", "0", "9", "0", "0", "7", "1", "0", "11"], ["8", "43", "201", "93", "2", "4", "3", "2", "1", "1", "19", "0", "0", "0", "2", "0", "0", "2", "0", "0", "8", "3", "1", "22"], ["4", "12", "370", "348", "1", "1", "23", "0", "1", "1", "14", "0", "0", "0", "1", "1", "0", "0", "0", "0", "4", "0", "0", "17"], ["7", "25", "54", "49", "2", "6", "9", "1", "3", "6", "202", "45", "0", "0", "2", "0", "0", "2", "0", "0", "7", "0", "0", "13"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "12", "3", "0", "0", "0", "0", "1", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "9", "51", "69", "3", "5", "457", "438", "2", "3", "15", "7", "0", "0", "3", "1", "0", "14", "0", "0", "3", "1", "3", "9"], ["1", "4", "3", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "180", "376", "559", "2", "6", "8", "12", "1", "1", "12", "0", "0", "0", "2", "0", "0", "2", "0", "0", "5", "0", "11", "76"], ["4", "9", "17", "14", "1", "3", "67", "1", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1", "0", "0", "4", "0", "0", "3"], ["15", "163", "1836", "2187", "1", "1", "50", "63", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "15", "8", "0", "143"], ["1", "3", "7", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "26", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "-1"], ["1", "3", "58", "83", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "29"], ["1", "3", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "319", "281", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "7", "6", "7"], ["1", "7", "117", "71", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4"], ["1", "2", "2", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "9", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["7", "41", "123", "64", "3", "4", "121", "2", "2", "4", "51", "4", "0", "0", "3", "3", "0", "2", "0", "0", "7", "3", "1", "24"], ["1", "4", "9", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "12", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "11"], ["1", "4", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "27", "68", "68", "0", "0", "0", "0", "1", "1", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "14"], ["1", "3", "37", "16", "0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "7", "38", "48", "0", "0", "0", "0", "1", "2", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "6", "5", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "3", "4", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "7", "4", "0", "0", "0", "0", "1", "1", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "2", "2", "0", "0", "0", "0", "3", "3", "55", "53", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "16", "39", "40", "0", "0", "0", "0", "1", "1", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "5"], ["1", "2", "27", "124", "0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "2", "1"], ["5", "32", "81", "79", "0", "0", "0", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "0", "0", "19"], ["1", "5", "5", "7", "0", "0", "0", "0", "1", "1", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "4", "3", "4", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "23", "10", "0", "0", "0", "0", "3", "2", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["7", "40", "497", "183", "0", "0", "0", "0", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "7", "17", "1", "14"], ["5", "37", "189", "167", "0", "0", "0", "0", "1", "1", "9", "2", "0", "0", "0", "0", "0", "0", "0", "0", "5", "9", "2", "31"], ["5", "16", "48", "43", "3", "5", "243", "50", "0", "0", "0", "0", "0", "0", "3", "4", "0", "5", "0", "0", "5", "0", "0", "5"], ["5", "25", "28", "18", "4", "16", "52", "18", "0", "0", "0", "0", "0", "0", "4", "2", "0", "11", "0", "0", "5", "0", "0", "10"], ["17", "135", "718", "222", "1", "5", "56", "47", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2", "0", "0", "17", "19", "3", "63"]]}