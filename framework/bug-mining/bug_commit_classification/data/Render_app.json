{"number": ["2029c490e982fe0b6a28e15dcf2530bfa6c5798b", "8088349d68ad13960a5dbaf595d71a2e351de77e", "65ae4207b6a7bf191d108ebf02b7deeef1d5f6f4", "7c68d49af37a4b13315f9596a8a1d77a228effb5", "a6747844212267820bc04167cbeb84d344ed87e2", "8a0b928823e0b293a72c373c039a0495b1fff9cd", "28488381e9438ffe8c568be215d68171d8fd29b3", "75470d3a1d308a545b7ddbd38654884a1fa8721f", "d561ac31442b23891c0cf8d90dccd8b28069eceb", "48b24b50636f2c4dd68b0b5fd2b43782f4dfdddf", "99ad5e9dacaa92fd3969458d83bccd8340aac11e", "166b896b4379d0946fcd26e2973ccf5797136658", "124186938a8a460be038da180bbdf15178f05999", "b0617991307ee54008334550b9df708ff3285208", "d8c033079573a56f3946308a1b52fc61cc6bb17e", "089315efa42ef0bf5df087b7bb7a0ea8c5814f0d", "cf70e21f2d5ff371d9c67a34cef6749e8b663620", "66658f2d12c7682d94c4678c012c1bde25df95ed", "c90dae1e786977759d7f72f358d6d38083956f7f", "b3cc92dffbbf86d1773fdfe2a97ef6c1c9db3546", "65ee8b2339393e4cc8ae2afb9802c7b4201735df", "cb7b7e9377241296124672cb2a03f7890ded98da", "ef932d688fea5417870b0d5c349067afd2ad1277", "4408630730bf01e1eb2b7558b9739c82d7bb5d77", "f41a26ceab437764867c3f97439613013e52dea4", "519f209e21e7b02e1b4ec10d6627768395e66fd6", "247c0422d6a375d96ef28a5bbc25071fce134044", "a6337290e9a3d7bdca4390cea685993afce76ee1", "20ac7a5f1a8321e9d2b65442296ddab8892dedab", "51aca33336d32df13668f54b664cbff681273ac0", "5f5d51dd295d27d9eba8db467b54e64fb200afe5", "306d5b826e8f6e97fd726ba718c69c9180587e90", "16314759d2d94d79d18c22d6574f284de140b319", "fdb242362f487316379a56b389f8cb4b63659428", "1497c67924516aa0b20bf260d70e5da0dbf80096", "6e2f0d85620ddf51b13fc1e06cc2674e4897c8bd", "8eed3be95e51462b47bd8157b9d42922a54cadd0", "56ea36e8d6ea69be4a28a39fb570476bbc77e765", "85e9871ac55fa361be42800d13ba3bbfb5ddc776", "dcf664cfc6a5bb23378a7b2ef9435bbb3aa31656", "cb4072173d60c73a0238afd289f997d2f4ab133e", "95d773f7373bf357ce342538a37dd1e54fa9b75d", "5843d33a8b84f3ed5b71325407355d59df7642c9", "6a64a9292363085e4c86bd5137970e24a17fa5d6", "8244c13e7965f644b8c4a46d48f926bb0715da17", "7fe5a1619c3521188f3187bc561f0ffb881efdee", "6d847764fad8857fb85529bfa2b1a34368294058", "d4383420a4983f7bc1f3c03fa04b0820341e3670", "47f83a2735e2cbd9632462545e529ddfb5d5a198", "0414761c14bbde930a7b6bfcb705371cf4b36b4d", "dfde5f02efd4942f3e0051288e59458cc284b224", "1f798dbc7003516005c88cf08c8f048c4b8b46c4", "f0c802be737fce2cc79e47c5bb6ecaad856aa3fd", "bb92b8e25c79027a41899550fe4e0d213a122f9b", "ca16acbc0329ddda82b2cded25139d221a0650fc", "d371580455e84c369e32b28dca0f5029d7abd2b6", "c2c41684d91978b56afea0f09348076b38ca1437", "777feacfe489e13da9e44a5c1d7129e7d1979a2e", "46266529a646d248559388df5788743e8c7f78dd", "74ae30de5980eb34be9d3549397b7886ede9555a", "3ecd7314c3417802c04380369efe9ab96f5ca834", "7b6dd703908fd79267e7736a2ad36627f39f288d", "c4557e28dffed716feeb1ed0cb8e5f81018778c8", "c629852fd3c27d17a8e6c1f592e517c97d347478", "cf5a9c6919ce8acd41ad4cc2e8a6fcdd5ca6c216", "04e9e0608ceec18d281bdff6af03aa6769d891db", "2d94cc6bf9ab8454a38a1251c18415e5c3bcbffd", "f56a00ae01086f73f800f8e90ea7b2fdb75a453a", "7759d93e523e34e8f50fd829dbb5ecb6eda44bae", "ec969920736ccf71ed0a27d3b13fab6b404ee91f", "5c05b37b40a4c4ccf9e3eb18f3ddfbc52e58dd74", "83c7300c9c432a40a8f8e5c1e0ac2f963edacdf3", "6c13b14e6d03f200317a3fab0be0a8bdf34d6582", "8577284f7830c5f7185aaca149f45c421bbde23e", "b7c21d4bce40d176db70c5dc8226c3051e8c155b", "a728bf44276cdeaa96b311f3c939bb15f517c9e7", "39211fde6a27bac9dcdc529113dbfbca96c87a0d", "790b89377f1be89952375eb6f3e974fdd15ea13f", "56844d4f3fe9975f927dc85015d2047f1ba265b8", "c19f3595ff7aaa4b43fb1516adcc41fd2391a934", "333976ca4bdba0d7910c60b1e20d9ca654d30866", "0866738b8b72c8f680d18170385ed276842ee8dc", "b6342a6d105a5955b386989e45203370d30fdc2f", "04c86949dc4651ad5215f480938145e7109dc76f", "07406a87c973a43caf7716d72e2303a194dfd3c6", "1a2bedf4bef3e17782b2d20d6f3166b3aaf71dd4", "ede9fdeeef074c152c21bbf9d8d49bf7b521783b", "3d42ead120780919dcb7c644e7252b852b504e08", "42b7d493f32ba4e7d9ef7789e6c1c5242ccbaa1c", "1693312c1b890aa3d664854f372856b54bcc3998", "8dcf4616b0415f441b44299d65608c16c7a71d69", "bf9cd499faba5f9d815de2ff2a292a583d788a52", "3309425269eb143ce1bab05b8cb4ada3b2fda68e", "0331a478d2254758b016b25eb0decdebb056a514", "dd8f7dc43f23780f5ebf2649ade69b1634925103", "c7a594782da895de5308e15e79ed0b0bb858fb7f", "d418d2456ed2191e34e2af37f0b98310c45cd596", "5ee40ba2bb34fbd3be530608eb67db7def8c887a", "cf6b4c130198561b70083fc8221b51eea346e08b", "c73260c95bad6bcba4ac574bbed28897dd8bea06", "c05812aa2de956308d0235570fda32599387d82c", "234635e602c1334ae34eebac39d513766fe61909", "a703902c528580ccd1eddc2b5c16be85656a1c9b", "7c626f90677df50b1741c69016f35588289cbdd7", "3d090bc60f5a4a30268e8d13efc39b99c66a01b7", "d7efc6d1485c71868a51c1d7fa95feded728389d", "e7d0dbcaa67f293b8c37ca4ba0257c382b15d485", "c452374a809efabfd2062dc3e965cad50ee79430", "be8330a7467afda061531ae711edf9d3a49ff04c", "e38bd9ae5701b14e403da2ec1c93832eac82aec0", "d8198f03f798aaef78bfcffe1093c7ffa4de494c", "583efb1406aa6e835693ed1f1cf92f790faf02e4", "9b6f88fa4c656f3e2038b9f195dd3dd55c31a0df", "b94bdea48ac719059a3c04bf965ae5ad65cbbd4c", "e91c7bedea8d57fe36aec223d1221cab56f6ca31", "b54aa98999eda5735e56b17f38bc2f478a044d50", "fb1d7664adb15a1a573f6fc0eb1189a2ed7df774", "ceedb247f748914d226178566e4f34df14a01147", "bf65860866e30a0ec798581cbc303aeaa4812375", "a6f74234938668e99b1a2312e107e1f38a4a0778", "b330dc82d56524c23e062774a4914612bc7db7b2", "c74a1837b0839b948d13f74aeab5cb0eca9a03c0", "d0b74c62e392bc2ab32c6bdad294c7e8ad603fa6", "c285622fad3ec725cdce9d49bc07f39d0427c665", "a2663a520a87c019cefeb187b40577925f6ff479", "55416e0205c1e245c89a387b72d4c4924a706ea4", "a7c4e01c0ed88639fa7fa68dbd5c730c5a4b2662", "32163a871909b086f1f86a3c1a88d6f616ed2606", "20eb8df9f78af1db851e3a546c060689cb121be0", "cd6cc8de033145f0059288256fcd3b590406f8d1", "d128e5ac5959175ee9f28de206ed61eef67ee0d4", "caff955154df263f412b47a44dbc490847ce81a6", "02da85b322eb4a05f83b984e10092def291378b3", "a5fd0379ed346585d0af4b5005645d1e7b441c20", "a7ccf785b6b30ed9346fbd72a05dcee0c4c531c6", "6e8a93ded050e7f82f9ae9421e3e31286a53ff92", "961d87bd8d4aec150f8ab029a31498934bb1214c", "ea6c9dbb880b938963deb40a9c7c9d68162161b8", "586aa2565dc218cfa74560ae635ae3e36d54e964", "0c2acb01ea07de54e3875b109eeb70d05f56a979", "862b55dc57f7dd20c501cc24b1031e9b4493b8c6", "bcfde93b6b59e62a2ffcc9818eb246d2bffebb79", "4cd44a26d147dbb2dd6493dab2417d8aa99ec6dd", "b40a8377ff72d0ad7e3e83f39cb5371a48a5c1ff", "e28a0388313e978a345b87fe88c43994b277d7b3", "947e5aeb727b3131ab6aa135099ce049ba4a7008", "252107728fbf942015dbaa16a5504ca30a328d61", "caef0e9d76ce4f9c7fbaddcdf044f559a5407d3a", "5297841388a1bb04d0361612e91dc0daed3c1711", "e5378c565b183bf7356103fd95b82c615cb8b9f9", "dfc3bb1166a02348346af31fe4751142e6f0b178", "38bcacd5039f126b7d0e28a19d932599f916d2f9", "62935cda2bf0216b031576b2d135f81be360d3e0", "c0934bdd8b10dfb09880e0e81e670445086f5957", "08fff32b9b52ee6cc66c1f32a1e5faa6e23d6950", "a477c92fe138fcf7c08942dcba13c0f694b7d163", "1c91653ce93f4fe0b0cee7b1721c3b433a5080d7", "57396e2f04b8465c0d70cdfd3997d5468a906659", "497bc0c5b6f3fdb7edfc7ee135a824a5f8f592e0", "a62c3d559b15b9d079b247fd3f580b8f3ae76e28", "68ef2385f8730573756c3d1c1f58b7689ab47370", "7f171f7864ae135ccd455a44cea6d54c1489ad63", "6dc64d9a22c5e75625ecda6b83b679a97d5e45e8", "6aee2f70edfba7502b3db59c14ec8aa95d7088d8", "8b3ed6a5ed5186dd59c5e7964c02147d62d8b33a", "096287c969c827921884d38a549573cf0f8d3193", "c297b103c3784539c1d3ecdcad797f720c7c02ea", "7304f9da2880de0e61567db15381bb5460ce2042", "2710d46275ad0ee1cc6baf5cd8cf974128c22483", "e86ed0d2d086fca5bc1c2849ae9b58629c5cd72c", "273b5c339021da8daae303c26edc27689f4a44b1", "377fb1d5bf26050265835d6f80d8d3ba70c7722b", "31e2df1436e50c9f9509534f78f66232a524a97c", "54b8585b0ae8a049bbf670754540ab7a94f321ff", "e41fc165f0bea59eaf1ed8e9c0b1d651ab67a0ea", "be2fe509d150c1e166008f21ddf7a91410bbfe57", "a0cf4ccebffae98c399ff9fd39b37ee970f738dd", "0a85d5dca828ca3ba5c7c30d88043f1ad2f21fa6", "4a0986baa5d5885459b9d2ffaa5205d810538663", "965d731648250428c880a3885dd292e4880c6ecf", "41755ace6113486321c09d6e3d2fdaa7515e16b2", "bc0b3000d67500275d8b0da811802b9640008d57", "f8781913bf1969816e9d546af7c258377d0a27ad", "1760e307cb431cf030c7a32d4f79cfd338ed19bb", "7ab36a00e95e2f5da467fe1287f9dad24fec374b", "8f94cb0820d13c3e838fac4421727677555b7826", "1bf760f0966337dd984ebbdefa55455c3eba7fbc", "34f3fcbdab284d4a753d14aebccb6eca56facc19", "41c1031337afee4cf35dcdbf5b7af589cb55c5f5", "4c8e2599b70d09dc23d530e5e65a69d354c78d8d", "80870cee09a8d930335eb944ad394ac69fd9e048", "27375d8fe9782933710cfeba761b9de8a6bd0abf", "83bc688ef79f7fba86c02baff17f0b9149c428e3", "d3df39b4c78a6023deeaca7c4940cc241eb61d05", "936f2dd3a5b292c27b83a038adbbb2f1099512a2", "02cdc7fec43de4b7a4df13976bd825a665ce2c65", "2d472ce8a27063228b84292b28066dbe3453eef4", "00731b101135079877f019ea4f7d41aab1f05d76", "b1583035fe1f6e665c38363cc01a309bdf3be5b2", "cd1f3d8b61795c5ca224b024d6e35248afc9a661", "4fe41584bcc4b796777aec91c1bab515edbdde29", "484b017ab79e9d6bea037c128f0141a93137b145", "ac1cc985d914695f828225738864439613548b14", "3d388298342915a9d1f9e721630420f7322162be", "a1b62a5c9d2a94548152d9a86f8827f17236ef73", "451615f5ecb0da7941475095b70ad78167f98510", "1aa374a9031bed0df551d45c066e1f862799a34f", "d8391cb689f73121a271c03b16020493f8e54776", "1992966e768c77b200cda6596c35c716c56adb87", "4112416b6c5c813f2dd2623a941aecddb9bfba68", "0d6d859f930f95fc8f70821c76c4327396cacae4", "02d47283acccb1af2c1d29f515daed5d75492e55", "d0a6b88f2dfc69c1a854456be29657b323790d5f", "4a0572401ac3fba31c4b9c7530d54d14733d6fa7", "747468742d51453df1d28a8158ad0d501c082f85", "04c282b1f26df94c1a02af75322e868a742620f0", "4a9184e0a747cbf33f8d5aa908d7c44f1525f0c7", "23bb228158c930c59caea4323691b4f51cdd7524", "ac8d8376956431fa676579f0313cada24fe972b3", "bae37fee68051e9b5f8ecba1de8cd284ce12254c", "81b884f2563bf0bca70d32adfd1fe176766e2ed7", "15e84f78190372c23e9af84700414216a823c268", "9a5bb5c191be732b79b2705da7996eb8cdcb710d", "3fa3fe63976920b5c453ed2b83c92c6ac2a00a48", "28832bcbd522fec08286167f5c687a88b54a2652", "22b1a81fd69bddf8553ecbae53829766cfb874e1", "63ee5454fe5151a0c7d7e2c7863e42e23d5aa545", "774ab561d75061739fc1827c6a7917526cce8fa5", "55c1b3431e64c787a4f8db967ad043aab1c7342e", "54a69dd36b21e6ad619098792920a07e4195715f", "ccbfa3dc93c0a0dc4e41f39a48db96b54159bd6a", "e08bf4a53213c396ed2547fdc7f5f2969bc67a0e", "d65fb27ce59b7100293c360ba902e6a9ec443ee6", "f9667742a1856c41e76063ba94ae8d0ad947596a", "333ec0a29dbb355918882c4865825dd3683e9118", "d4ea9dc8f229eca71bd2121b7be86ab376839425", "07223e1892e36d4e822dc178c4f89aae803f3ca9", "fbde4bde378fd2ab9665d8830a58f909ee1425f0", "22448cc8937a19db3cd8cae37ebdc8eaf903aba2", "6b5ac99f892cc85d6be6d1fbf68fc3c8ac9f5fb7", "cff2539a2b3bd5596d2ace86e09d22c996077624", "508632e9e7db271617b9186b2fb69f3da42b903f", "5425497e908a2302e405523c8adaf3f196519084", "e8545b347e020f8870487d2208f53b16666b1dba", "0fdbc6bc3a54fef58a345680b213687d5117d47c", "fb8c23dad0a1cda5232b9a9166c672fe9a51b7bd", "365630df25e8649528463d2c91f8ca3c2af170f1", "c169b1790769f5bbad0a4d1631dd02beaa2cb313", "db2bd32b12cad6d827cf800cd907f202477f7592", "344949e3b6b84d33bdbb7c46b314fa4f247e07c7", "7a2dab0d802080bd5ecc2652db69061577d0f0dd", "c6281f41d728c2a931af8ee55142fd63054709df", "84c2f79d5e5126d53e6df58f2b19292f2989218b", "8c7f89f29393786990f3e9c1b5e2d3ef91a076bf", "a264376b05d7c53bbd04e3292950d510e5b38332", "84a418a4455b7040d12399ab2d1593efa8ccd125", "9cc3b2a55dce18ba24c1d189678ea7a3a902a533", "556e3b6c03ba9ad6cc68ac9aac10bac1e1b66faa", "78cef3637b8eaef6ee6c16143adf8b131e14106b", "ffb989bf96cc48ed9da834f4c1e46f8a4b023363", "cc82889311607a350aa9b65fae655655ca1bdfa2", "607c13ad4b636ab7b8ab06ca2b819e36fc43a090", "acd8791c1eb822247d2abd67e2bf51ce4cec8eac", "eb671881d75b4018d2223fbc5c921c1076308482", "1ef3d0c4d21f36924dc5ded0326232079e41c7e6", "efc1a99c8ac6e8663cc4eb107c58e93f06f4862f", "a9e9a8f449f935198ec1e15d4dfb2866b4a945c6", "a3fcc641c3ec74df2ce090585c4d47076aac0ed8", "ac1459eaabff3a648516d8310338d049831dde7c", "e621467cf0c3607a7e80900d43e18b6bbc6af17c", "a29285c52d78a46c6ca6df3074bc9de27d252213", "a9c8559104dc80dae189755274d10a5abd1a651d", "164bfa87283b5c621a32e792c7929fd667ac14df", "cfbc7355af5daaa12796df86cd64758a817e1923", "c89a0c9934883a686e89a002c249aec697b5808b", "3623668f8a5261ba6d97551df926bb63decbc8f8", "ecbfa75d431889db71d890d7bb4fae71cc4e1b5d", "e1888fbe842c6956123d8416b966278835eaacbd", "2ce49067a9a46aa32ddfd9158d6b783386b02462", "c30cfeec48f80fcc16c0839f6dc5cffd1391fa94", "a243405470c46357aa045743768808d65e37f05e", "1e1c6f6c28f923b7c328b931f9b95ea2bf5020fd", "45577797020de5e4f9fa00e32b836ace263fa980", "fb5630cce0cffdd6c4ad65c18823be26d54fad23", "b771482a8abbedee4a2b9564ced6515f021b857f", "cc90fa02612fa2972d428fe5a1d52ca89043a898", "53896eac2146ce800a07dffff60141b348c70d1d", "4cfb8b694f328c163a8e34fbdf57ee1c49e9803c", "2de83910dab8d24e5839eec0ae4147a5f7972b3a", "05491b19da04f8d7f0daaa93996e468c6b1cc87e", "d670599a911fe7061f88d6fe53b031bd402949a5", "7bf68f72a49cc7877f4f45b4fd36b64f97d3ef40", "2c81e221a4a1b20eb04545e56ae091e4bd54d996", "b3fffbf0be358421f2be63ab6843ce8af93bdd48", "53a190b17101d992b5e031a5fbe815588048be1c", "61e3055364ee85541796fb1e69b4ca22e408b4ab", "128292d79808b34ad4ad7e0d5f70f68803ae92c1", "d5011b8eac8c172980f08708483240090dbfd886", "c1b56b77fe2a0c24cb4673658907f71af9316047", "c2a1eec544d0346f10e7ae2ef7b9e8c6dadf8c60", "d94fdd977d5ddc8370914281cab956d812778264", "b95aaa049e1321bf29e10703270123ae397581db", "7695fea7301f6569862557bbf245012a3dddafec", "149e9b000b5f11fc5951ee0ebaef9feda67b7dff", "b82abb0c9e799959310bacf9b5e81587a659e61b", "2a84b79d224cefea01a36d619ccfe073f6c03e4f", "73cb4882c7ab0803d7c92bf401218a172bd60bec", "458424cff8b80567bd676745dd019b98bad22f27", "835b9946fa9063e62229738eb0775db92a7a3c1e", "f6222a85a5e1d6ab0cca4d2198346987a1970dc5", "6dfa780e40dbd881daded0a4e7cabfbc5fac85ad", "72eedc995af9c88e6d03f0be880807a2d7fa6454", "2b86fb8f24f2dc643ec6462c35ac0b1d869a33ed", "95d7ed3b25db7ddcec0a03fcf0d5482ef55b68d7", "e7de0ca9e6f6352e2edcd9c6c89a52983d7c8e23", "17ec6e45cf55535846227ee4262d541d2d984c13", "5f3d59459c3c6fdbd90fad3d90f0c457568123b4", "0242cd0172b51a93869bfc4f1a63d4a06de1a8e8", "347a80f3c76996abff77e263602696833ff4a775", "8ef2a2a59f25f235db18dc35fdfb39e7bd953464", "84c51219c744c8f0202f453358c8c693cc4ead9d", "e97a83e091a11be3b7f604c930e63ef08bfc22b8", "59d5e24a6aeeb5ced5584dc116416e57099cabc1", "eea12c7a4b81cbcc3f54fb63aa3dc03a6079c88f", "d38fd873f99f8f4dc95637462a3ff538c0035e32", "f8caf466ea135118e1fd150098cddda45b572a69", "23d69c6d10eaa8a9781a46d7dbe2b3130c79ca23", "999d085a24a3d2fb15e490246d2f545cd4e6659d", "10d86cd50a4a7edf2aebf7f9803aef8cf904fee3", "b1f5994df97a07c00cec00ed8e3977bf4558d5e2", "2c93041f565371bec657e1539ea47f4d73000b98", "cc63e2cf3b372ceae186fc73ec73743b38ff7f00", "ea9d0d6924e74617507e419a68a60b0bd7b287e5", "04f7768c7c8012fd4a689c523a6a68e2160ad6df", "0c2fc0d8d6cae4b9da68c4189e0de21ccb1fa918", "0a7be0723a7e5f75eec26c98896efd441acac3ea", "8b8cba0673e01b56e78619bf89666e1e605dae85", "230673e613f146087cb78726b9f4fb0fc99c0af5", "15daa89d4fb6012120ea5e7f2bc5b9028fc17fd9", "f9f30fb5916820af18dac4da39ace55e96c1773c", "6a64bfd4c908df0b851279e69eabc12cb524f7b1", "b319e7fad7a4c1b8d55a074a339852295b3ec047", "4c994b7bfaddc4a6bf1afa792721b8ba58a647c5", "44179a7de8b57df2041e1aa0209ced7654921f2a", "0ed974ba698a67869409b0011eebc379c555d63c", "a8168e814f126264030b408f0f0a8aabc9db431f", "2d0bf876c6767491aaf31257a193f311ca575ea9", "9a3b494161cf9fe374fbc89b59a1df0aaa848c2d", "992ed565e5353de24af0daa30cfa6ca320032cc5", "8799137799ca7032e7a35573629a5fe6610b67ff", "949568ae5d251950f932e8f12a189fe2193009f6", "b5b78d1a2626f3bac4c8b1be01fbe91464514a9c", "f1c05ded098a01fd0e0dfd05c67decb1999f4b32", "303390c5584de2698fe4ee71cd65b9c4f8ae823e", "d6f8da114b5a52b18ebe43942ed21e40cff62b51", "aa8375d62ede9b5576e37504c421388a09452dd8", "08b0209d4c3360532e845dad81517a6a25756e22", "78dbb029ca079c8a02866eff3501588f826ea9d4", "41e7a6cffb9ba538a4cc6c35b0f669f7c3f20aeb", "9ffa81364197106dc8308c261275faa77657d173", "d57f8d153a35e7545c93bf7a80d2fec7294cf4cf", "324dd94d18a9babfced4b28943520d415f8e7e92", "beda8545a2d11c0ffe77201354d7092a07a7ddf1", "81a0de6a92054f907b0b192d12d32e08b1617239", "aaadeabac273fedc28ef82388e74718475a1b0b3", "872642eb2cccd6058da9663bfc531b19acfe5701", "09121d33bbc53fb8a07381304ce6696e70e58642", "a45c593755858e2edbbbe907f5a56dda8fa20815", "d465a77b5f3fcb04fd151e15a2d64ee57c694bd4", "b3e09dcc0af5061f4af443b01b94086b5edb02cb", "9ab270442530811938fff96433e43b35801e90d8", "a851b34c0b4e940d6c824524fffb53103033cfad", "c23916d767531d653f04c007b9d326ea0a9811d4", "77c4138ff144b0438324d47dfbefda8279f16a51", "1707b3ed7569aedbbe9e49c9527921513a0977cf", "5041ddbff9784f6a2c542b2afafca7f36ef4e745"], "father_version": ["bdfa876737e2aaa03e025b23748968693d5dae2c", "76489f90b166849dc8185f98a65f9babaf8d65c1", "56b7d1ad8e7529b9a43043958d8b9b82d9a459c7", "8cabd84a11bb8d14ed32745407f22ab30f144680", "b8cbccc2663d0551f0a877f841308a2eb66e7d71", "28488381e9438ffe8c568be215d68171d8fd29b3", "b340405171bd068cfb4115014e4fe2f3dc6b1d34", "d561ac31442b23891c0cf8d90dccd8b28069eceb", "9bfb808c6aac5f0814aeb1f8ade9d99584ad24ad", "721d9b2665030d9c67012832848ca4f1d09e6938", "d29e3daa3c3b912112d06d4684e4d5f2f9f1839e", "c0bff87d8bae0af22993708a0026b2c9fcb57c45", "d4bdc0c444ad3869626de2fd6e494a229c9514ac", "ad8e2991e893ca019924609869acc156a4e8439c", "6d54ff430e4c156bc8e14ffea305b01d9538888e", "cf70e21f2d5ff371d9c67a34cef6749e8b663620", "3d8e7c8871229575072ba5b12a6b783a946d0168", "52f1131098d40224965cec3524b39b13897a5200", "20487b2f4e6208bb741a427378395f4a0929f253", "3b132f670392e9cb19edc8768595232930ab3745", "94811ab13c0579d3a397d6cad7a04378ad37c564", "01b3baae40450802cd5238b2c7f58f5c166c13f7", "4408630730bf01e1eb2b7558b9739c82d7bb5d77", "48e440bf43ad61999de13751f471ccf6d977c58d", "b62730035622e3895234c4d579719d0b0dc85456", "d245f6ce3e65bbb9bf4f07913b6f1468e78b7727", "a6337290e9a3d7bdca4390cea685993afce76ee1", "86df2931e03d6d25c989b453cc99c383ad8a9ab8", "59a1b9cb173b6ed3ecbd0c6e22d78d5686f3f7fc", "5f5d51dd295d27d9eba8db467b54e64fb200afe5", "77e55e5e60926ee528c82c0e7113a4f64c8b357b", "bcec438fbff1768687fd918580a182550f18660a", "832c99b1d3ee87bef28afdd03150ec9fab962e23", "eb45589900def6f761224cb5df411c9e245157a6", "6e2f0d85620ddf51b13fc1e06cc2674e4897c8bd", "9c626f85d14fcf5300ca4adbcaf9f4f9e1d4e50b", "5ea590d1042b1696ee49f8a648c72ccc3929779c", "85e9871ac55fa361be42800d13ba3bbfb5ddc776", "dcf664cfc6a5bb23378a7b2ef9435bbb3aa31656", "84b6f4d0232c7f6e1c61d5c1c356aadc3623954e", "2ed7c63d0d5ea232650919456e5ae0e4c930519a", "c9ae772a8158169261b4fdf8f5d3de3001cbd42e", "55923c04c3bb073db522225713fa3071059b67f9", "a2d6c5a16b4caac5a375a100b88bf84873a80d6a", "b6a34a0a3a4af1a585d08f1ab56e7cd7751f9a37", "27fb0f1ab015c8f85bba8aa1805aaff684faf80e", "d4383420a4983f7bc1f3c03fa04b0820341e3670", "c917ecf25dad26b20e7f9a9a7849ca108fa3c1c5", "2fb3a7d416bf7d0f8623555cbe4382df55dd4994", "ee0bd8c487c579fc503072c69d3b61a6f464113e", "c59b3e9fb75db78e99ee6eea8684be7aaa014e73", "c9b7bdc6f38c5b3c0e7090a935d3f4edc35cb6b6", "0a426a9ee0ad639797bca5abf5fbc5d63221e22c", "e09a8ff84a3bceae3e7ab1a20588d8a112afb56b", "d371580455e84c369e32b28dca0f5029d7abd2b6", "01a5b4a7ffd6f5204c2b228f7147982bcec1852c", "f4bc371570b587977ad252ffbfeb1ff303a45f1e", "46266529a646d248559388df5788743e8c7f78dd", "808fc45732bb5d98d81fb1a7577a2fd7246f60a5", "b69d54834ef6df46c77085675845532d6ea8b7c5", "bfdb42ab13cec84d5ed7d8f943d887b46923d838", "e1c720adaddcd66093f6f97c59914c49c684162e", "597babcd498e0cc2f784b179275d8c2e903782ba", "b1283571e2942912a116f1abb0be7b66b73c4483", "f18258d9faf7b9a22138f68a732a2e5580fc0f84", "d0a32e83b5fee07964f2ca53d19d87272b7a5f3e", "671a38050649e1a1d148f2826d2103a3beedfadc", "7759d93e523e34e8f50fd829dbb5ecb6eda44bae", "3259d741b0486e37267d31c12bb7088db5073a40", "29e4a167da0a65640ef359282ff1a91a09a29c39", "d9a902cf470e095982efb3cea92da85892b78199", "89c354d72c99e97d41e1e9423136806146a8032d", "8577284f7830c5f7185aaca149f45c421bbde23e", "b7c21d4bce40d176db70c5dc8226c3051e8c155b", "d70de65836d04faa5e0b7eddb3a44889790b3ac0", "84d9bc9b1a2f74243fa9f17bebea05f11450b9a7", "aef05c4338f801a098eb69c24d0f22f0f9c85086", "56844d4f3fe9975f927dc85015d2047f1ba265b8", "c19f3595ff7aaa4b43fb1516adcc41fd2391a934", "333976ca4bdba0d7910c60b1e20d9ca654d30866", "0866738b8b72c8f680d18170385ed276842ee8dc", "b6342a6d105a5955b386989e45203370d30fdc2f", "ec0ebe24a5341f0783d77a0134b4b1976ef71a2e", "07406a87c973a43caf7716d72e2303a194dfd3c6", "1a2bedf4bef3e17782b2d20d6f3166b3aaf71dd4", "ede9fdeeef074c152c21bbf9d8d49bf7b521783b", "55f73729e33317d1d28f28061e9b9f421ece113b", "adeb8c4e142983a2641d2c67770a7cebca4c220c", "1693312c1b890aa3d664854f372856b54bcc3998", "8dcf4616b0415f441b44299d65608c16c7a71d69", "bf9cd499faba5f9d815de2ff2a292a583d788a52", "0331a478d2254758b016b25eb0decdebb056a514", "b337fe0448e20763e3fdec6b46e3415c88c705a1", "dd8f7dc43f23780f5ebf2649ade69b1634925103", "87908233a695ddf01bb40e67e6256a29347e51ee", "a3a92af223bbc2e12577d7516636c7d1f18f6948", "58c4555f2e9d65e4c621d3939faa4fbb803f7e15", "cf6b4c130198561b70083fc8221b51eea346e08b", "7f45c4bee48836aa2d775663332ea5b9d908fc07", "2390fa26373a8d044100e54ebeae843c8be9741f", "0eafe0b41f3f4e28c251e0b0fb89428762f4e52c", "43463d08318b688eccc954ccfce0998483a96af7", "5e5e2b29648c0b6ff6abb3733a999c0248036827", "a031b2b2e0c73c8282147a7924d4594c9dab366d", "439105bb133b9608d1bef32953ab1d6772a5bc61", "a2c47dcef82dd912c9ae10448765769c4753ddf6", "c452374a809efabfd2062dc3e965cad50ee79430", "be8330a7467afda061531ae711edf9d3a49ff04c", "2bbe0bde61c5ff2c30b77a6a068a3c1d1908d921", "9a2f27703eaa60852dd2e85efad03e3185c001b5", "583efb1406aa6e835693ed1f1cf92f790faf02e4", "d3710848674f9c3ecc144a0b43f37406ef8976b1", "b94bdea48ac719059a3c04bf965ae5ad65cbbd4c", "1f63e20326e1f57875a57b57150cf5578fb3ac79", "0b5c746e515a46f78605ae802339da8b48788dae", "fb1d7664adb15a1a573f6fc0eb1189a2ed7df774", "c0553a967d9de4b77733745c6c849649473924ca", "bf65860866e30a0ec798581cbc303aeaa4812375", "9c50bc3b0dd040982ff11a0c8dd96084c7be95b7", "838e0bf89f4d796f42aac77bb7a90e7cc642570a", "5331d374b1d33719e652255e34ecf3acf468bc8c", "d0b74c62e392bc2ab32c6bdad294c7e8ad603fa6", "f2134ffe2e3b7b0bd6ae681ee984128bf0a6c0df", "a2663a520a87c019cefeb187b40577925f6ff479", "55416e0205c1e245c89a387b72d4c4924a706ea4", "ab36451a16ee41dea632f227c4cf978bf2e70f66", "2ab66d12f256314fe03ea0ecd66868b464d685c8", "82362a91fd5e5197dc8f564e5b5fa6f3e0cd5d2d", "a38c08092505b46ea4f0995fa05de17fa9d2cee9", "d128e5ac5959175ee9f28de206ed61eef67ee0d4", "caff955154df263f412b47a44dbc490847ce81a6", "63cfdbd7d793788e573b470fa9cf23bbe105169b", "a5fd0379ed346585d0af4b5005645d1e7b441c20", "6e8a93ded050e7f82f9ae9421e3e31286a53ff92", "9f8963cf47eaaa543b4d88e041c51d5b3b5e849d", "9f8963cf47eaaa543b4d88e041c51d5b3b5e849d", "ea6c9dbb880b938963deb40a9c7c9d68162161b8", "586aa2565dc218cfa74560ae635ae3e36d54e964", "71b6f34f3f722b77c7320f195816e0b77c3a9690", "862b55dc57f7dd20c501cc24b1031e9b4493b8c6", "bcfde93b6b59e62a2ffcc9818eb246d2bffebb79", "4cd44a26d147dbb2dd6493dab2417d8aa99ec6dd", "b40a8377ff72d0ad7e3e83f39cb5371a48a5c1ff", "e28a0388313e978a345b87fe88c43994b277d7b3", "947e5aeb727b3131ab6aa135099ce049ba4a7008", "30e55e53bfa558a75d3a7d5b83acfcff406460b1", "160a578bacc0f1166491945de99186dca2c91a04", "ce923e9c6f03b042717b7f734e25fa4fe31f1818", "e5378c565b183bf7356103fd95b82c615cb8b9f9", "dfc3bb1166a02348346af31fe4751142e6f0b178", "e3ee0a7b25680d34e4bef69e5d7611fb4b5a4fc8", "f40474ecca0ccde9d345cdb81e3209141b30b2d3", "9266a3032bdb8dff659a3b49c100f1e7298c0a27", "08fff32b9b52ee6cc66c1f32a1e5faa6e23d6950", "ef6e6390b598ccc9e2896ba41032ca3333f3cd14", "1c91653ce93f4fe0b0cee7b1721c3b433a5080d7", "b7d38135ef3fe6d1c0c72fe6a3c08266850a4753", "6303978a2d0cc304e1d88f1c49bb65192fc12ed6", "44f5a3ce1d96bd5e038e87010cabb980f43cb06c", "1691d780e4c58279525f28e3119b25d9df21833c", "9e293020f5679b97c65a8db069dfc898ef77260c", "c1aebb363107e43cf4334ffefdddd7139f3a5153", "eb078034e0dae4a495bdb9dc32698c84d4948004", "69692f77675090fd08ca967e0e79e868a4956b23", "555b3ae3fff557fed09580ee9c6341d1912d7f24", "c8a79f38e0987e9d8b733728360df115c28449e2", "33c93ccec824e8a031efd52a5f661a87fef543ba", "0e8afc05459cde807e4c03d54b74035624600a41", "118ee09f81405a3b2ecb2b7b28b87ea4f386a186", "d7369a7f93e210b2bc4515a8dcfd8d3573ce74ca", "4ef094345ef211076036d2e7b0b368fd0c6a1ef2", "f7f53655e1f9f0c0dd3cdf2af485e004a5a3e663", "a9b8b586adc5c2c62935784cc6ebfc5eb7cb8579", "5a875bccc3f2491bba29bed02176eca4dabc61a8", "cc315d4067053d494c692a255ef5bec5f8c0b035", "70ae48962eb4e0b6fc438e60ce38f5b089a72432", "2bf314208f818658a09b3196f25e80729162d8ba", "ee6cb25a84868fe8cd2adf2122e6a9cd8ee63d5c", "a98da89c2ff5b26973e651fddf8a70309086c64e", "41755ace6113486321c09d6e3d2fdaa7515e16b2", "51258652ad8a94645ea2c1705be4db6fe1feb0b5", "f8781913bf1969816e9d546af7c258377d0a27ad", "a24c2da6e6038c261af350a3e3ca6b7fc7871514", "2f69d965d2714fe6351c40d25ef934d3fd2c48e4", "8f94cb0820d13c3e838fac4421727677555b7826", "d2a2ed733808b56cec97e2707b3b1fa90d8b69f0", "f92a6b5fba59eebcb719217bf5df9f73e92db342", "cc41f0ba9b51cc13ebbc9c3c8202c9b59b46fc06", "4c8e2599b70d09dc23d530e5e65a69d354c78d8d", "a595be97fb6fabae7781b00c7652f9862e22a495", "baa6342c97dbb6de8fe3e4a7d7159d1a1ccd13f8", "17ff9c83a5433dde20112d981f96fd417fe1ea8f", "a78fa00cd4b2af8b1bf5c2227168a5c7a37a458e", "14dab071f587673e41626f78af94af20b8143c5f", "87af729105aa07cebd553d3238d4d396701db3ee", "ef818c732800522a356001d28b7ad0255d7f5017", "25e408fc1a9fef0a79c1c2d5227d89be378654cc", "75fab24943d745ce145234e309b48bc1315f69eb", "2243e6ad7f956356fa147ffc23c1c13ad0b3942e", "bbe371895d2382bbd628c48798c57609c8dec129", "e2b552bfb91e6893b8310747d058a7008f1ee061", "00c9e09c0ddf6474449235fac17c82cbc71e42b5", "b05c7f13716e70e619db953ccd1759fd7b79783b", "66cabc4dd2ff4320c47451118b55c24cba93fc81", "201b92824a78911003763e5f9964c8cfb32bdd3a", "cd92a85177f81a01a7c962019276992a487e606b", "9b0a220be03dfa8bfa04b7bf607701e3c2004ed7", "48bb9db2adb07aaa22a7e654d6062b6ea9dc7ecc", "b83d775b981aa3131bbfaf2ddbe79df49bcc6633", "5f17c62fdb5330473686a353349baba8d2cb8c70", "f9f7ea5b066278b7652b3b31689ac95f223c05e9", "2bcf616fbadd8ae22807e08c3dc28db1cf65d748", "52049e889f7fb14dac573b454b8d0933de621a86", "ccd35d9da7929004efb74a2cf0b5856011accebd", "04c282b1f26df94c1a02af75322e868a742620f0", "45460a1f6bddd8db57857a834f0ee4b5839f49e4", "e53d5205bb20064644d1ffa8cf995cf4326e3a7a", "305f6308d075878b5fea01abfb4fcc233b2ca27d", "fcb7fbe0ab18e5977273ae51155bfdc376dda002", "07a605bae82d9545ce61a31c257e9ed5e868457f", "3ffb2134cf822a4fc2c0d94d95e727fc01b18812", "d62326fddd79443d1f1079f5c5b57560e891af87", "779824b0b584582ed23d3a65388f60820c91107b", "409a16098bedd49bd98fe9e140b9281f9acf0a70", "522fa2aa11d7a6caec633cdb0a2dfe9aac60119d", "6f99c0bab600429eaeed9193cd23c0893ac8a6f1", "4062e725c5d74611f4dd3903cd6efaa6187066f0", "5751985545da2c053dcb2d9e61cdbe8ba70cd12c", "a2248a84c103d91dc7ce11fd2c56b3e7d69956ff", "ccbfa3dc93c0a0dc4e41f39a48db96b54159bd6a", "e08bf4a53213c396ed2547fdc7f5f2969bc67a0e", "d65fb27ce59b7100293c360ba902e6a9ec443ee6", "256835a9a1bf30e083f6c20e58f8e18daac66174", "333ec0a29dbb355918882c4865825dd3683e9118", "d30f0309d691dcbc708673e530ed77abb10ca985", "d25c943a9dbad79176723b158e3189ce75eb403d", "fe1cc26a1b9b5a5a8823a7664bf5753335e3bab3", "af38b9f7763d44582099b525a1e0ba51841a3dff", "512e4ddd481ad27c680c928c04eb0ab6cbe8138d", "8ebea259b3085cabbe31503d3de8ab11c15dbda3", "fa8a9c239cc8cc369aae4daee0bd176474769ece", "7e8515dd55604cfb85edab6307b5b82cd3db9b01", "d3052bdf2c57145d2fe8cb56ece716e59183c724", "832289b3e358b0fed7a38eed322df4f77a098a90", "daac310d29b8c3f018a847046127a27bec780090", "ec35720137b153138a8b8e19d35825ad416f8398", "65296ed7621f0aafb276ed501fed342ae09699b1", "7fcd37ae7bb2ab95f405d04fc584468d8bcddad9", "363b07f57655bc15bd0ea98af686cd87247b12e3", "108c0f2963e2e334c75a3869501a19401b47b16d", "4fff7cfaa64dfb247b0dc057fb2591b28a913d1d", "84c2f79d5e5126d53e6df58f2b19292f2989218b", "0016e5dbe3cf55956a9bdd5d728d2bd124d836b0", "a264376b05d7c53bbd04e3292950d510e5b38332", "cef7c710992cb69298433bf164b9ebf9ee4c27a6", "cfcc10a698972016037ca2b1687ccdddd037bdf5", "556e3b6c03ba9ad6cc68ac9aac10bac1e1b66faa", "99fff910d3b3acc424847a0391a10cff5f31dad9", "e794e476f8e2fcbffae5a33f580866e05d2492a5", "cc82889311607a350aa9b65fae655655ca1bdfa2", "f96083009235cd764acc7aacd8592e91d696d2b6", "9bc9490a350f0c8e91d4bdb974afbb1ce2d62492", "0417bf56b6172c58a41574b204670c1cd3f814b9", "d19f0cbc6567e26ce23b40a9a44365f8c947dd62", "5f5e0d0810044f64d796408ba2a1cadff4e61d9f", "ec2c06e0aed6ce56a4599b5f7e7f87c5b2bd042f", "a0870eadef22cec072ad6ff2613005f81cd4930a", "2b69aaec66bddd5968bc6f28eb61d8c60b53491c", "e621467cf0c3607a7e80900d43e18b6bbc6af17c", "b04646ea56dc11a14841697624a81f859d2e38ed", "3101870ec7a3178bda3963adcff4b5a799f91b23", "268669a85516b6d6e649a3b694d3c857ea174263", "88d8c3085a7f52bcbcca44893760199e02c6e80d", "f38cc3f6dc0e07471cfdf6a3a69abaf11024f62d", "3623668f8a5261ba6d97551df926bb63decbc8f8", "c845e5d285a8845836a7dda5b6161281d2872e3b", "c4ab6f99173650f22b5354a6c6e2c8b0da2704f4", "21e7b46fdeced285ea69b01106d63350de8c748c", "43631ff02e701730a2a95f0bf803731863d657d8", "db69f48dce85e945bdc9b761ff3912d987ae2740", "50c9376e035ac7a85ffac99906c17e7ebd2b5545", "45577797020de5e4f9fa00e32b836ace263fa980", "c71e2f7d5de9a886ef1d494c0618078a109a61b8", "7d694994e800df2ad3f36d44b0a35e68f134db8d", "cc90fa02612fa2972d428fe5a1d52ca89043a898", "5681dc28b31b8eb5718d35d3f74576dbb970cc69", "8b5e1fae9a5166a0f3bc7b7ffa8a87b95f2c2bbc", "c6dcf3b0c5be5a12e08fc525634b93ce41e8adbb", "05491b19da04f8d7f0daaa93996e468c6b1cc87e", "d670599a911fe7061f88d6fe53b031bd402949a5", "7bf68f72a49cc7877f4f45b4fd36b64f97d3ef40", "61aaca12751b711529dad7d8fa7dd2857a9397fd", "ce56722908cf722033c028c83331f697af441a13", "53a190b17101d992b5e031a5fbe815588048be1c", "bf23e0ae012b65104f92bd6ce049bd71e494f6e1", "a18b1d1b9863253773ecbed1e12edc7551354d2a", "f52256560ed0065d48bb3a64fb90c89830a5c2c6", "8155dc2347b2ff61945f005207cb86ce8fd7b0e8", "07b32a5cb8b30c056b2ba7c35e0a72f8c1abfdb5", "0947d2e8ad53d1663a9468666888289bf80e725e", "2d0562000f27db9d3f47852ae6e196864f6b8608", "d25832610a137a535c7e005a1cf502ac8ad3ad61", "149e9b000b5f11fc5951ee0ebaef9feda67b7dff", "b82abb0c9e799959310bacf9b5e81587a659e61b", "17050f9640801f7e75eb0d98be7f3f8752a499ab", "183e65b4b82357f54c96c8697b1cc9c97e861906", "297de42ef33a4e22d23e3794bf8f95934bff952d", "b0f30719efe8072a6497c3c7ba6f65602702530f", "199a0c465c5143e0861737a6667a618e4f411290", "1ac92188621f941fa56a5ab9f95093bd9dfea50a", "530af8c8201e9f88fa40bff8a94236230373dbae", "9053f5a0646a3cff18d759049b4129e847f73ed4", "95d7ed3b25db7ddcec0a03fcf0d5482ef55b68d7", "4887f3f10ef3fd8e6f01832d114b9b162d300089", "e3324d2b4f25edd200561195d10b45e62495ea7a", "e546c03ddb75d641f8bd7f408d0d6848c9d2e0c6", "196e96b5bc01c4943b78dbf97ba22884acce1267", "19d21800616964c93478feffba7a5dbbf9dfd6b9", "8ef2a2a59f25f235db18dc35fdfb39e7bd953464", "84c51219c744c8f0202f453358c8c693cc4ead9d", "a490aa84536861d2c0fa2dfaddc4284f9b5710f3", "59d5e24a6aeeb5ced5584dc116416e57099cabc1", "1518ce435ffd885eca7d9d1a3b7fa0b23ee1f034", "d38fd873f99f8f4dc95637462a3ff538c0035e32", "f8caf466ea135118e1fd150098cddda45b572a69", "e384073dea5dfc91818c9b8a7c20b9fb6627682e", "e64eb61a75894c06eeded16786d04817fd9fd62c", "93bfb5d3ff6a81275f3db5e7f808fe296f58b164", "da2472265454ee0a33e2848a4dee631e96923962", "d3b819cffc5070890df7b61b42808682912af66b", "1c77de37163f8e18f08db3536f138160cf5ffc47", "1801bc5960c99eb2f0b84e61afae9734a801e2b8", "fcd747034a04e277df937c0d81ac0a3d06b725a2", "e5d56839cb60e4c51c19494aa5cbe2d6fd8b2ccd", "d2c51b5c61fae71e2fc07d4b651cf042fef61d11", "8b8cba0673e01b56e78619bf89666e1e605dae85", "230673e613f146087cb78726b9f4fb0fc99c0af5", "5e6ac59745b5cba65ba64c911dc46c236d6b934a", "3dd7f578fb843fe6d6ddd32aa802fb9b8617a897", "c8fc5a6b144f4c3d2276e771a90b73058e4f35f4", "98d9fe47f2d003757e1384f5c2743190249d9406", "053708b41f7687a0101b4abb9329570c7250aa15", "44179a7de8b57df2041e1aa0209ced7654921f2a", "380b1dd7ba94ceb815ef72ab44f8959b3af1db6e", "ccfb1e4af4dc57e4169756633137a6fd247b65fc", "c29f56e47314581901124a1af7047e97b4472b90", "48cff05c4cea08fadba4b264a1ddd293bd9a85b7", "992ed565e5353de24af0daa30cfa6ca320032cc5", "9cb93753ab8dd26ee7b2ca0793d0595af93a1d7d", "39b5c4e8b51692660bb1ce9f7a0d5a28de5205b5", "cb4e9d128daddc87a13399b7aaa43f62f57ca9e2", "6b614ba11789a6007d1800a96cfac379a12947c4", "a7ccfe2e601c8f7dff25fc7cd7328517e3bd098f", "0ede0ab447c3896d34979211f988c501a1dc4b7a", "9cf5b34abc0bda240d0df312ad5abb7555e895e6", "9e68774377114b99554e47b4c000d122c3c745bf", "8471caeba5190ad2bd9109365e94f3fe572e175f", "44da6064dfbf01f88c6fdd251df4cb9a292608bc", "5f5f63d8f9a6b3dd0047d67eea531655bf591005", "d317b1e0af8b03e331956059bc6d17769e3a259a", "57005ab2827f3660d06b79ec25c41db1f188f207", "beda8545a2d11c0ffe77201354d7092a07a7ddf1", "664ffb4aa93d492fb2168492213162ff49cfa322", "9c5228e53c123d491b39e75dcf488de477ba5b74", "241ba32d156557af44649b6c9796a2fb0f72c1bd", "388a71beeef6f7b04a1d6e07efbfb5cadc949d4e", "4d0bffcb1e0e49a43e5e924dc36a58fc1581df82", "e0862b106e82b268c4c7d15cf6a8708c505ec1a4", "b3e09dcc0af5061f4af443b01b94086b5edb02cb", "fc4c19d6e5d59f8731e54cb2bd4db48edb3577fb", "2ac969a6c5f0754450459638195396632e9c81e7", "fce8d400701a57bf6d0543560a5b977cb8a68d97", "1648d1377507b2b96251f79dd7d7382d2fb00d9c", "e1e280a5536a469b825f6af94e96119150facd1f", "e0fcaf08c49a5c14998892a898634661421f7dd3", "5b211314548f5a5f4873e8c8b439d596bb86d18c"], "commit": ["started fixing up the important code to use all transforms and not only the affine, what's missing is to fuse the final result", "improve render tiles hack stack by rendering mask separately - still does not completely fix pixel shift", "First attempt at transform tile render hack stack to support intensity correction in Fly EM stacks with multiple transforms.  This does not yet produce a pixel perfect compatibility in the hack stack (problems exist with masks and translation).  Committing now just to save changes but will either fix or remove hack options later.", "bug fix: need to set clip offsets when rebuilding canvas id", "fix comment", "maybe? fix the ExponentialFunctionOffsetTransform - applying the inverse of it since applying it in its current form makes the alignment worse", "bug fix: need to check for existence of fixedTileIds parameter before referencing it", "Avoid StackOverflowError when counting connected clusters for multi-SEM stacks.  This could (maybe should) be done more elegantly, but going with this fix for now.", "fix sign on b parameter for ExponentialFunctionOffsetTransform", "fix little bug", "fix cut and paste bug in test", "fix debug mask bug", "fix CATMAID overview for stacks in negative space", "fix bug where loader type and other data got dropped from mipmap path builder derived ImageAndMask instances", "fixed bug in translation of Lou's compression code", "revert flapdoodle from 3.3.1 to 3.1.4 to solve 403 error for mongodb tools download on Ubuntu envs used by GitHub actions", "First attempt to fix HTTP response code: 403 errors when flapdoodle downloads mongodb tools.  It [looks like](https://github.com/saalfeldlab/render/runs/5047461340?check_suite_focus=true#step:4:1090) there might be a mismatch where flapdoodle is pulling an ubuntu 18.04 file for the 20.04 container.", "In first step of preparation for MongoDB 5 upgrade, upgrade driver from 3.12.3 to 3.12.10, upgrade flapdoodle test library from 2.2.0 to 3.3.1, and fix all deprecation warnings.", "upgrade git-commit-id-plugin version to fix Unable to find commits until some tag\" error in GitHub maven build\"", "fix jdk path for example build", "bug fix: attempt to render n5 outside of thickness corrected bounds should cause error", "Update jetty.service for SL 7.9. SL 7.9 systemd was failing with 'Refusing to accept PID outside of service control group' error. Fix was to leave JETTY_USER undefined and explicitly identify user and group in jetty.service.", "use mpicbg 4.1.2 with https://github.com/axtimwalde/mpicbg/commit/94fcf09d4a022245a24761f2977b1815002fa310 SIFT fix and remove temporary workaround", "temporary patch to workaround SIFT bug corrected in https://github.com/axtimwalde/mpicbg/pull/58/commits/2f154d9afab6f69cc8002f33fb1b2e49712bb7bd but not yet available in official mpicbg library release", "added option to remove points with higher errors", "final fix for Docker container memory issue", "added simple fix that is not correct", "highlight bug in mask creation, can be fixed by ignoring pixels that are 0, but this still yields wrong weighted correlation results. We need to create a proper mask", "fixed Serializable lambda", "explicitly identify n5 version and move it up to 2.3.0 to fix issue when running concurrently with hot-knife code", "undo last change since it caused a spark serialization error", "fix n5 neuroglancer attribute bugs", "convert n5Supplier lambda to serializable inner class to fix non-serializable error from spark", "add option for not saving images, found bug in adjustment computation (relevant if >3 tiles)", "fix custom solve builder", "fix custom solve builder", "working with @trautmane on ad-hoc fixing size issues of the stack at end and beginning. Also added a global scaling that preserves same min and max after fixing start and end.", "fixed little bug", "fixed untwisting code", "fix inconsistent documentation and code", "add reminder to fix code here once imglib2-realtransform is released with bugs fixed", "fix ShortRendererTest to use 16-bit source images", "add SingleColorChannelWithAlphaMapper to handle mapping (transforming) color sources with masks; update expected ArgbRendererTest result images to accommodate different jpg compression of ByteProcessor sources now that everything is not converted to a FloatProcessor first; ShortRendererTest is still broken and will be fixed shortly :)", "fix path for solveExisting runs", "fix SP compile bugs", "fixed problem of stitching-first strategy: if only few matches are available for stitching the result can be inaccurate and lead to big problems when later solving across layers as the entire layer can be stitched incorrectly (e.g. only a few matches in the top left corner). Now a minimal number of matches needs to be present in order to do stitching-first (Default: 25). Otherwise they will be part of the block solve.", "fix stupid loader selection reverse logic bug", "fix pattern validation for debug images", "update fixed by @trautmane", "fix bug with RenderRA: include minZ offset when calculating z to send to render web services", "added local volatile implementation that exposes the VolatileCache for invalidation (will be fixed in imglib2-cache-1.0.0-beta17)", "fix bug if there are no points", "drawing cubic spline as well, fix trigger bug that @tpietzsch pointed out", "Add matchPattern query parameter to getStackTileIds API.  Fix tile id stream to use double quotes instead of single quotes to make it proper JSON.", "fixed test", "fixed spark implementations accordingly", "fixed stitched result visualization for cross correlation test case by using model inverse", "fixed arbitrary stops", "fix generics that compiled with Eclipse but not with the oracle JDK, fix one bug in a test", "Exclude manifest signature files to prevent invalid signature error when launching fiji.  Used mvn dependency:build-classpath with jarsigner verify idea from here: https://stackoverflow.com/a/54111506 to confirm org.bouncycastle jars were the problem.  Specifically, the bcpkix-jdk15on-1.62.jar and bcprov-jdk15on-1.62.jar files both contain entries whose signer certificate has expired\".  This fixes #105.\"", "fixed small bug and updated some comments", "fix remaining issues with pom-scijava changes from master branch merge", "Rename render's deprecated NonLinearTransform copy so that it does not cause duplicate class error with TrakEM2_ artifact.  Eventually it should be deleted altogether.  Leaving it here as a reminder that we need to fix old FAFB tile specs that reference it.", "Fix bug with calculating quality stats for combined SIFT and GD matches: use full scale feature processor sizes instead of scaled sizes.", "fix match trial UI to handle larger width p tile", "fix long standing bug so that normalized legacy TPS tiles are properly rendered in tile neighbors view", "npm audit fix for point match explorer javascript", "fix bug when clip parameters are not defined", "fix TilePairClient NPE", "fix bug", "fix hashCode and equals to include relativePosition", "fix default models for stitching", "improved error computing, sampling more points across the image. The reason that errors of stitching are not 0.0 is the use of regularized models in an iterative way when optimizing. There is always one specific model it corresponds to, but it is hard to find. Therefore the error is often ~1px or so", "looking at montage-only, there are still bugs", "fix bug if going out of range", "fix broken test", "can render problem areas, fix some small log issues", "properly visualize all kinds of errors and data in bdv after global or block-wise solve", "fix proper bdv rendering of data preview", "reorganized error computing and plotting, currently not building", "error work", "further working on error analysis", "added better error visualization, still testing", "as serializing matches creates very large object files and block-wise errors are quite close, made it an option to serialize them", "implemented first version of global error computing", "starting to implement global error computation", "storing matches in the worker so that we can additionally compute a real global error at the end", "more informative error output", "fix global error visualization", "fixed error computation if solveitem was split", "setting the global error model by thresholding (whichever solveitem has the higher weight at a certain position)", "fixed error computation", "fix JsonUtils.Helper fromJsonArray methods", "debugging error when computing errors, same-layer models seem to be the problem. Currently System.exit() after output.", "added code to compute errors on the fly when aligning (still buggy)", "fix output formatting", "fix id assignment bug", "fixed a bug in which z layers are assigned for regularization", "introduce fixed assignment of ids to SolveItemData objects as Spark restarts the JVM and thereby resets the atomic integer used for counting before", "fix deserializing visualization", "fix huge bug that prevented the first z plane from being regularized", "fix shade warnings: We have a duplicate au/com/bytecode/opencsv/...class in .../.m2/repository/au/com/bytecode/opencsv/2.4/opencsv-2.4.jar\"\"", "fix shade warning: We have a duplicate javax/xml/namespace/QName.class in .../.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar\"\"", "fixed a bug\" that also pre-aligns the first tile after all others are aligned\"", "fixed a bug that led to more grouped tiles being added than existed", "fixed a bug, each z layer can contain more than one grouped tile if they are connected above or below", "fixed a bug in the grouping, some wrong assignments, using new prealign", "implemented a prealign that prioritzes layers that are close to each other so that the error is more homogenously distributed also added a correct computeError method that has to update twice", "fixed serialize directory and imports", "remove redundant casts and fix incompatible types compilation error", "able to compute errors of tileconfigs", "fixed bug in prealign, updated the wrong tiles", "fixed deserialization code", "moved some static methods to SolveTools, fixed small bug in MultiThread", "fixed another bug in the local solve, actually using the lambdas and also doing a prealign (with Rigid for now) add capability for serializing the result after blocks are computed and a class that can work with the serialization result", "fixed a huge bug that led to overlap of the right blocks in most (except the test) cases", "fixed bug that unnecessarily added a lot of incorrect DummySolveItems that overwrote the actual transformations", "fix logs", "fix bugs that crashed when a section contains entirely of not connected tiles", "fix log statement", "fix: needed final Map<String, List<Double>> sectionIdToZMap from the init", "fixed another bug, DummySolveItem returned null for global model from hashmap", "fix nullpointer in DummySolveItem.java", "fixed another bug in splitting", "fixed two more bugs: using wrong key for hashmap, using wrong hashmap for visualization", "fixed the first bug, using right Set to compute connectivity of graph", "implemented first version of local stitching before solve, most likely still buggy", "fixed new implementation for global, distributed solve", "fixed bug in assembly of transformations", "fix NullPointer if parent class does not exist", "fixed accidental double-naming of packages", "fix accidental refactorings of re-implementations of the methods in the main repo", "fixing complex logic Sec08: // We leave out (or let hang): 15759, 15763,15764 // Connect layers: 15758-15760, 15762-15765, 15769-15770 // Keeping connections in the following sets {15760,15761,15762}, {15765,15766,15767,15768,15769}, {15770+} and leave 15763,15764 hanging and copy over", "fix Sec20 4851+4852 floating", "fix overlap Sec17 31250", "fix Sec15 27238", "fix Sec17 31250", "fix Sec16 15741 (to remove) properly", "fix properly Sec16 32168 (to remove)", "fix Sec08 15758", "fix Sec08 22103", "fix Sec12 18586", "fix Sec12 14384", "fix Sec12 8777", "fixing Sec16 layer 32166", "fixing layer 15739 of Sec16, single connections only for 15739,15740,15741", "fix comment", "fix Sec15 27140-27340", "fix saving (save the final transforms instead of the temporary ones), small adjustments", "fix saving to renderer imglib2-based rendering with linear interpolation do not destroy the models that are rendered load original images instead of transformed ones change default parameters", "running error visualization on different stack", "fixed lambda's (rigid to affine) split into abstract class and simple implementation that we keep ... doing the fully blocked implementation now", "fix bug in mergeOverlappingClusters", "grouping & fixing seems to work", "adding infrastructure for fixed and grouped tiles to allow partial solve with TrakEM2 solver", "run error vis on the full stack", "query TileSpec locally for z fix bug that crashed rendering if there are no matches in a z-layer", "added error visualization", "bug fix: need to apply clip offsets to post filtered combined matches", "fix match trial UI bug with display of peak count", "bug fix: add clip info to gd url template in SIFTPointMatchClient", "fix SIFT poor quantity counts", "fix summary time calculation in match trial UI", "Forrest's tile spec example in https://github.com/saalfeldlab/render/issues/24 just had bad bounding box data.  I misunderstood the true problem and made a hacky incorrect fix\".  The sloppy bounding box derivation introduced by Saalfeld in https://github.com/saalfeldlab/render/commit/ec462514fb3cff2400c90fac08e7e3c3a4200155 corrects Forrest's specific case but sloppy=false derivation still exposes the original problem.  This change removes my prior hack which was just wrong.  We still need to investigate the sloppy=false issue.\"", "fix peak list loader bug", "fix geometric descriptor match trial handling of clipped canvases", "remove unsupported GAUSSIAN_MASK_LOCALIZATION option and fix localization code mapping", "fixed @Ignore", "fix point match quality stats so that they better handle empty inlier match sets", "fix sigma parameters", "fixed match trial point match quality stat derivation to use aggregate fit for multi-consensus set scenarios", "Fix match result standard deviation calculation process to use world coordinates (from model) instead of local coordinates.  For translation models the results are similar but for rigid and affine models they are not.", "fix trakem2 solver bug: skip result save attempt when there is nothing to save", "fix stage position bug in rigid transform client", "fix max small cluster bug", "fix translate clusters client to set stack to loading when source and target stack are the same", "fix cut and paste error in trakem2 plugin docs", "fix trakem2 solver client bug: filter pGroupList to distinct set to prevent duplicate tile creation for split cluster stacks with the same pGroupId in different layers", "add check for reference transform error to trakem2 solver client", "fix tags for misplaced stack data delete APIs", "fix bug caused by new use of excludeMatchDetails query parameter in tile pair client", "use ephemeralForTest storage engine for embedded mongodb to fix super slow test run times on Mac (see https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo/issues/166 )", "fix viewScale bug in match trial script", "fix bug where tiles with matches to tiles not in stack were still considered connected", "fix bug with removeInvalidTiles option in ValidateTilesClient", "fix bug in match trial javascript", "fixed issue with cluster overlap problem rendering for keeper clusters", "fix tile optimizer client to work with stacks where one section is split across multiple zs (e.g. when separating connected clusters into different layers)", "add fix mask client", "fix bug in unconnected tile removal client", "fix mongo install instructions", "fix comment", "another point match explorer fix: remove hard coded stack resolution info and replace with dynamically retrieved stack meta data", "fix canvas clipping bug in tile pair viewer", "point match explorer bug fix: gracefully handle match tile pairs that do not have any matches", "for mipmap client, log error instead of throwing exception when existing stack mipmapPathBuilder info conflicts with info provided to client", "fix stupid bug that should have been caught in prior commit", "fix connecting logic in tile optimizer client", "fix better box cleanup prior run logic broken by my poor introduction of ip info into box data directory structure last march for the allen institute", "Incorporate match delta standard deviation metric into match clients and match trials since EM_Aligner uses it to toss out tile pairs during montage solves.  Finding and fixing match pairs with high deltas resolved large seam issues in FAFB v15 sections 2409, 3121, and 5068.", "Fixed bugs in label rendering that were causing poor DMG results.  Removed backgroundRGBColor parameter from BoxGenerator instances since white background required for DMG is now handled by new LabelRenderer.  Removed overview generation for label box render runs.  Added validateLabelsOnly option to box client that analyzes rendered label images by layer (z) to look for problems.", "fix label box render bug: sort tile specs by id to ensure consistent ordering before assigning label colors", "bug fix: render tile bounds when max tiles are zero for large data tile source APIs", "fix excludePairsInMatchCollection bugs when distance is zero (montage) - this really needs a unit test", "fix excludePairsInMatchCollection function broken by addition of relative position element to canvasId object", "bug fix: decode query parameters individually", "add completeStackAfterFix option to fix mipmap url client", "hack: render warp debug overlay when maxTileSpecsToRender is less than zero (this should be fixed properly!)", "fix JAVA_OPTIONS bug exposed by use of docker-compose", "Use jetty jre8 base image (instead of jre8-alpine) to work around openjdk-alpine issue with fonts ( see https://bugs.alpinelinux.org/issues/7372 ).  Upgrading jetty from 9.4.6 to 9.4.9 decreases the image size a bit and keeps us up-to-date, though the render-ws image size is still much larger (520 MB) than the alpine version (160 MB).  We can go back to the jetty alpine base if/when openjdk-alpine gets fixed.", "fix interpolated consensus warp field builder bug", "Add sync call to Dockerfile to work around sporadic 'text file busy' error.  This fixes #87.", "Bug fixes from discussion with Stephan: (1) when applying warp field transform, use warp field offsets for affine lookup but not for actual translation (2) when calculating full scale relative affine, concatenate split stack translation after re-scaling", "ndviz link fix (#84)", "second attempt to fix tile pair client bug with handling missing neighbor layers", "fix tile pair client bug with handling missing neighbor layers", "fix MONGO_HOST check when configuring docker container", "fix copy paste bug", "fix swagger download clean-up", "fix maven-resources-plugin platform encoding warning", "bug fix: need to scale consensus set points when assigning alignment results to warp field", "fix current collection mapping bug in multi collection match storage function", "fix typo", "fix missing commit", "fixed error message", "fix rough alignment bug: needed to translate scape alignment affine by min x y of montage layer", "fix zNeighborDistance bug in hierarchical stack getNeighborPairs method", "fix batch hierarchical point match derivation process bugs", "ensure max split stack scale is 1.0 and fix requiresAlignment logic bug", "Recommend Ubuntu 16.04 for basic installation example.  The maven build on Ubuntu 14.04 recently started failing with an SSL certificate error.  Not sure if this was an Ubuntu or a maven problem, but updating both fixes the problem.", "minor improvement to mipmap client bug fix", "Mip map fix (#72)", "Move trakem2 patch visibility check introduced by Forrest with commit 6036520df920deb0ee9ef91ad5240e6b1c95aec9 .  I think Forrest's change introduced a bug when the first layer is empty which is hopefully fixed now.  This fixes #70.  Unfortunately, we don't have unit tests for the trakem2 converter.  I'm hoping @fcollman and/or @templiert can verify this fix works and doesn't introduce any regressions.", "Cache clip offsets along with features during spark point match derivation.  Fixes yet another clip bug found by Russel.", "add clip offset debug logging to help identify bug source", "fix intensity mapping bug in channel spec constructor", "fixed clip logic bug found by Russel and added corresponding test case", "add gitattributes to fix repo language stats", "converter: fix for title as tileId (#67)", "add friendly error message for missing greadlink on Mac", "fixed bad test", "fixing sed seperator (#60)", "fixed script bug found by Forrest", "Upgrade RESTEasy from 2.3.7 to 3.1.4 to fix java 8 lambda parsing problem.  This bumped us to Servlet 3.1 and JAX-RS 2.  It also forced removal of service class @Path annotations with dynamic parameters - the parameters needed to be moved to method @Path annotations to get path resolution to work.  I'm not sure why the old annotations don't work, but it took me way too long to figure this out.", "fix bug rendering canvases that include some tiles with masks and other tiles without masks", "fixed incomplete handling of channel information", "turns out that mongo throws a write exception instead of duplicate key exception for duplicate key errors, modified shared transform save process to account for this", "fix section data filtering when explicit values but no min/max range are specified", "individually upsert each transform spec in the specified list, retrying if a duplicate key error occurs to work around mongodb concurrent update issues documented here https://jira.mongodb.org/browse/SERVER-14322", "improve error message when trying to render boxes for non-complete stack", "fix JDK_VERSION for install script broken by recent JDK_URL change", "Dockerfile java install fix (#39)", "oops - after all my blathering, neglected to fix the link - this should do the trick", "Applied Forrest's and Stephan's v1 intensity fix ( see https://github.com/saalfeldlab/render/pull/37/ ) to the v2 code base.", "Minmax filter fix (#37)", "Upgrade test flapdoodle embedded mongodb library to version 2.0.0 and referenced mongo version to V3_4 to fix intermittent problem running tests on OS X Sierra.  From https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo/issues/190 : ... under current macOs Sierra mongodb 3.2 does not function that well - mongotools (like mongorestore) are built with go 1.4.2 and macOs Sierra had some breaking changes (see https://github.com/golang/go/issues/17492 )", "fix raw tile test so that it works with float processor target introduced for multi channel support", "fix test bug", "fix label image processor cache bug introduced by convertTo16bit option added in April", "restore render box width and height for tile APIs that isolate source and mask images - previous fix was not a fix", "fix render box width and height for tile APIs that isolate source and mask images (bug found by Russel)", "fixed test messages", "add a couple of tiles to test data to expose query bug found by Forrest", "fix match URL bug in point match explorer", "Xorigin fix (#26)", "fix default parameters for point match explorer and add (hidden) support for one mergeCollection", "Correct stupid width and height calculation bug when deriving width and height for tile render parameters.  Refactor core logic into separate method to simplify testing. Add test to catch bug.  This fixes #24.", "make fix mipmap url client a little more resilient", "fix links in java client documentation", "fix links in java client documentation", "fix broken coordinate client test", "fix bug in writeCoordinatesWithTileIds", "fix splitMergedSections logic in java CopyStackClient to account for same section different z cases created by splitting acquired sections for alignment", "Upgrade swagger version to 1.5.12 to fix collectionFormat bug (multi default instead of csv) that caused query parameters for some API requests (e.g. cloning a stack with multiple z values) to be improperly formatted.  Re-order flapdoodle dependency to resolve commons-lang3 version conflict with swagger.", "fix bug when rendering without masks", "fix shutdown issues with embedded mongo used for unit tests; hide mongo process log spam when running unit tests", "minor log message fix", "fixed arity=0 when you have default=true, makes it impossible to set it =false (#18)", "Change SLF4J and logback download URLs from http to https since http endpoints are no longer available.  Forrest originally found and fixed this bug - thanks Forrest!", "fixed typo in logging message for delete point matches between tiles", "fixed the download link to point to the https as curl was breaking on the old one", "When normalizing tiles for matching, remove all but last 3 transforms (assumed to be lens correction).  This is a bug fix, as I previously removed all but the last 2 transforms.", "add hacks to catch pme errors when changing z range", "fix owner parameters for tile-with-neighbors link", "fix minor logging bug", "fix minor logging bug", "fix stack version data created by copy stack client", "remove faulty partial tile logic from box materialization ETA calculation", "update fix mipmap URL client to only save tile specs when changes are made", "update fix mipmap URL client to accept multiple replacements", "add fix mipmap URL client for tier2 to dm11 migration", "fix description", "second cut at supporting multi-channel load: get rid of primary/secondary channel idea, update mipmap clients to work with channels,  fix tests (they all should run now)", "fix CanvasMatches.size bug for empty matches", "fix minZ maxZ filter bug in sectionData API", "fix problem with highcharts tooltip box links by reverting from latest highcharts release to 4.2.6 (see http://www.highcharts.com/documentation/changelog )", "fix box regeneration logic", "add minZ and maxZ query parameters to sectionData APIs; fix tile pair client to use section ids when excluding matches from an existing collection", "add normalizeForMatching parameter to tile render-parameters APIs to fix stitching seams caused by tiles with different lens correction transforms", "fix import", "fix baseOwner bug in tile pair client", "fix point match scaling bug when render scale is not 1.0", "fix tile width and height bug", "ignore LLM client tests until they can be fixed", "restore fix auto loader scale client for Khaled", "fix arity for boolean point match client parameters", "fix width and height bug for tile render-parameters: width and height need to be derived from bounds because stored tile spec width and height reflect original values instead of transformed values", "fix null constructor issue for json load", "add fix auto loader scale client for Khaled", "fix javascript stack center point calculation", "fix api documentation link", "try to fix anchor link", "improve coordinate file read and write error messages", "fix bug with reporting of errors for unmapped coordinates", "fix log message", "fix collection name regex bug and refactor into shared utility class", "fix conversion bug for empty matches structure", "fix annotations", "fix obsolete comment", "hide mongodb driver cluster log spam until https://jira.mongodb.org/browse/JAVA-2136 gets fixed", "fix program class name used for command line client help text", "fix mongodb cluster config to support multiple servers with different ports", "fixed test broken by 3_2 mongodb upgrade", "show error message and usage info when command line parse fails", "add duplicate montage center error checking to warp client code", "fix delete section URL", "check error response content type when deriving messages for display", "fix render-ws-api links", "fix swagger text", "regenerate last generated box in prior run to repair partially saved data", "fix bug where not enough label colors were generated for layers with small numbers of tiles", "add core validation failure cause message to TemTileSpecValidator error message", "fix renderLargeDataOverview for stacks with negative minimum bounds", "fix CATMAID layer overview image generation bugs", "fix scale parameters for feature extraction test", "fix CATMAID overview image names for box removal client", "fix log message", "fix stack name regex bug and improve invlalid name error message", "fix comment", "fixed wrong bounding box calculation in RenderTransformMesh", "added in-triangle test methods and fixed bug in mapping that was passing the wrong reference to it", "fix iGrid number of rows and columns bug", "fix (the right way) layout file affine ordering to match Matlab needs", "fix layout file affine ordering to match Matlab needs", "fix misspelling of resolution in stack client parameters", "fix min max filter logic for group id queries", "fix unsaved snapshot removal process", "fix parameter description", "fixed description for schema", "fix resolution types", "fix label image processor cache to support down sampling", "fix clone insert bug that dropped one document per batch", "fix removeStack to actually drop collections instead of just removing documents", "fix cross test dependency issues", "fix optimization bug", "fix overview file name bug", "fix render section client parameters", "coordinate client bug fix: need to resolve transform references before mapping coordinates", "fixed missing alpha assignment and made minor comment and logging changes", "fix image processor cache concurrent load bug caused by naive reuse of ImageJ opener", "improve align stack client error detection and logging", "fix MET affine parameter order and add replaceAll option for align stack client", "fix BoxClient mipmap generation process to produce uniform size images for all levels", "fixed bug that prevented the same TileSpec instance from rendering correctly twice.  Renamed TileSpec.createTransformList() to getTransformList() because the method does not necessarily create a new instance.  Exactly this was the reason of the bug:", "fix bug that was hiding non-invertible transform errors", "embed error information in batch coordinate API responses", "fix location of loadMipStop recording", "fix bug with missing tile specs when applying base parameters", "second attempt at fixing bug where already down-sampled mask was getting down-sampled a second time", "fix bug where already down-sampled mask was getting down-sampled a second time", "fix usage statement for mipmap generator", "fix skipInterpolation option", "fix bug when creating a transform without validation", "fix file URL parsing bug", "Fixed JPG saving through converting INT_ARGB to INT_RGB. Previously, JPGs ended up being saved as four channel CMYKs.  Now, conversion goes through drawing the INT_ARGB image into an INT_RGB image which feels wasteful.  In addition, the signature of the Utils method changed to accept BufferedImage instead of RenderedImage which I do not like much either.  A better solution would be highly appreciated.", "fixed wrong parentheses and added missing quots for transform in generator beanshell"], "metric": [["4", "25", "55", "51", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "11"], ["1", "6", "22", "32", "1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "11", "155", "7", "1", "1", "8", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "2", "1", "4"], ["2", "5", "5", "12", "1", "2", "18", "232", "0", "0", "0", "0", "0", "0", "1", "0", "9", "1", "0", "0", "2", "0", "3", "3"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "63", "10", "1", "3", "6", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "2", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "3", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "5", "2", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "12", "1", "1", "4", "13", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "2", "1", "0", "1"], ["1", "1", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["5", "39", "87", "83", "1", "4", "31", "27", "1", "3", "15", "2", "0", "0", "1", "0", "0", "2", "0", "0", "5", "0", "0", "26"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "28", "7", "2", "4", "34", "10", "1", "2", "1", "5", "0", "0", "2", "2", "0", "2", "0", "0", "2", "2", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "6", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "2", "112", "0", "0", "0", "0", "1", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "1"], ["2", "3", "112", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "4", "0", "1"], ["1", "3", "16", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "2", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "7", "42", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "11", "31", "20", "1", "2", "16", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "3"], ["1", "2", "13", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "1"], ["2", "7", "13", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "1", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "8", "1", "1", "1", "41", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "33", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "48", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["1", "3", "4", "72", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "5", "5", "5", "1", "40", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "5", "75", "4", "1", "1", "1", "3", "5", "0", "0", "0", "0", "0", "1", "0", "0", "1", "1", "0", "3", "2", "0", "3"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["12", "42", "92", "62", "1", "4", "2", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "12", "1", "0", "19"], ["1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "134", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0"], ["1", "1", "9", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "45", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "6", "14", "6", "1", "1", "9", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "1", "1", "7", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "6", "15", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "4"], ["0", "0", "0", "0", "1", "8", "17", "12", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["2", "3", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["3", "7", "11", "12", "1", "1", "7", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "5"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "9", "25", "39", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["14", "32", "23", "58", "0", "0", "0", "0", "3", "6", "10", "29", "0", "0", "0", "0", "0", "0", "0", "0", "14", "0", "0", "13"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "4", "25", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "7", "11", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "4", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "12", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "7", "17", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "8", "11", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "1", "9", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["5", "11", "53", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "5", "1", "0", "5"], ["3", "8", "24", "50", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["1", "5", "39", "38", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "3"], ["3", "5", "198", "131", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "9", "-3"], ["1", "5", "7", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "6", "56", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "2"], ["4", "8", "147", "45", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "3", "4", "0", "1"], ["8", "18", "36", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "8", "0", "0", "8"], ["3", "8", "96", "66", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "1", "0", "2"], ["1", "3", "48", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["6", "12", "28", "16", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "5", "3", "6"], ["1", "5", "13", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "44", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "2"], ["1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "41", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "7", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["3", "3", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "3"], ["6", "20", "147", "39", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6", "6", "1", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "19", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["10", "29", "105", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "10", "4", "0", "14"], ["1", "5", "11", "30", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "2", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "7", "8", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "8", "44", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "13", "24", "34", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "3"], ["1", "1", "124", "31", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0"], ["1", "5", "6", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "7", "14", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "5", "5", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "13", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "10", "64", "60", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "3", "3", "5"], ["0", "0", "0", "0", "6", "21", "278", "54", "0", "0", "0", "0", "2", "0", "4", "8", "2", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "35", "18", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "3", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "36", "31", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "4", "5", "1", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "12", "6", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "15", "4", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "4", "6", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "5", "38", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "19", "182", "35", "0", "0", "0", "0", "0", "0", "3", "6", "1", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "6", "16", "108", "0", "0", "0", "0", "0", "0", "3", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "3", "13", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "6", "7", "7", "7", "0", "0", "0", "0", "0", "0", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["0", "0", "0", "0", "1", "9", "283", "60", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "7", "60", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "13", "13", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "12", "16", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "19", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "85", "17", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "11", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "10", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "8", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "8", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "10", "10", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "6", "42", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "4", "25", "8", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "11", "9", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "10", "26", "15", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "14", "109", "43", "0", "0", "0", "0", "0", "0", "1", "3", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "5", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "11", "408", "374", "0", "0", "0", "0", "1", "0", "1", "13", "0", "4", "0", "0", "0", "0", "0", "0"], ["1", "1", "42", "9", "1", "1", "39", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "10", "64", "9", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "12", "155", "28", "0", "0", "0", "0", "0", "0", "1", "1", "0", "5", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "4", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "2", "540", "1", "2", "2", "44", "1", "0", "0", "0", "0", "1", "0", "1", "3", "0", "0", "1", "0", "1", "10", "0", "0"], ["2", "2", "7", "5", "1", "3", "84", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "6", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "1", "2", "6", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "6", "29", "22", "1", "6", "6", "12", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "0", "3"], ["1", "1", "2", "3", "1", "1", "1", "1", "3", "5", "6", "6", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "14", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "6", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["10", "23", "138", "363", "1", "2", "0", "7", "2", "7", "36", "9", "0", "0", "1", "0", "0", "1", "1", "1", "8", "9", "12", "9"], ["4", "15", "77", "56", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "12", "4", "1"], ["1", "1", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "18", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "10", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "5", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "11", "35", "26", "1", "1", "17", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "3", "1", "1", "4"], ["1", "1", "2", "1", "1", "1", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "4", "15", "18", "1", "2", "14", "13", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "4", "31", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2"], ["1", "1", "198", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "8", "0", "0"], ["1", "4", "14", "6", "1", "2", "11", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "7", "4", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "5", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "58", "41", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "8", "15", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "6"], ["1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "30", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", "2"], ["1", "7", "17", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["8", "22", "421", "42", "2", "4", "52", "3", "1", "2", "31", "1", "0", "0", "2", "1", "0", "2", "1", "0", "7", "17", "1", "9"], ["8", "50", "631", "146", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "5", "30", "2", "26"], ["1", "4", "15", "12", "1", "3", "19", "10", "3", "12", "12", "0", "0", "0", "1", "1", "0", "2", "0", "0", "1", "0", "0", "3"], ["1", "1", "11", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "12", "54", "48", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "11"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "4", "5", "26", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "7", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "8", "15", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "10", "68", "42", "2", "3", "21", "71", "0", "0", "0", "0", "0", "0", "2", "1", "2", "1", "0", "0", "4", "2", "1", "4"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "17", "23", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "9", "1", "1", "5", "43", "4", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "15", "11", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "6", "81", "29", "0", "0", "0", "0", "1", "2", "9", "1", "0", "0", "0", "0", "0", "0", "1", "0", "1", "5", "0", "0"], ["2", "2", "13", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "7", "30", "19", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "9", "63", "29", "1", "1", "26", "2", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "4", "2", "5"], ["1", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "10", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "7", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "13", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["4", "8", "24", "23", "1", "1", "62", "0", "2", "1", "28", "0", "1", "0", "0", "1", "0", "0", "0", "0", "4", "2", "1", "4"], ["2", "2", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["4", "5", "32", "11", "1", "2", "39", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "4", "1", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["9", "150", "164", "186", "2", "6", "6", "16", "2", "9", "19", "30", "0", "0", "2", "0", "0", "2", "1", "0", "8", "0", "0", "8"], ["5", "18", "47", "29", "1", "1", "26", "0", "3", "1", "84", "0", "0", "0", "1", "1", "0", "0", "0", "0", "5", "3", "0", "7"], ["1", "4", "8", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "32", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "7", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "14", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["3", "12", "25", "33", "2", "2", "2", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "1", "0", "7"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "2", "4", "8", "4", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "9", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["3", "12", "21", "37", "2", "5", "7", "3", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "0", "0", "10"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "3", "8", "16", "17", "1", "1", "42", "0", "0", "0", "3", "0", "0", "7", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "5", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "10", "38", "21", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "57", "52", "1", "1", "44", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "4", "11", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "16", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "3", "14", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "3", "15", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "6", "7", "39", "39", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "18", "3", "1", "2", "69", "0", "0", "0", "0", "0", "0", "0", "1", "2", "0", "0", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "4", "29", "4", "3", "3", "12", "5", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "24", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "8", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "3", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "3", "15", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "37", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "1", "257", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "7", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["8", "23", "276", "223", "7", "21", "62", "38", "3", "4", "34", "28", "0", "0", "7", "0", "0", "11", "0", "0", "8", "13", "19", "9"], ["1", "1", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "14", "71", "16", "1", "2", "6", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "5", "3", "2", "7"], ["5", "9", "47", "37", "1", "2", "2", "4", "2", "4", "12", "2", "0", "0", "1", "0", "0", "1", "0", "0", "5", "0", "0", "7"], ["0", "0", "0", "0", "1", "1", "0", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "18", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "1", "5", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "164", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0"], ["2", "3", "20", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "6", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["1", "1", "164", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "3"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["2", "4", "8", "2", "1", "1", "51", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "2", "1", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "9", "74", "84", "2", "2", "112", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "1", "0", "2", "4", "4", "5"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "7", "22", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["15", "15", "17", "16", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "15", "0", "0", "15"], ["2", "8", "29", "38", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "2", "3"], ["0", "0", "0", "0", "1", "1", "8", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "21", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "8", "55", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "2", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "12", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "4", "105", "32", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "0", "1"], ["1", "4", "16", "13", "1", "2", "15", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "2"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "3", "7", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "7", "23", "15", "1", "4", "4", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "2", "0", "0", "3"], ["0", "0", "0", "0", "1", "3", "4", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3", "0", "0", "0", "0", "0", "0"], ["1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "4", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "14", "12", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "9", "90", "79", "1", "3", "64", "83", "0", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "2", "6", "2", "6"], ["3", "5", "33", "10", "1", "2", "37", "0", "1", "1", "6", "6", "0", "0", "1", "2", "0", "1", "0", "0", "3", "2", "0", "4"], ["1", "1", "4", "2", "1", "2", "22", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "3", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "5", "18", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5"], ["1", "12", "16", "16", "1", "4", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "0", "11"], ["2", "4", "49", "14", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "3", "1", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "3", "9", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "4", "36", "10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "8", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "5", "29", "75", "0", "0", "0", "0", "0", "1", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0"], ["1", "3", "26", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "3"], ["1", "1", "2", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "5", "23", "17", "1", "1", "67", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "2", "1", "1", "3"], ["3", "12", "14", "16", "0", "0", "0", "0", "3", "3", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "3", "0", "0", "5"], ["1", "3", "3", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "5", "46", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "2", "0", "4"], ["2", "11", "28", "17", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "0", "6"], ["3", "14", "347", "156", "1", "1", "143", "0", "4", "0", "0", "0", "1", "0", "0", "5", "0", "0", "1", "0", "2", "11", "5", "4"], ["4", "10", "22", "18", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "1", "1", "5"], ["4", "11", "53", "24", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "1", "0", "4"], ["2", "6", "80", "37", "1", "4", "33", "19", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "2", "0", "3"], ["1", "2", "9", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["2", "5", "18", "17", "1", "1", "25", "0", "7", "2", "171", "73", "0", "0", "1", "1", "0", "0", "0", "0", "2", "0", "0", "4"], ["2", "6", "13", "6", "1", "2", "29", "1", "10", "1", "58", "0", "0", "0", "1", "2", "1", "0", "0", "0", "2", "0", "0", "3"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "8", "6", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "1", "1", "36", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "6", "17", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1"], ["2", "5", "5", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]]}