{"number": ["1d0e4269eee58c41e8b585f5f2834bec15ba9c2c", "2846202392930b0c9bb004395c00d2c6cacb861e", "ac8a96928afe636575e149ef677f77b27c790ef6", "5537b8ea523ccee5870f6044702c918467bbc0e2", "f4a7d523a7324cfafc6fefb5d25ffd371715d8bb", "30aa574b09a12f0187f09482f8301dcf0cb88b17", "823d42b615f95dc927d9a91e52905df6adcf5769", "fc4fd779e4cd571e59b6f32b65f3fb3a95a439fc", "269043c35f6cf09bb62095115dabdcf6db8150e1", "c50692329ec69d0ae05a087ba8dffdcf355d3bcf", "75a473177366b7331446e16e18e039987db78720", "a64e1c0cf0f7528df31bc174533b9d5e30dc90be", "a60ca5e6e4e6ef21aad62b711707e3e6bebd7c38", "3540267e1f9e27287a8566c07c7336534c25b94f", "33f9f2477731b7a34d60f81198f81483aff71167", "a31e65993e000e4c737ec012092ab641177a9f16", "35111a16148fcc5755bc07b3b3b920a7357fb4d5", "501f89fd48cda7ea55ecdb2fc72e390b27d7d991", "a278d2e3e04a54628e6af2f822050618a29987a3", "068c79062ef9d46315c8eac8442ccd1fcbdb3dc8", "b2007b1390a16ab43bbde5c68bbe36ed7c15c603", "e731647a46b59fd49dcb465e1ef37ca07598b16a", "3281244cde520eff0e3fab6934b776a6dbfba5bb", "7286b587a60d11b13ecf7f15c8f9523f2a595ab2", "93ab90fb7293aa9acc61db788a8e1221cc35c3ad", "ce169729b054dceddc3aa903a96c5e944fa7fb80", "4d69e2cf1464f8361d02c6b0809c882802a9d209", "17a7b47cf4eb1ba097019ceb27b522877656c911", "c44203b1a0ae05707e35d9662b8bf5757f2a18e5", "34fd048cfd939b9e821de162be1270bf014cd658", "8f09082a3936b3463f87dbbd524758edf6fb8851", "aee52c9cc1bea6bc6927cee05479454144a57608", "8f4af9e6a756d263e69cfa22bdb4446e52967152", "5723f3b3ba7deb88c032554856cf453076abb09f", "d72df988387014b516fa4f6d3587e91dc4eefad2", "f532e7c09427ec9e376f4b4ebe890273d52fb366", "1f1efac5af333925b2e75d01eac46c6f99c556fd", "c7d5956aff79e7fc856127ee2c71cc6de69ce5af", "7078749bb29c9703b7de09a2eb50caae3533e97c", "b8bf70d619f2bca35bd30390c1b9b654458dbc00", "2ee188af3d9f8977a8db85fc8b3414d01de2043a", "f272b5615ff147b0747ef9a4fb700fd56252a691", "b40cf1889b68c6fb0343926df39cf642686d297f", "35b6df54cdf5ef972d650423a6b09fd24c9ce50b", "8d1db3226519c9fb128bff8e7daf81fbf11ecbf0", "5d1b4d5297f9f976fb0309fcf681c78baf656ad7", "1dc8b148ea34472e3c24b515e4dcec65fa6cebc1", "e3bbf58a617aa7477974ad2e0dd0f640eea5c95c", "0f9557ad0d544ec1335a9d79acd2d103e8fb2b1e", "664e811dddd7066c9d23a9aa2cb98063dc2c4934", "6bf3045cd2c8091a1be29d216e79c2d93587314f", "603c7f75d472e5cc3afb249fe67e3888a1aa5211", "9ba9b0475139d63e90bcb627b6ed4c5c9c5a84a1", "1dfa209e217684c239001794dc7b70c5d45960d6", "f4c7428435de5fea1ec50858a3c86e3f3069c8ec", "df9227e05d4a5e41b4e3ad28db19a6f243ae47c6", "bfe3e00c81e3013665012a890f26dc3ead86fea5", "706b1248d7acbe4fd44e1e67b0cf983be07db82b", "87f734f59d1f3d7c8a1fcabbe2528b1263eb9cb2", "e8f64f71ae954ed0e3f5a6ef4d1769da018b9225", "6d66eca09faef7619f50d4842a1725a12d923871", "663cdf363f2e9fe7ab44bb38c0d24abb52ddab34", "203f1e0383050eaafd57619ccf79e359ea3196ab", "c3a32aff15446f71ab0ef0238a84032c08ab954f", "48defb8e060b7fc0b9c9bd04eb2c260645a3cfe3", "42619baf8e72465747ff9a6d97499b4248753b0a", "fee94b334dc24f28b089046a48e07e38c7afacf2", "168958186b504f8fe8d882e34147ef1274938420", "a3df4db33944c5a3ccca0f88bb874186b304cc0d", "bf751b4ceae2f536d547c0ab3a3d96175a62ec3c", "45b24dd112352f73770f5002e5cb94568d83e742", "32cbc28f28a10814a97fdbfe5af2c09604d314c0", "9d8739df0da364599e9f57ddb711f74feca0a430", "c38e882fd65f49d8240609e98b5e161bccdb71e7", "8e268190c7ca541495e678d2ce1ac14128ea01a6", "f4d58539f248b71ad0f54907d17fbcc752af87f2", "41dcf9d5defe09c4c9f28a2404be55c9257f0a20", "22301f19008efe2d6591299ce63d848d929e7654", "6875a1f4171d365dc2f6d4dd0f0a490d11cbf23f", "1f952d99268a3cec3e66ccc469aeb6b6eafe2ed3", "1465b574df88244cd949e78d840ee468e00eead4", "d7e89044320dc2619abbc04f465beb0321854022", "88553749db9ede81cde4667faf029cdea987dae9", "3a447d0ce0881d91defa649fa5cef5ebf7a17f69", "9291204a76c145810cd3a2f60eda7820bad7977e", "4fb292238afc9808b89c1bfc38e5833b7be84f07", "fbf3c6fcb04f7df5b69f8cfbc0d4d6dc1f59bfd6", "cbf44c46f98dc24348f5e26cd486c06c72b3ca3e", "7d2cac8cd2d443d51d8eb924264556278d94c7d6", "824740a27de9015ab71b2453253cbca9e72d48e0", "5fcfd85e46befc1d5d0e04f93433f1797fb7ccaa", "d3d9dffff65fe38737247a3b46fcee2b2624ea1a", "a2bda1f71236ed7ecd7eb4a7af2c0034f3e93098", "ab7a9b0f4cfa35ae0736602aa7e0b1bd3aed275d", "caf239df428f163f7de563225987becdf6ca7786", "e230b1e8fceb9d822a05f5f5c4803070b1a563e6", "6e2b8763d461886601e64772be73f7b169d8a8a5", "088fd0ea9c900bdba22786b07ee4b519eb4638fa", "e3f3a8f040ebba645ca853a6bf0181fb3e31ea5d", "d9404c3b182480e465384e0cb354d9ba32dcfa6b", "2e9cb3eaf627327f3214ebd635d1291a5238cd71", "77ccd81dc2a651b55447e26acb55aed46c02ff65", "c1beeb10343b13855b06332607db9144fda7d2dc", "37f562ff4d4833efde76b4eaa320c5312101bf2a", "5dd6a5cf40bca92680547ba6f8370ef316aff955", "d716e44b15299040f4a116b0a484ef73bd375ce5", "55bfee5f0d92c19a72260c0cd0e40dfee01dc91d", "8a11a4392f30921f59bb114bca264eacd622f271", "55796621f412f18732f09d25c8e2bfbb349306b2", "5b1c213ab645b64105d10b30f9b4d5cfd4a3a272", "6305cabd7675718c07eab35f3ebab50ad4262f0f", "036ba3d2e47216df20ce3b1874cbeabfea46088a", "a694eee1144e91b12a488a68e2cf2e0d1acd434e", "2bb989418ac9612606d869baf8bec87929d54701", "9ca991094cb215584c9a1cded831dd310a852822", "cc903c42229960a712ebc8059e92974f7cd1a478", "77e8626e26c5aed8e401fa7d9929389b4f0c5db6", "67d26f9ea7fecb3fce51f798e5cefcb95616d0ed", "e899f4cf9eaee51eb277726aff95cba6b2580494", "ce11aa2d5cf6637b199c27e51a7fa2d4957cc277", "82f64e5d0475ee6e995084323a90e774588f8f9b", "790b9929e571540caafa1b06bd695b3549f9ea72", "94d5e46ddea745ac1f62e5824669b7a7708f8bbd", "4d3922a1fdb0919f61c37db02c240fa330adb10a", "c184687c876a548b026d63581e82f164b9c3c6b7", "f26a6da0f72975ca74bf8034a331e1f59f96c7c9", "cf09cc6792bdb56a7c5207b614fff155c69e092f", "576576da5500b9bca1ccb6554462a5594e9520ff", "49d6df267b8142d8e88e952a99fee80167267435", "b27f01791641393bcf56939c20680f7607c4b213", "81f8a719214f129c7aa324146f337a799511b110", "8ce1cfe5113879cccd6771c31b930230e1380fa0", "8b6da2b24a7abec3b8ec00d0db7fcf7cfce7fb61", "a6cbba39191458c007ebcb2be0b1083ee0d61560", "e5cb642b048f80cc3e3ca03e06df1c86cf26fb84", "2604504cf72d3fb7414df186904156f5f63d2f02", "f5423b25f548d98a23e90960fd955c79b6bc1b25", "e2c307561de28528b7941610f3ed3f46e6e31e09", "1db3de748f81dce1bb5a35ca3de115336d428d4c", "e3e94bef934a213484c1deee60f0d53f2ba7e3a2", "38185dd8083a872293fa555587ecd69d17809086", "06202f76b92e0b38e0539799eb81da3d20feeb0b", "0d510ec7bb27130bcb9c793b0c9d85bc9b45409f", "2f95f6241ecf0eca9dda65a6cdb8d2d84ea0c5dd", "85595b588a622d43e272f179be6fae194b109e5a", "6cd464943cfe60b6716aca768c191f8d7aff0767", "8bbd344cc71f94b0f97f89d18d45f75e0f26e0d2", "9905180cc971e5947ac6e3598237408941e61856", "97e5e704d3bbe1d6ff07fd12750c487e240c5408", "0cbae96450788f17ab051400412b005d23290466", "894a02a31a7d124bcffda0d2e1e57acfd5b8c942", "9a1b2be7f154f3004b08469c4a5b4161e95cde93", "0df90231857310423390709e34798bc49c68cc8c", "6af61ed7a6faa2aec9fbfe2a2ee8e51c967084e9", "d987c52fbab4f5fc92f2a4fac7be24d775c059a2", "d91eda3dc29bee08a1975a861888cd93bb7e0946", "5c48c62b382a32d773ad3781d5e1a4cc880a3283"], "father_version": ["2846202392930b0c9bb004395c00d2c6cacb861e", "d048d276ef1c200ae1e98d6cbe765653833162be", "5537b8ea523ccee5870f6044702c918467bbc0e2", "540926c35cd23a52437b8da1e6d62d75b67cbaa3", "12e880ccdbafffa362f50cbffc402aa2db901a2e", "c7db7a5d1b57524b173b26aeef18ffe3e96c6cef", "fc4fd779e4cd571e59b6f32b65f3fb3a95a439fc", "3cf2b06d3a660ae763977713e2e3d1095f8d250b", "ab3b899f6de1df76c98d4b5de6098da21ee37b9a", "217f794c7fdf1510e9a2bbdf5c55bc157644ad60", "a64e1c0cf0f7528df31bc174533b9d5e30dc90be", "a60ca5e6e4e6ef21aad62b711707e3e6bebd7c38", "9badbcc4593e797accfed5e51bec9f2b843f0f67", "e7963a6516e2cf338e1380b0fb769f7814b8e60c", "a31e65993e000e4c737ec012092ab641177a9f16", "6123edc764ff7cc6d0f36e3c3b1db554149fbd26", "fe7a496621653e16c712f334d47d2621baf04cd3", "2ab65a575f4446dc6583b6ecb27494f15f85bb4f", "b8fc8033506ba26b547fff49cd3522561c613600", "6d1215895f5bf5627b37022eb88a782ce2175a87", "e731647a46b59fd49dcb465e1ef37ca07598b16a", "43fbce34e4c4c9021575f9791f18d27f4710f94c", "c3aa1c33194ee64161e322dc0c4add949cf55090", "93ab90fb7293aa9acc61db788a8e1221cc35c3ad", "ce169729b054dceddc3aa903a96c5e944fa7fb80", "16ba2fbdaf057a54237af16cac3cecdbd6c3ff33", "1cdec2053024a8cfc6dabcc854149876ea68d206", "c44203b1a0ae05707e35d9662b8bf5757f2a18e5", "b66d1d1967e02f4bd4216c6b9bfbf696efd09f55", "d8766d5fdd6cb42b3ceaa03d63a3c942f74f8a9a", "30f31de1d16a21e4aa0d3e40cbaf540f88486e41", "8f4af9e6a756d263e69cfa22bdb4446e52967152", "e2ce863a2463db45254f34e3cd5f5705ee772c0b", "d72df988387014b516fa4f6d3587e91dc4eefad2", "1592bad61695935dfb175ec7fd6a2d93850eae9d", "38da70870713fd519a735b563f37ec89ef5cc5c2", "c7d5956aff79e7fc856127ee2c71cc6de69ce5af", "7078749bb29c9703b7de09a2eb50caae3533e97c", "e2f724d6e9d7427d67f1b717dcf730640f93168a", "4fa5fe6b34a02b6c7221e0401c3223c2b4e34666", "f272b5615ff147b0747ef9a4fb700fd56252a691", "a00cd0cf5951ea2b72db63153ac5f620d574821f", "f95e914e545669c93ae29eb1edc666f13e1dbedb", "7e21461141bc5b7f100fa32d2da4ba013b6aae64", "0d034e192544716d7f48b23b55d2b2b4d9bb1d88", "3565accdf38140adc16ea6e6fc0b7c95caec986a", "9661ae9bdd47f39ea8965adf0a23078bfc031481", "61d020dc1bd56073867ea3a9ed290f639392042e", "664e811dddd7066c9d23a9aa2cb98063dc2c4934", "72f57afe44803d61abbbff8cb242a286290ca2f3", "a846c17542e8eb9918f2ac5a8818f9f4c8173c72", "6f9f26241b2ac1b42657065bf6809f8d942387c0", "db8f0833b6b584095618b6de79aad29cf15f3ed4", "f4c7428435de5fea1ec50858a3c86e3f3069c8ec", "08eebf4f74f09c26951ac75c23fb74106cb61756", "3c87bc4355909bf83632467be99e1891d942d362", "860ae93ae8beae2bfbe81a79460a4fa70f9ea659", "87f734f59d1f3d7c8a1fcabbe2528b1263eb9cb2", "bc29659c791513eb2c305fb63705787662de4dbe", "6d66eca09faef7619f50d4842a1725a12d923871", "663cdf363f2e9fe7ab44bb38c0d24abb52ddab34", "5beb88ee0c426a40f4c467286d1f4cfdb995fb55", "005dae4df58770ed91620d1efc5e910c683630d5", "39178b7804830da5dd874e49f652d74f9677d9ab", "110ed123a7a05e5909d1bab3e7fc95d88d63f2f5", "e6713a2cc36fe926871fe9bd54cc70950c795e4e", "168958186b504f8fe8d882e34147ef1274938420", "fe0116750ba2fa7b8ac026f265aa88a8f3afe7d6", "66693014712a41cfbe948ddd2d05419e76f493a8", "14a7e362d65fbc1ef2c37bbcfb3f6f967e438071", "5f20dad8d08ef7f320392658deb3c3f92b6ee1c5", "8e6a40d3c590f02d015c089eb6234eca9f79bd16", "b078c1ca03d4b86603ae60db953d843d0bb5996e", "882656dc2788b3ae848a6db47cf49200858451ef", "1fcac30cbeca4db137500483b15ec4dabadcc659", "cbac5fa8181f5d015cd8b874976304dbe73357cb", "0a1fee00976e9444b0c6093ba1d28f73c0682db3", "43c12317c404b092a30f65b10a3c04ae18414748", "955b1ac23db147f4843cc6e3a6340325a1d3a370", "b35eae60c7ebc6a484ca7a371ca4f0cc23686f11", "8a92aaa9590acfd2c7eedd04a42b32172f386991", "34ab262804851a527a6fbc91d56bb6df760deaa5", "b5e5eb6e46c713a44575eba35d87933a4276ad4e", "2a143dbac5d7e5bab1532a616aacbaf26f5827a9", "4fb292238afc9808b89c1bfc38e5833b7be84f07", "fbf3c6fcb04f7df5b69f8cfbc0d4d6dc1f59bfd6", "46e241ca823cd6d899a8a03b3481d7846a51db3a", "9c36fc3277cf1b0b61a6b28e82f6304ec0ea58a9", "8c8135e7d9c40c7385f616ae4f8f0aabe31a39c0", "826da6c012fbab5ec0ccd4377132173aa6910ba3", "04000e3282ef133938fd77a8880077e26fc7d961", "ee258276ef4459338b2b90f371bf88c8e4c22fb2", "6dc2fe4d3dd656299bbf4fbac36c66fba92c6383", "caf239df428f163f7de563225987becdf6ca7786", "0aa1c3164cd6bd8c6ae1d4f6dc7f24373cdeb8cb", "687cf8d2d4e7589054b6c8ca79114e645fce42ad", "b8a296620dabecac71b41dfe19c084068d0eed04", "e3f3a8f040ebba645ca853a6bf0181fb3e31ea5d", "d9404c3b182480e465384e0cb354d9ba32dcfa6b", "8b2573d77570a758ce5d78f9e0af7a7b46d6fecb", "ebe8549f484831c203fbb8b711a38c1edf4622f1", "13f9595fd1e37edf07ad3b406534f68131a46f2e", "15fc66e928ebbb4abeaac7a2b485bf18f861ad99", "d799614acbc1a092860492f95a5a1c29c1d034c7", "eb49701133b7c14707350fd8392200cf01148a20", "01d6610d93908f09d56b6abc2f4221b1ec6ec918", "f2f10d5fbe452adf8c5cbb3bb5e1070e14228492", "55796621f412f18732f09d25c8e2bfbb349306b2", "ae6f444160986a9c4143ebdf2ed6cdfabaf49a7a", "f5ca7bef1744b335da28df081f2b0cd7fe67df72", "036ba3d2e47216df20ce3b1874cbeabfea46088a", "5f6b94e5d841049d792dee855f21cf99fdb562b7", "2bb989418ac9612606d869baf8bec87929d54701", "d5d04dcf6b1c8955802b14ea1ad11e85bffc061a", "deb5a276c6ef877669f6e87853cad98a9042b03b", "65608b516ce1d8190a5f1d812511421af17cc28e", "0c2d64b6f08c20f57138cb9c48190c2b1758ed22", "f8d220254158f53fd239e6e975dbda44383d29f0", "4a7c3cae1281d1aca476f5472b944e889404d075", "712aec0a25c59be237101fef194650c406f989ed", "c9762807f1e6a5d51f496f72fabcca6c484da9b9", "94d5e46ddea745ac1f62e5824669b7a7708f8bbd", "6684524d12295b41782ecdc378c8238b3504dea6", "6d6ff27e044ffe60389c901b65b86838dae8ce58", "84356db5e9f75d8a4ec563ae253aa80db0a99d2b", "2ad1533e8025685c2073f8c4a22bed62bc98db09", "475f26686ab835171de1cd2f63947820ede0f3ab", "c241be4a64d99fd26396b19f4fef37fb92757777", "d0dac5705979b4037dccf990050ecb998c8d41c2", "54b40a86614d5218159350297600de0a37c11ca8", "1a90410b753fd6965a790cef1427bbb16834809c", "cf6c41ea1f9f68d529147445da3904712d6326ec", "d3dd7c979b16329b61ec3a572b6de8b5930f43b3", "121e5a3ce5e1d547eeed7d2c58e8a389e256ca49", "370cab85a31a89243f4dabbcf97680e4417b853d", "80d8090c8beecfc7f4714842cc8a297d96c8d0e3", "e2c307561de28528b7941610f3ed3f46e6e31e09", "51012c9feba9f1859103fc0ea6dcfba9f20646cf", "437390c3c2c9f99ceab6d4ad8cdd695a82f28d0a", "74ce1b9befde83e3e2884478f2780728c2784a3a", "06202f76b92e0b38e0539799eb81da3d20feeb0b", "0d510ec7bb27130bcb9c793b0c9d85bc9b45409f", "48bdf01e5dfc3d814a5c7aeaea516d8d55fe5b4c", "1f48fcc3759cea99bf638e8d8616a5ea92874404", "6cd464943cfe60b6716aca768c191f8d7aff0767", "6a79be3a9e1095bc644a57ed1b8c9255caf56b2f", "8fd13179f211841fb50062a33b29dc982622e458", "bcb1cf3ba8eec7e91af241673ece867ca91d15aa", "066b2e40a6a1e8b95f5c4d2f49a2e35612e4cdba", "fc3e16d7c9b9ac1e48c38ced5771444528042021", "2cf14c11ca5a196186a7e89e3eb5207e8c163773", "0df90231857310423390709e34798bc49c68cc8c", "14eff96bc7703a0def1603dd74c232d1f8176fa9", "a335c7e38a98f31fe09ec715ba947b23ba5d20c5", "e180f2254df9d73f12f29ebd59f4837e6900b5bf", "1e8a18fe1fb460ec3474d6742e5e3a8c01c796b7", "13b94688ef879935ebca9c21e7ffb999bd3eeb21"], "commit": ["Fixed issue #140", "Fixed issue #140", "Fixed issue #139", "Fixed issue #133", "Moving junit to patched version, updating release to next version & fixing the repo URLs", "Fixing JaCoCo instrumentation.", "Fixing formatting", "Fixed issue #130", "Fixed issue #132", "Fixed issue #119 OpenPojo able to construct non static nested classes correctly.", "Fixed issue #127", "Fixed issue #125", "Fixed issue #123", "Fixing pom file spacing.", "Fixed issue #113", "Fixed Issue #95", "Added generator for KerberosTime to fix possible failures on random generation Credentials", "Fixing an issue with sub class generation failing.", "Fixing expected class count on java 1.8", "Fixed the orderd of expected vs actual.", "Fixed a corner case if the constructor is private on an AbstractClass to skip and not override.", "issue #89 fixed. OpenPojo will now generate an implimentation for all abstract methods and return random values unless it's a call to toString(), then the generated class path will be generated.", "Fixed a minor edge case where Interface that extends serializable was failing due to serialVersionUID missing.", "Issue #102 fixed.", "Minor fix for initializing BusinessKeys in pojos with random values even if they are primitive.", "Issue #107 fixed.", "Issue #112 fixed", "Fixing javadoc", "issue #109 fixed OpenPojo will now generate default values for all @BusinessKey annotated fields when it generates the enclosing class.", "Issue #108 fixed Refactored and cleaned up the classpath loading to be more robust, no longer needing sun.boot.classpath.  Also made more robust failures to detect values in environment variables.", "Fixing spelling errors.", "Issue #100 fixed, this issue causes OpenPojo to fail to create subclasses when the abstract class being generated has a protected method before its public constructor.", "Issue #86 fixed, Validator interface now returns a List <PojoClass> for the classes that were validated when using the bulk operations: validate(String packageName, PojoClassFilter... filters); validateRecursively(String packageName, PojoClassFilter... filters);", "Issue #88 fixed, GetterMustExistRule will now ignore any synthetic field in a pojo while testing. Interestingly, all Synthetic fields are final, hence are already ignored by SetterMustExistRule.", "issue 92 fixed, serialVersionUID is now automatically skipped if class is Serializable, and serialVersionUID defined as long. Additionally, NoFieldShadowingRule now supports field names to skip when checking for shadowing.", "issue 98 fixed, added support for java.util.TimeZone random generation.", "Fixed issue 85 - removing @Nullable annotation.", "Fixed issue 85", "Fixed issue 85", "Fixing incorrect comment on class.", "Refactoring AbstractTimeTest to enable reusability. Fixed a minor issue with reporting expected vs. actual.", "Fixed a corner case modifying int from many threads by moving counter to AtomicInt.", "Making BusinessIdentityTester thread safe. Fixing IdentityFactoryRaceConditionTest to detect failures correctly and to reuse Validator.", "Fixing Java doc.", "Fixing the calculation for the number of leap years in 100 years.", "Fixed issue #82", "fixing a typo.", "Fixing test as PojoClassFactory no longer throws exceptions when building class.", "Fixing invalid comment.", "Fixing an issue where the ASM not loaded exception was not being thrown properly.", "Fixing sort order for ServiceRegistrarTest classes.", "Improved error message when failing to generate a URL.", "Fixed issue 72. Added support for UUID.", "fixing Javadocs.", "Fixed the BusinessIdentity.toString() to handle Arrays properly.", "fixing a typo in the java doc.", "Fixing issue #68.", "Fixing a minor issue with failing to detect loaded annotations properly.", "Fixed the equality and hashCode for mult-idimensional arrays.", "Fixing some javadoc errors.", "Fixed a corner case when doing equality on objects that have arrays and first array has an element that is null. Also Fixed some javadoc errors.", "fixing JavaDocs as well as the failure message.", "Fixing end of line character.", "Simplified PriorityQueue and fixed test for checking assignability.", "A fix for RandomGenerator failing to generate random value when enum has not values defined, will throw an exception with proper messaging.", "Suppressing warning and fixed a typo.", "Fixed a typo in the JavaDoc.", "Fixed a typo in the exception message.", "Fixing a spelling error in a private method name, as well as a spelling error in the exception message.", "Fixed an issue with parameterized collections causing random failures (Collection<sometype>).", "Fixed an issue with parameterized collecitons causing random failures (Collection<sometype>).", "Fixed an issue with parameterized collecitons causing random failures (Collection<sometype>).", "A quick fix for Logger detection issue causing the logger to assume SLF4J loaded when it wasn't.", "Fixing the environment variable for clover to skip tests when -DskipTests=true is set.", "Fixing issue 56", "Ensuring the EnumRandomGenerator calls the correct values method. Fixed issue 55", "fixing a typo in javadoc", "Added a test for externally loaded classes, now GetPath works with zip & jar files. Also fixed two minor issues when the classes are loaded on a separate class loader and turned into PojoClass's.", "Fixed a minor issue with getting a specific annotation on a method parameter.  Added better testing on PojoParameter.", "Fixing a spelling typo.", "Removed coupling between Logging framework & PojoClass framework. Fixed issue 50.", "Removing possible issue due to not overriding equals on Comparable, and fixed name spelling on SerializableComparableObject.", "Fix nested Non Static Class", "Uncommented and fixed test.", "Fixed issue 43.", "Fixed Issue 46", "minor fix for the jvm check script.", "Fixed issue 47", "Fixing Clover3 test to work with other instrumentation loaded and / or Clover4.", "Fixing the order of register and adding values.", "Cleaned up code duplication in JUnit & Java Affirmations. Fixed an issue when TestNG throws null pointed when expected is array and actual is null, arrays equality now being fully handled by OpenPojo.", "fixed another issue with the constructor comparison to handle if Synthetic Constructor is first in the list.", "Fixing class count test in sample package.", "Adding isSynthetic() to PojoMethod and fixing bug with InstanceFactory attempting to use Synthetic constructor.", "fixing stub implementing interface.", "Fixing spelling mistakes.", "Making the getter a bit more leniant to allow assignable types to be accepted as valid getters. Fixed issue 31", "Fixed a test assertion regarding the classname, name changed with VM update.", "Fixing issue 35.", "Fixing a misspelled word.", "Fixed a typo", "Fixing a typo.", "fixed an issue when tests were being attempted 4 times and run 3 times.", "Fixed issue 26. Added support for bypassing the BusinessIdentity testing when validating Entities that have default constructor but is not sufficient to handle @BusinessKeys.  GetterTester & SetterTester rules modified accordingly.", "Fixing java docs parameters' names", "Fixing issue 27. Fixing minor issue with getter return type mis-match with local field type.", "Minor bug fix in test ensuring proper validation.", "Added a fix to handle if the openpojo is run from a network filesystem (eg. Windows \\\\machine-name\\path\\to\\code)", "Fixed edge case for dynamically generating classes going into infinit loop if there is a cyclic dependency. Refactored and cleaned the RandomFactory. Added the ability to generate equivalent\" type without registering generator for it.  For example if you have a random generator that generates LinkedLists", "removed unnecessary method, fixed comments and parameter name.", "Fixed issue 22.", "Fixing typos in the Java Doc.", "Adding new Filter to filter pojo's by classname.  Fixed issue 20.", "Moved some of the Java 6 collections to dynamic behaviour to re-enable OpenPojo to run in 1.5 environments.  Fixed issue 21", "fixed a spelling mistake and indentation.", "Fixing the documentation for the Map generators", "Fix for bug 19", "fixing a string equality from == to .equals.", "fixed spelling error.", "added tests for the JARPackageLoader, and fixed one minor issue with getting classes from within a jar file.", "Fixed the two tests that needed to be skipped due to clover instrumentation.", "added an extra method on PojoClass (getSourcePath), still experimental. Fixed a minor issue with classes being enumerated multiple times when a package spans multiple physical paths on the file system.", "exception enumeration on deploy target fixed.", "fixed typo in Javadoc", "Fixed a minor bug with BusinessIdentityTester, and is now fully backed by tests (100% coverage).", "fixing the java docs.", "Fixing an issue when you have your package mapping -> path mapping not a 1 to 1. (i.e. multiple paths dealing with one package structure)", "fixed a minor issue with InstanceFactory failing to create when constructor requires native\" parameters (i.e. int", "First pass on cleaning up the underlying logging framework and testing. JavaLogger is now 100% covered as well as SLF4J. error level now routes to JavaLogger.SEVERE.", "Adding support for EnumSet. Fixed issue 14.", "Fixing issue 14, adding Class random generator, and delayed setting accessiblity\" to true till the need to invoke methods.\"", "fix release plugin config", "Fixed issue 12.", "Fixing JavaDoc comments.", "Fixing a typo (inovke instead of invoke) thanks to Hawk N...", "minor timezone fix.", "fixed the message formating was missing a parameter.", "fixing class name.", "adding Java doc and tweak on error messages.", "fixed documentation on the BusinessPojoHelper", "Fixed build (minor changes in sample test classes broke build.xml)", "removed incorrect comment.", "Fixed bug with PojoValidator throwing exceptions while running tests against non-concrete classes.", "minor tweaks to catch errors on dynamic loading.", "Added newInstance(Object... objects) tests, and fixed one minor bug.", "Added newInstance(Object... objects) tests, and fixed one minor bug.", "minor typo in Javadocs fix", "fixed a missing java doc comment on param and return for getHashCode(Object)", "fixing method name incorrect.", "renamed BusinessKey.ignoreCase to BusinessKey.caseSensitive. Fixed tests accordingly and clarified more on the BusinessKey documentation.", "Fixed two null pointer exceptions, and renamed the annotation isRequired to required. Changed the static initialization by the IdentityFactory to go through the setters.", "Fixed Java doc comment.", "fixed formatting, and fixed a simple bug with BasicRandomGeneratorTest when testing Boolean randoms.", "Fixed a corner case bug when you have a Logical Loop\" in random generation by utilizing threadLocal to cache types already in progress.  Also added tests so random factory is now 100% coverage.\"", "Fixing a space issue in the manifest.", "fixed the build.xml to utilize the junit-4.8.1.jar file under lib.", "Minor bug with Byte generation fixed, and added RandomFactory tests."], "metric": [["0", "0", "0", "0", "1", "1", "35", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "1", "2", "15", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "3", "5", "59", "4", "0", "0", "0", "0", "1", "0", "2", "2", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "6", "5", "1", "1", "6", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "5", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["4", "8", "75", "42", "8", "14", "106", "30", "0", "0", "0", "0", "1", "1", "6", "4", "2", "6", "0", "0", "4", "0", "0", "12"], ["2", "6", "13", "7", "7", "9", "147", "1", "0", "0", "0", "0", "6", "0", "1", "14", "0", "0", "0", "0", "2", "0", "0", "3"], ["1", "3", "24", "10", "5", "6", "149", "1", "0", "0", "0", "0", "2", "0", "3", "16", "0", "0", "0", "0", "1", "3", "0", "2"], ["0", "0", "0", "0", "2", "5", "52", "7", "0", "0", "0", "0", "1", "0", "1", "3", "0", "1", "0", "0", "0", "0", "0", "0"], ["4", "11", "83", "10", "1", "1", "26", "4", "1", "1", "1", "1", "0", "0", "1", "3", "1", "1", "0", "0", "4", "4", "0", "5"], ["1", "2", "4", "1", "1", "1", "53", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "3", "15", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "3", "67", "0", "4", "4", "68", "1", "0", "0", "0", "0", "3", "0", "1", "6", "0", "0", "1", "0", "1", "6", "0", "1"], ["3", "10", "34", "8", "2", "3", "22", "2", "0", "0", "0", "0", "1", "0", "1", "1", "0", "1", "0", "0", "3", "2", "0", "5"], ["2", "3", "31", "0", "2", "3", "26", "1", "0", "0", "0", "0", "1", "0", "1", "3", "0", "1", "1", "0", "1", "4", "0", "1"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "2", "2", "2", "2", "3", "31", "0", "0", "0", "0", "0", "1", "0", "1", "4", "0", "-1", "0", "0", "2", "0", "0", "2"], ["20", "23", "570", "30", "10", "13", "266", "4", "0", "0", "0", "0", "7", "0", "3", "11", "0", "3", "15", "0", "5", "45", "1", "5"], ["1", "1", "1", "1", "2", "3", "9", "8", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "4", "7", "1", "3", "4", "20", "1", "0", "0", "0", "0", "1", "0", "2", "1", "0", "0", "0", "0", "2", "1", "0", "1"], ["1", "3", "1", "4", "2", "4", "29", "3", "0", "0", "0", "0", "1", "0", "1", "2", "0", "3", "0", "0", "1", "0", "0", "1"], ["1", "3", "1", "3", "3", "5", "26", "1", "0", "0", "0", "0", "2", "0", "1", "2", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "4", "65", "0", "6", "6", "193", "1", "0", "0", "0", "0", "4", "0", "2", "24", "0", "1", "2", "0", "1", "7", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "11", "1", "8", "12", "116", "6", "0", "0", "0", "0", "5", "0", "3", "9", "0", "3", "0", "0", "1", "1", "0", "1"], ["4", "8", "88", "85", "1", "4", "30", "26", "0", "0", "0", "0", "0", "0", "1", "14", "0", "8", "1", "1", "2", "10", "9", "1"], ["3", "5", "7", "7", "1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "3", "0", "0", "3"], ["1", "1", "1", "1", "2", "5", "24", "2", "0", "0", "0", "0", "1", "0", "1", "4", "0", "1", "0", "0", "1", "0", "0", "1"], ["2", "3", "6", "4", "1", "6", "14", "5", "0", "0", "0", "0", "0", "0", "1", "0", "0", "5", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "2", "3", "12", "4", "0", "0", "0", "0", "0", "0", "2", "1", "0", "4", "0", "0", "1", "0", "0", "1"], ["1", "3", "31", "4", "5", "5", "146", "0", "0", "0", "0", "0", "5", "0", "0", "9", "0", "0", "0", "0", "1", "3", "0", "1"], ["2", "4", "39", "2", "4", "5", "57", "3", "0", "0", "0", "0", "2", "0", "2", "5", "0", "1", "1", "0", "1", "4", "0", "1"], ["1", "3", "0", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "5", "104", "7", "3", "3", "199", "0", "0", "0", "0", "0", "3", "0", "0", "21", "0", "0", "1", "0", "1", "2", "0", "1"], ["1", "2", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "3", "9", "16", "14", "0", "0", "0", "0", "0", "0", "3", "6", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "3", "28", "14", "0", "0", "0", "0", "0", "0", "1", "1", "0", "4", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "5", "72", "42", "0", "0", "0", "0", "0", "0", "2", "5", "0", "7", "0", "0", "0", "0", "0", "0"], ["1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "3", "10", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "5", "90", "1", "5", "6", "167", "3", "0", "0", "0", "0", "4", "0", "1", "16", "0", "0", "2", "0", "1", "8", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["2", "3", "35", "7", "4", "4", "123", "0", "0", "0", "0", "0", "3", "0", "1", "11", "0", "0", "1", "0", "1", "4", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "5", "1", "2", "5", "44", "0", "0", "0", "0", "0", "1", "0", "1", "4", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "5", "36", "1", "6", "6", "173", "0", "0", "0", "0", "0", "6", "0", "0", "19", "0", "0", "1", "0", "2", "4", "0", "1"], ["0", "0", "0", "0", "1", "4", "18", "7", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["1", "4", "23", "26", "3", "5", "84", "10", "0", "0", "0", "0", "2", "0", "1", "8", "0", "6", "0", "0", "1", "0", "0", "4"], ["12", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "12", "0", "0", "0"], ["1", "3", "4", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "3", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "11", "14", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "1", "1", "2"], ["1", "2", "4", "0", "1", "1", "17", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "2", "2", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1"], ["5", "9", "119", "1", "5", "8", "248", "25", "0", "0", "0", "0", "3", "0", "2", "12", "0", "3", "3", "0", "2", "11", "0", "1"], ["2", "4", "11", "9", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["8", "24", "76", "33", "5", "8", "128", "2", "0", "0", "0", "0", "2", "0", "3", "8", "0", "2", "0", "0", "8", "2", "0", "8"], ["3", "7", "27", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "3", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "2", "1", "3", "3", "50", "0", "0", "0", "0", "0", "3", "0", "0", "4", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "1", "2", "2", "41", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "1", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "6", "23", "11", "1", "1", "63", "0", "1", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "2", "1", "0", "5"], ["1", "3", "11", "6", "1", "4", "85", "7", "0", "0", "0", "0", "0", "0", "1", "5", "0", "3", "0", "0", "1", "0", "0", "2"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["3", "7", "56", "23", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "3", "4", "1", "6"], ["5", "10", "20", "9", "2", "19", "31", "34", "0", "0", "0", "0", "0", "0", "2", "0", "0", "16", "0", "0", "5", "3", "0", "3"], ["2", "5", "25", "4", "1", "1", "52", "0", "0", "0", "0", "0", "1", "0", "0", "7", "0", "-4", "0", "0", "2", "2", "0", "3"], ["0", "0", "0", "0", "3", "4", "41", "51", "0", "0", "0", "0", "0", "0", "3", "6", "3", "2", "0", "0", "0", "0", "0", "0"], ["1", "4", "22", "2", "2", "2", "80", "0", "0", "0", "0", "0", "2", "0", "0", "7", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "3", "12", "5", "3", "4", "45", "2", "0", "0", "0", "0", "2", "0", "1", "4", "0", "2", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "7", "0", "3", "3", "71", "0", "0", "0", "0", "0", "3", "0", "0", "8", "0", "0", "0", "0", "1", "0", "0", "2"], ["1", "1", "1", "1", "3", "6", "14", "19", "0", "0", "0", "0", "0", "0", "3", "0", "1", "3", "0", "0", "1", "0", "0", "1"], ["1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2"], ["3", "6", "39", "45", "2", "4", "9", "7", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "1", "0", "2", "3", "2", "2"], ["1", "3", "11", "8", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "4", "12", "4", "3", "5", "36", "0", "0", "0", "0", "0", "1", "0", "2", "4", "0", "0", "0", "0", "2", "1", "0", "1"], ["0", "0", "0", "0", "1", "1", "5", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "1", "0", "0", "0", "0", "0", "0"], ["20", "29", "22", "25", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "20", "1", "1", "4"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["2", "6", "26", "15", "1", "1", "47", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "1", "0", "1", "1", "1", "2"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "27", "57", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "27", "0", "5", "7", "185", "12", "0", "0", "0", "0", "3", "0", "2", "17", "0", "0", "1", "0", "0", "5", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["4", "18", "43", "27", "3", "3", "50", "0", "0", "0", "0", "0", "3", "0", "0", "4", "0", "0", "0", "0", "4", "1", "0", "14"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "2", "8", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["5", "9", "195", "101", "6", "8", "88", "0", "0", "0", "0", "0", "5", "0", "1", "8", "0", "0", "3", "0", "2", "11", "3", "3"], ["2", "3", "1", "4", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "1", "1"], ["1", "4", "15", "0", "4", "4", "250", "0", "0", "0", "0", "0", "4", "0", "0", "32", "0", "6", "0", "0", "1", "2", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "2", "19", "0", "1", "1", "26", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "1", "0", "1", "2", "0", "0"], ["2", "5", "29", "13", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "0", "0", "1"], ["4", "6", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "1"], ["2", "3", "10", "8", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "0", "0", "2"], ["1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "2", "1", "1", "2", "2", "116", "0", "0", "0", "0", "0", "2", "0", "0", "5", "0", "0", "0", "0", "1", "0", "0", "1"], ["0", "0", "0", "0", "2", "6", "28", "9", "1", "1", "0", "7", "0", "0", "2", "0", "0", "4", "0", "0", "0", "0", "0", "0"], ["4", "7", "25", "25", "2", "5", "15", "4", "0", "0", "0", "0", "0", "0", "2", "2", "0", "1", "0", "1", "3", "1", "4", "-1"], ["0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "5", "5", "109", "3", "0", "0", "0", "0", "4", "0", "1", "7", "0", "1", "0", "0", "0", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "8", "46", "32", "1", "2", "8", "3", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "2", "3", "3", "4"], ["1", "1", "38", "1", "2", "3", "15", "0", "0", "0", "0", "0", "1", "0", "1", "2", "0", "0", "0", "0", "1", "1", "0", "1"], ["1", "2", "26", "6", "14", "35", "654", "237", "0", "0", "0", "0", "9", "0", "5", "54", "9", "25", "0", "0", "1", "0", "0", "6"], ["3", "6", "64", "1", "3", "3", "74", "0", "0", "0", "0", "0", "3", "0", "0", "4", "0", "0", "1", "0", "2", "2", "0", "2"], ["3", "5", "38", "1", "2", "2", "56", "0", "0", "0", "0", "0", "2", "0", "0", "4", "0", "0", "1", "0", "2", "4", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "3", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "1", "1", "123", "0", "0", "0", "0", "0", "1", "0", "0", "20", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "2", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["3", "6", "13", "4", "2", "3", "2", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "2", "0", "0", "3", "1", "0", "2"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "1", "2", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["1", "2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "2", "2", "3", "3", "1", "2", "5", "2", "0", "0", "2", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "1", "2", "2", "4", "0", "0", "0", "0", "0", "0", "1", "0", "0", "2", "0", "0", "0", "0", "0", "0"], ["3", "5", "20", "5", "6", "7", "41", "17", "0", "0", "0", "0", "3", "0", "3", "2", "1", "4", "1", "0", "2", "2", "0", "0"], ["2", "2", "3", "3", "1", "1", "1", "2", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "2", "0", "0", "2"], ["0", "0", "0", "0", "4", "4", "59", "0", "0", "0", "0", "0", "4", "0", "0", "7", "0", "-4", "0", "0", "0", "0", "0", "0"], ["1", "1", "5", "4", "1", "1", "140", "0", "0", "0", "0", "0", "1", "0", "0", "21", "0", "0", "0", "0", "1", "0", "0", "1"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["2", "2", "2", "2", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2", "1", "1", "1"], ["4", "6", "7", "7", "2", "2", "5", "5", "0", "0", "0", "0", "0", "0", "2", "0", "0", "0", "0", "0", "4", "0", "0", "4"], ["4", "5", "18", "5", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4", "0", "0", "2"], ["1", "2", "3", "3", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"], ["0", "0", "0", "0", "9", "14", "19", "25", "0", "0", "0", "0", "0", "0", "9", "0", "1", "6", "0", "0", "0", "0", "0", "0"], ["3", "4", "51", "2", "4", "8", "84", "24", "0", "0", "0", "0", "2", "0", "2", "10", "1", "1", "2", "0", "1", "5", "0", "1"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "1", "2", "12", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["2", "5", "5", "2", "1", "1", "82", "0", "0", "0", "0", "0", "1", "0", "0", "4", "0", "0", "0", "0", "2", "0", "0", "1"]]}